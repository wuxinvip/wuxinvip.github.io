<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无心の技术簿</title>
  
  <subtitle>时光荏苒、不浮青春.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wuxinvip.com/"/>
  <updated>2018-10-15T08:11:35.546Z</updated>
  <id>http://www.wuxinvip.com/</id>
  
  <author>
    <name>无心</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>timestamp 转 date 少一天</title>
    <link href="http://www.wuxinvip.com/2018/08/24/essay/essay-14/"/>
    <id>http://www.wuxinvip.com/2018/08/24/essay/essay-14/</id>
    <published>2018-08-24T00:00:00.000Z</published>
    <updated>2018-10-15T08:11:35.546Z</updated>
    
    <content type="html"><![CDATA[<p>timestamp 时间为 GMT</p><p>而我们数据库大都设置时区GMT+8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 根据long类型时间戳 获取当前date  添加时区判断</span><br><span class="line"> * @param timestamp</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public static Date getDateByLongTime(Long timestamp)&#123;</span><br><span class="line"></span><br><span class="line">    TimeZone.setDefault(TimeZone.getTimeZone(&quot;GMT+8&quot;));</span><br><span class="line">    Calendar c = Calendar.getInstance(TimeZone.getTimeZone(&quot;GMT+8&quot;));</span><br><span class="line">    c.setTime(new Date(timestamp));</span><br><span class="line">    return c.getTime();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;timestamp 时间为 GMT&lt;/p&gt;
&lt;p&gt;而我们数据库大都设置时区GMT+8&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s
      
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="exception" scheme="http://www.wuxinvip.com/categories/java/exception/"/>
    
    
      <category term="随笔" scheme="http://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>关于学习方法的一些思考</title>
    <link href="http://www.wuxinvip.com/2018/08/21/essay/essay-7/"/>
    <id>http://www.wuxinvip.com/2018/08/21/essay/essay-7/</id>
    <published>2018-08-21T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.932Z</updated>
    
    <content type="html"><![CDATA[<p>关于学习方法的一些思考</p><p>在构建自己的技术图谱中、添加了一个open messaging<br>突然看到这个图</p><p><img src="/img/essay/img/思考学习方式.png" alt="如图"></p><p>添加了一个open messaging</p><p>那么我要回忆每个消息组件 功能特性、使用场景、使用限制、有哪些危险、这大概就是方法论？</p><a id="more"></a><p>渐渐的形成、我要做一个全新的东西、我需要面对什么样的问题、我需要解决什么样的问题</p><p>初次所有的东西都需要灵感？</p><p>而成长的人拼的是 方式方法、这大概是荟萃、就像所有的所学留下的才是精华</p><p>计算机世界？</p><p>从</p><ul><li><p>硬件、【硬件的内存、存储容量】</p></li><li><p>运行系统、【win 、linux、mac】</p></li><li><p>支撑系统运行的文件系统形式、【ext、ntfs等等】</p></li><li><p>容器、虚拟机【在系统基础上 支撑更多兼容软件的运行】</p></li><li><p>软件、【软件开发者、软件运行内存、线程、】</p></li><li><p>软件运行需要环境【端口、网卡、协议通讯】</p></li></ul><p>一个好的协议能够更好的承载和扩容通讯消息</p><p>一个好的网卡能够承载更多的请求量</p><p>端口则是软件监听器、也是软件的服务暴露接口</p><h2 id="优化原理"><a href="#优化原理" class="headerlink" title="优化原理"></a><strong>优化原理</strong></h2><p>搞java得想学系统运行原理 mysql文档第八章【也可见本博客专栏《sql优化》】 mysql优化 必不可少、一举两得、</p><p>从文件IO并发量、线程、文件系统支撑文件IO量、软件配置、sql优化、缓存优化、</p><p>对于软件优化、在每个方面都有优化、相对于任何一款软件都可以从这几个方面入手优化</p><p>不同之处就是、优化的参数不一样</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于学习方法的一些思考&lt;/p&gt;
&lt;p&gt;在构建自己的技术图谱中、添加了一个open messaging&lt;br&gt;突然看到这个图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/essay/img/思考学习方式.png&quot; alt=&quot;如图&quot;&gt;&lt;/p&gt;
&lt;p&gt;添加了一个open messaging&lt;/p&gt;
&lt;p&gt;那么我要回忆每个消息组件 功能特性、使用场景、使用限制、有哪些危险、这大概就是方法论？&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="http://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="随笔" scheme="http://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>腾讯COS 阿里OSS 七牛 备份脚本</title>
    <link href="http://www.wuxinvip.com/2018/08/20/essay/essay-4/"/>
    <id>http://www.wuxinvip.com/2018/08/20/essay/essay-4/</id>
    <published>2018-08-20T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.827Z</updated>
    
    <content type="html"><![CDATA[<p>腾讯COS 阿里OSS 七牛 备份脚本</p><p>#20171017:代码重构,支持将网站上传到腾讯云COS、阿里云OSS、七牛云存储.(v0.1.0)</p><p>#20171018:修复cos.conf判断错误.(v0.1.1)</p><p>#20171023:增加阿里云多站点备份.(v0.1.2)</p><p>#20171025:增加腾讯云多站点备份.(v0.1.3)</p><p>#20171029:修复阿里云下crontab不能正常上传bug(v0.1.4)</p><p>#20171030:修复阿里云/腾讯云修改key后，备份报错问题。移动pip判断到相应位置（v0.1.5）</p><p>#20171202:修复腾讯云与阿里云周期删除失败BUG(v0.1.6)</p><p>#20171204:修复mysqldump某些小bug.(v0.1.7)</p><p>#20180112:增加更新源地址、修改小bug(v0.1.8)</p><p>#20180524:更新腾讯cos上传。(v0.1.9)</p><p>#20180603:日常修复</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#Scripts Name:itxg(beta)</span><br><span class="line">version=0.2.0</span><br><span class="line">#Owner:shengbao</span><br><span class="line">#Support URL:shengbao.org</span><br><span class="line">#Update URL:shengbao.org</span><br><span class="line">#Changelog:</span><br><span class="line">#20171017:代码重构,支持将网站上传到腾讯云COS、阿里云OSS、七牛云存储.(v0.1.0)</span><br><span class="line">#20171018:修复cos.conf判断错误.(v0.1.1)</span><br><span class="line">#20171023:增加阿里云多站点备份.(v0.1.2)</span><br><span class="line">#20171025:增加腾讯云多站点备份.(v0.1.3)</span><br><span class="line">#20171029:修复阿里云下crontab不能正常上传bug(v0.1.4)</span><br><span class="line">#20171030:修复阿里云/腾讯云修改key后，备份报错问题。移动pip判断到相应位置（v0.1.5）</span><br><span class="line">#20171202:修复腾讯云与阿里云周期删除失败BUG(v0.1.6)</span><br><span class="line">#20171204:修复mysqldump某些小bug.(v0.1.7)</span><br><span class="line">#20180112:增加更新源地址、修改小bug(v0.1.8)</span><br><span class="line">#20180524:更新腾讯cos上传。(v0.1.9)</span><br><span class="line">#20180603:日常修复</span><br><span class="line">stty erase &apos;^H&apos;</span><br><span class="line">backuptime=`date +%Y%m%d`</span><br><span class="line">rmbackuptime=`date -d &quot;-&quot;$rmdate&quot; days&quot; +%Y%m%d`</span><br><span class="line">#更新选项</span><br><span class="line">        case $1 in</span><br><span class="line">                update)</span><br><span class="line">                        echo 正在下载更新,请稍后....</span><br><span class="line">                        rm -rf itxg.sh &gt;&gt; /dev/null 2&gt;&amp;1</span><br><span class="line">                        wget --spider -q -o /dev/null  --tries=1 -T 5 shengbao.org</span><br><span class="line">                        if [ &quot;$?&quot; -eq 0 ];then </span><br><span class="line">                            wget https://shengbao.org/tools/itxg.sh</span><br><span class="line">                        else</span><br><span class="line">                            wget http://update.itxueguan.com/itxg.sh</span><br><span class="line">                        fi</span><br><span class="line">                        mv itxgt.sh $0</span><br><span class="line">                        echo &quot;更新完毕.请重新运行&quot;$0&quot;&quot;</span><br><span class="line">                        exit 0</span><br><span class="line">                ;;</span><br><span class="line">        esac</span><br><span class="line">#更新选项结束</span><br><span class="line">#判断是否存在更新版本</span><br><span class="line">v=`curl https://shengbao.org/tools/itxg.sh|awk NR==3|awk -F= &apos;&#123;print $2 &#125;&apos;`</span><br><span class="line">clear</span><br><span class="line">if [ `expr $version \&gt; $v` -eq 0 ] &amp;&amp; [ `expr $version \= $v` -eq 0 ];then</span><br><span class="line">        echo 有更新,请退出后输入命令:sh &quot;$0&quot; update ,10秒后继续....</span><br><span class="line">        sleep 10</span><br><span class="line">else</span><br><span class="line">        echo 无更新,2秒后继续...</span><br><span class="line">        sleep 2</span><br><span class="line">fi</span><br><span class="line">#判断更新结束</span><br><span class="line">if [ ! -f itxg.conf ];then</span><br><span class="line">cat &gt;itxg.conf &lt;&lt;EOF</span><br><span class="line">####----公共----####</span><br><span class="line">#当前配置文件版本</span><br><span class="line">conf_version=$version</span><br><span class="line">#enable=tengxun为开启备份到腾讯,qiniu为备份到七牛,aliyun为备份到阿里云</span><br><span class="line">enable=</span><br><span class="line">#备份周期0天为不删除备份文件</span><br><span class="line">rmdate=0</span><br><span class="line">#开启数据库备份yes,no</span><br><span class="line">db_enable=no</span><br><span class="line">#需要备份的网站目录，绝对路径末尾不需要加/</span><br><span class="line">backup_file=</span><br><span class="line">####----多站点----####</span><br><span class="line">#是否支持多站点,默认为关闭</span><br><span class="line">multistation=no</span><br><span class="line">#数字从0开始，因此2个站点该数字写1</span><br><span class="line">multisitenumber=1</span><br><span class="line">#上传到一个bucket下的不同目录,例如:shengbao itxueguan</span><br><span class="line">multlist=(shengbao itxueguan)</span><br><span class="line">#多站点备份路径,2个站点路径中间以空格分割。绝对路径末尾不需要加/</span><br><span class="line">backup_filelist=(/data1 /data2)</span><br><span class="line"></span><br><span class="line">####----数据库----####</span><br><span class="line">#数据库用户名</span><br><span class="line">DB_USER=</span><br><span class="line">#数据库密码</span><br><span class="line">DB_PASS=</span><br><span class="line">#数据库连接地址</span><br><span class="line">DB_HOST=localhost</span><br><span class="line">#数据库名称</span><br><span class="line">DB_NAME=</span><br><span class="line">#多站点数据库名称列表</span><br><span class="line">multdblist=(shdb itxgdb)</span><br><span class="line">####----腾讯----####</span><br><span class="line">#你的bucket名称</span><br><span class="line">txbucketname=</span><br><span class="line">#腾讯secret_key</span><br><span class="line">txsecret_key=</span><br><span class="line">#腾讯txappid</span><br><span class="line">txappid=</span><br><span class="line">#腾讯访问api区域，北京一区华北(ap-beijing-1),北京(ap-beijing),华东(ap-shanghai),华南(ap-guangzhou),西南(ap-chengdu),新加坡(ap-singapore),香港(ap-hongkong),多伦多(na-toronto),法兰克福(eu-frankfurt)</span><br><span class="line">txregion=</span><br><span class="line">####----阿里云----####</span><br><span class="line">#你的bucket名称</span><br><span class="line">albucketname=</span><br><span class="line">#阿里云access_id</span><br><span class="line">alaccess_key_id=</span><br><span class="line">#阿里云secreret_key</span><br><span class="line">alaccess_key_secret=</span><br><span class="line">#阿里云endpoint</span><br><span class="line">alendpoint=</span><br><span class="line">####----七牛----####</span><br><span class="line">#你的证书ID</span><br><span class="line">qnak=</span><br><span class="line">#你的证书key</span><br><span class="line">qnsk=</span><br><span class="line">#你的bucket名称</span><br><span class="line">qiniubucket=</span><br><span class="line">####----结束----####</span><br><span class="line">EOF</span><br><span class="line">        echo &quot;5秒后退出,请编辑`pwd`/itxg.conf&quot;</span><br><span class="line">        sleep 5</span><br><span class="line">        exit 0</span><br><span class="line">fi</span><br><span class="line">. ./itxg.conf</span><br><span class="line">rmbackuptime=`date -d &quot;-&quot;$rmdate&quot; days&quot; +%Y%m%d`</span><br><span class="line">#判断itxg.conf文件是否被编辑</span><br><span class="line">if [ -z $enable ];then</span><br><span class="line">        echo &quot;请先编辑:`pwd`/itxg.conf后执行&quot;$0&quot;&quot;</span><br><span class="line">        sleep 3</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line">if [ `expr $conf_version \&gt; $version` -eq 0 ] &amp;&amp; [ `expr $conf_version \= $version` -eq 0 ];then</span><br><span class="line">        sed -i &quot;s/$conf_version/$version/g&quot; itxg.conf</span><br><span class="line">else</span><br><span class="line">        echo &quot;配置文件版本为:&quot;$conf_version&quot;检查完毕&quot;</span><br><span class="line">fi</span><br><span class="line">#判断itxg.conf文件是否被编辑结束</span><br><span class="line"></span><br><span class="line">#判断本地空间是否满足需求</span><br><span class="line">if [ &quot;$multistation&quot; == no ];then</span><br><span class="line">dfs=`df |awk &apos;NR==2&apos;&apos;&#123;print $4&#125;&apos;`</span><br><span class="line">dus=`du -s /&quot;$backup_file&quot;|awk &apos;&#123;print $1&#125;&apos;`</span><br><span class="line">if [ &quot;$dfs&quot; -lt &quot;$dus&quot; ];then</span><br><span class="line">    echo &quot;磁盘空间不能满足备份要求....2秒后退出&quot;</span><br><span class="line">    sleep 2</span><br><span class="line">else</span><br><span class="line">    echo &quot;磁盘空间检查完毕...&quot;</span><br><span class="line">    sleep 2</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">#判断本地空间是否满足需求完毕</span><br><span class="line">#开始压缩需要备份的网站,并将压缩后文件保存在/itxg目录下</span><br><span class="line">qiniu_backup_file=/itxg/&quot;$backuptime&quot;.tar.gz</span><br><span class="line">if [ $db_enable = yes ];then</span><br><span class="line">    if [ &quot;$multistation&quot; == no ];then</span><br><span class="line">        /usr/local/mariadb/bin/mysqldump --opt -u$DB_USER -p$DB_PASS -h$DB_HOST $DB_NAME  &gt; $backup_file/$backuptime.sql</span><br><span class="line">        echo &quot;Warning: Using a password on the command line interface can be insecure.为正常&quot;</span><br><span class="line">    fi</span><br><span class="line">    if [ &quot;$multistation&quot; == yes ] &amp;&amp; [ ! -z &quot;$multisitenumber&quot; ];then</span><br><span class="line">        for((msnb=0;msnb&lt;=&quot;$multisitenumber&quot;;msnb++));do</span><br><span class="line">        /usr/local/mariadb/bin/mysqldump --opt -u$DB_USER -p$DB_PASS -h$DB_HOST $&#123;multdblist[&quot;$msnb&quot;]&#125;  &gt; $&#123;backup_filelist[&quot;$msnb&quot;]&#125;/$backuptime.sql</span><br><span class="line">        done</span><br><span class="line">    fi</span><br><span class="line">else</span><br><span class="line">    echo &quot;数据库备份关闭&quot;</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$multistation&quot; == no ];then</span><br><span class="line">    if [ ! -d /itxg ];then</span><br><span class="line">        mkdir /itxg</span><br><span class="line">    fi</span><br><span class="line">    if [ -f /itxg/*.tar.gz ];then</span><br><span class="line">        rm -rf /itxg/*.tar.gz</span><br><span class="line">        echo &quot;删除上次本地备份,开始压缩文件... ...&quot;</span><br><span class="line">        tar -czvf /itxg/&quot;$backuptime&quot;.tar.gz &quot;$backup_file&quot; &gt;&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">        rm -rf $backup_file/$backuptime.sql</span><br><span class="line">        echo &quot;压缩文件完成... ...&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;开始压缩文件... ...&quot;</span><br><span class="line">        tar -czvf /itxg/&quot;$backuptime&quot;.tar.gz &quot;$backup_file&quot; &gt;&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">        rm -rf $backup_file/$backuptime.sql.gz</span><br><span class="line">        echo &quot;压缩文件完成... ...&quot;</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line">#结束压缩小备份的网站，并将压缩后的文件保存在/itxg目录下</span><br><span class="line">#多站点压缩开始</span><br><span class="line">if [ &quot;$multistation&quot; == yes ] &amp;&amp; [ ! -z &quot;$multisitenumber&quot; ];then</span><br><span class="line">    for((msnb=0;msnb&lt;=&quot;$multisitenumber&quot;;msnb++));do</span><br><span class="line">    if [ ! -d &quot;/itxg/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;&quot; ];then</span><br><span class="line">        mkdir -p /itxg/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;</span><br><span class="line">    fi</span><br><span class="line">if [ -f &quot;/itxg/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;&quot;/*.tar.gz ];then</span><br><span class="line">         echo &quot;开始压缩文件... ... &quot;</span><br><span class="line">        rm -rf &quot;/itxg/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;&quot;/*.tar.gz</span><br><span class="line">        tar -czvf &quot;/itxg/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;&quot;/&quot;$backuptime&quot;.tar.gz &quot;$&#123;backup_filelist[&quot;$msnb&quot;]&#125;&quot; &gt;&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">        rm -rf &quot;$&#123;backup_filelist[&quot;$msnb&quot;]&#125;&quot;/$backuptime.sql</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">        echo &quot;开始压缩文件... ...&quot;</span><br><span class="line">        tar -czvf &quot;/itxg/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;&quot;/&quot;$backuptime&quot;.tar.gz &quot;$&#123;backup_filelist[&quot;$msnb&quot;]&#125;&quot; &gt;&gt;/dev/null 2&gt;&amp;1</span><br><span class="line">        rm -rf &quot;$&#123;backup_filelist[&quot;$msnb&quot;]&#125;&quot;/$backuptime.sql.gz</span><br><span class="line">fi</span><br><span class="line">#数据库备份开始</span><br><span class="line">#数据库备份结束</span><br><span class="line">done</span><br><span class="line">fi</span><br><span class="line">#多站点压缩结束</span><br><span class="line">#腾讯云开始</span><br><span class="line">if [ &quot;$enable&quot; == tengxun ];then</span><br><span class="line">    if [ -z &quot;$txbucketname&quot; ] &amp;&amp; [ -z &quot;$txaccess_id&quot; ] &amp;&amp; [ -z &quot;$txappid&quot; ] &amp;&amp; [ -z &quot;$txsecret_key&quot; ] &amp;&amp; [ -z &quot;$txregion&quot; ];then </span><br><span class="line">    echo &quot;腾讯云配置检查失败&quot;</span><br><span class="line">    exit 1    </span><br><span class="line">fi</span><br><span class="line">#检查coscmd环境</span><br><span class="line">    if [ -f /bin/coscmd ];then</span><br><span class="line">        echo &quot;coscmd检测完毕&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;coscmd检测失败，开始安装.&quot;</span><br><span class="line">#检查pip环境</span><br><span class="line"></span><br><span class="line">if [ -f /bin/pip ];then</span><br><span class="line">        echo &quot;pip检测完毕&quot;</span><br><span class="line">else</span><br><span class="line">        echo &quot;pip检测失败，开始安装.&quot;</span><br><span class="line">        yum install -y python-pip</span><br><span class="line">        pip install --upgrade pip</span><br><span class="line">fi</span><br><span class="line">#检查pip环境结束</span><br><span class="line">        git clone https://github.com/tencentyun/coscmd.git</span><br><span class="line">        cd coscmd &amp;&amp; python setup.py install </span><br><span class="line">    fi</span><br><span class="line">#检查coscmd环境结束</span><br><span class="line">#检查./.cos.conf环境开始</span><br><span class="line">    if [ -f ~/.cos.conf ];then</span><br><span class="line">        echo &quot;cos.conf检测完毕&quot;</span><br><span class="line">rm -rf ~/.cos.conf</span><br><span class="line">        coscmd config -a &quot;$txappid&quot; -s &quot;$txsecret_key&quot; -b &quot;$txbucketname&quot; -r &quot;$txregion&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;cos.conf检测失败,开始安装.&quot;</span><br><span class="line">        coscmd config -a &quot;$txappid&quot; -s &quot;$txsecret_key&quot;  -b &quot;$txbucketname&quot; -r &quot;$txregion&quot;</span><br><span class="line">    fi</span><br><span class="line">#检查./.cos.conf环境结求</span><br><span class="line">#上传开始</span><br><span class="line">    if [ &quot;$multistation&quot; == no ];then</span><br><span class="line">        coscmd upload -r /itxg/&quot;$backuptime&quot;.tar.gz &quot;$backuptime&quot;.tar.gz &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">#        if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">#            echo &quot;腾讯云上传完成&quot;</span><br><span class="line">#        elif [ &quot;$?&quot; -eq 255 ];then</span><br><span class="line">#            echo &quot;腾讯云上传完成&quot;</span><br><span class="line">#        else </span><br><span class="line">#            echo &quot;腾讯云上传失败&quot;</span><br><span class="line">#        fi</span><br><span class="line">    fi</span><br><span class="line">    if [ &quot;$multistation&quot; == yes ] &amp;&amp; [ ! -z &quot;$multisitenumber&quot; ];then</span><br><span class="line">        for((msnb=0;msnb&lt;=&quot;$multisitenumber&quot;;msnb++));do</span><br><span class="line">            coscmd upload -r &quot;/itxg/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;&quot;/&quot;$backuptime&quot;.tar.gz  &quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$backuptime&quot;.tar.gz &gt;/dev/null</span><br><span class="line">#            if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">#                echo &quot;腾讯云&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$backuptime&quot;.tar.gz上传完成&quot;</span><br><span class="line">#             elif [ &quot;$?&quot; -eq 255 ];then</span><br><span class="line">#                echo &quot;腾讯云&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$backuptime&quot;.tar.gz上传完成&quot;</span><br><span class="line">#            else</span><br><span class="line">#                echo &quot;腾讯云&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$backuptime&quot;.tar.gz上传失败&quot;</span><br><span class="line">#             fi</span><br><span class="line">        done</span><br><span class="line">   fi</span><br><span class="line">#上传结束</span><br><span class="line">#腾讯云删除开始</span><br><span class="line">    if [ ! -z &quot;$rmdate&quot; ];then </span><br><span class="line">        if [ &quot;$multistation&quot; == no ];then</span><br><span class="line">             coscmd delete -f &quot;$rmbackuptime&quot;.tar.gz &gt;/dev/null</span><br><span class="line">            if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">                echo &quot;腾讯云&quot;$txbucketname&quot;/&quot;$rmbackuptime&quot;.tar.gz删除结束&quot;</span><br><span class="line">            elif [ &quot;$?&quot; -eq 255 ];then</span><br><span class="line">                echo &quot;腾讯云&quot;$txbucketname&quot;/&quot;$rmbackuptime&quot;.tar.gz删除结束&quot;</span><br><span class="line">            else</span><br><span class="line">                echo &quot;腾讯云&quot;$txbucketname&quot;/&quot;$rmbackuptime&quot;.tar.gz删除失败&quot;</span><br><span class="line">            fi</span><br><span class="line">        fi</span><br><span class="line">        if [ &quot;$multistation&quot; == yes ];then</span><br><span class="line">            for((msnb=0;msnb&lt;=&quot;$multisitenumber&quot;;msnb++));do</span><br><span class="line">                coscmd delete -f &quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$rmbackuptime&quot;.tar.gz &gt;/dev/null</span><br><span class="line">                if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">                    echo &quot;腾讯云&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$rmbackuptime&quot;.tar.gz删除结束&quot;</span><br><span class="line">                elif [ &quot;$?&quot; -eq 255 ];then</span><br><span class="line">                    echo &quot;腾讯云&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$rmbackuptime&quot;.tar.gz删除结束&quot;</span><br><span class="line">                else</span><br><span class="line">                    echo &quot;腾讯云&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$rmbackuptime&quot;.tar.gz删除失败&quot;</span><br><span class="line">                fi</span><br><span class="line">            done</span><br><span class="line">        fi</span><br><span class="line">    else</span><br><span class="line">        echo &quot;备份周期为永久，请注意COS存储使用情况...&quot;</span><br><span class="line">    fi</span><br><span class="line">#腾讯云删除结束</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#阿里云开始</span><br><span class="line">if [ &quot;$enable&quot; == aliyun  ];then</span><br><span class="line">    if [ -z &quot;$albucketname&quot; ] &amp;&amp; [ -z &quot;$alaccess_key_id&quot; ] &amp;&amp; [ -z &quot;$alaccess_key_secret&quot; ] &amp;&amp; [ -z &quot;$alendpoint&quot; ];then</span><br><span class="line">        echo &quot;阿里云配置失败&quot;</span><br><span class="line">        exit 1</span><br><span class="line">    fi </span><br><span class="line">    if [ ! -f ./ossutil64 ];then</span><br><span class="line">        wget http://docs-aliyun.cn-hangzhou.oss.aliyun-inc.com/assets/attach/50452/cn_zh/1506525299111/ossutil64?spm=5176.doc50452.2.3.7XHxTz</span><br><span class="line">        mv ossutil64?spm=5176.doc50452.2.3.7XHxTz ossutil64</span><br><span class="line">chmod 777 ossutil64</span><br><span class="line">    fi</span><br><span class="line">#阿里云配置检查</span><br><span class="line">    if [ -f .ossutilconfig ];then </span><br><span class="line">        echo &quot;ossutil配置检测完毕&quot;</span><br><span class="line">rm -rf `pwd`/.ossutilconfig</span><br><span class="line">`pwd`/./ossutil64 config -e &quot;$alendpoint&quot; -i &quot;$alaccess_key_id&quot; -k &quot;$alaccess_key_secret&quot; -L EN </span><br><span class="line">    else </span><br><span class="line">        echo &quot;ossutil配置检测失败,开始配置&quot;</span><br><span class="line">       `pwd`/./ossutil64 config -e &quot;$alendpoint&quot; -i &quot;$alaccess_key_id&quot; -k &quot;$alaccess_key_secret&quot; -L EN </span><br><span class="line">    fi</span><br><span class="line">#阿里云配置检查结束</span><br><span class="line">#阿里云上传开始</span><br><span class="line">    if [ &quot;$multistation&quot; == no ];then</span><br><span class="line">    `pwd`/./ossutil64 cp -f /itxg/&quot;$backuptime&quot;.tar.gz  oss://&quot;$albucketname&quot;</span><br><span class="line">        if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">            echo &quot;阿里云&quot;$backuptime&quot;.tar.gz上传完成&quot;</span><br><span class="line">        elif [ &quot;$?&quot; -eq 255 ];then</span><br><span class="line">            echo &quot;阿里云&quot;$backuptime&quot;.tar.gz上传完成&quot;</span><br><span class="line">        else</span><br><span class="line">            echo &quot;阿里云&quot;$backuptime&quot;.tar.gz上传失败&quot;</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">    if [ &quot;$multistation&quot; == yes ] &amp;&amp; [ ! -z &quot;$multisitenumber&quot; ];then</span><br><span class="line">        for((msnb=0;msnb&lt;=&quot;$multisitenumber&quot;;msnb++));do</span><br><span class="line">    `pwd`/./ossutil64 cp -f &quot;/itxg/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;&quot;/&quot;$backuptime&quot;.tar.gz  oss://&quot;$albucketname&quot;/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/ &gt;/dev/null</span><br><span class="line">    if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">                echo &quot;阿里云&quot;$albucketname&quot;/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$backuptime&quot;.tar.gz上传完成&quot;</span><br><span class="line">            elif [ &quot;$?&quot; -eq 255 ];then</span><br><span class="line">                echo &quot;阿里云&quot;$albucketname&quot;/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$backuptime&quot;.tar.gz上传完成&quot;</span><br><span class="line">            else</span><br><span class="line">                echo &quot;阿里云&quot;$albucketname&quot;/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$backuptime&quot;.tar.gz上传失败&quot;</span><br><span class="line">            fi</span><br><span class="line">        done</span><br><span class="line">    fi</span><br><span class="line">#阿里云上传结束</span><br><span class="line">#阿里云删除开始</span><br><span class="line">if [ ! -z &quot;$rmdate&quot; ];then</span><br><span class="line">    if [ &quot;$multistation&quot; == no ];then</span><br><span class="line">        `pwd`/./ossutil64 rm oss://&quot;$albucketname&quot;/&quot;$rmbackuptime&quot;.tar.gz &gt;/dev/null</span><br><span class="line">        if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">            echo &quot;阿里云&quot;$albucketname&quot;/&quot;$rmbackuptime&quot;.tar.gz删除结束&quot;</span><br><span class="line">        elif [ &quot;$?&quot; -eq 255 ];then</span><br><span class="line">            echo &quot;阿里云&quot;$albucketname&quot;/&quot;$rmbackuptime&quot;.tar.gz删除结束&quot;</span><br><span class="line">        else</span><br><span class="line">            echo &quot;阿里云&quot;$albucketname&quot;/&quot;$rmbackuptime&quot;.tar.gz删除失败&quot;</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">    if [ &quot;$multistation&quot; == yes ] &amp;&amp; [ ! -z &quot;$multisitenumber&quot; ];then</span><br><span class="line">        for((msnb=0;msnb&lt;=&quot;$multisitenumber&quot;;msnb++));do</span><br><span class="line">           `pwd`/./ossutil64 rm oss://&quot;$albucketname&quot;/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$rmbackuptime&quot;.tar.gz &gt;/dev/null</span><br><span class="line">            if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">                echo &quot;阿里云&quot;$albucketname&quot;/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$rmbackuptime&quot;.tar.gz删除结束&quot;</span><br><span class="line">            elif [ &quot;$?&quot; -eq 255 ];then</span><br><span class="line">                echo &quot;阿里云&quot;$albucketname&quot;/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$rmbackuptime&quot;.tar.gz删除结束&quot;</span><br><span class="line">            else</span><br><span class="line">                echo &quot;阿里云&quot;$albucketname&quot;/&quot;$&#123;multlist[&quot;$msnb&quot;]&#125;&quot;/&quot;$rmbackuptime&quot;.tar.gz删除失败&quot;</span><br><span class="line">            fi</span><br><span class="line">        done</span><br><span class="line">    fi</span><br><span class="line">else</span><br><span class="line">    echo &quot;备份周期为永久，请注意OSS存储使用情况...&quot;</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line">#阿里云删除结束</span><br><span class="line"></span><br><span class="line">#七牛云开始</span><br><span class="line">#判断是否是七牛云上传</span><br><span class="line">if [ &quot;$enable&quot; == qiniu ];then</span><br><span class="line">    if [ -z &quot;$qnak&quot; ] &amp;&amp; [ -z &quot;$qnsk&quot; ] &amp;&amp; [ -z &quot;$qiniubucket&quot; ];then</span><br><span class="line">        echo &quot;七牛云配置检查失败&quot;</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">    if [ ! -f ./qshell-linux-x64 ];then</span><br><span class="line">    wget https://dn-devtools.qbox.me/2.1.5/qshell-linux-x64 &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    chmod 755 qshell-linux-x64</span><br><span class="line">        echo &quot;七牛云安装完成&quot;</span><br><span class="line">    fi</span><br><span class="line">./qshell-linux-x64 account &quot;$qnak&quot; &quot;$qnsk&quot;</span><br><span class="line">    echo &quot;开始上传...&quot;</span><br><span class="line">./qshell-linux-x64 rput &quot;$qiniubucket&quot; &quot;$backuptime&quot;.tar.gz /itxg/&quot;$backuptime&quot;.tar.gz </span><br><span class="line">    if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">        echo &quot;七牛云上传完成&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;七牛云上传失败&quot;</span><br><span class="line">    fi</span><br><span class="line">#七牛云删除开始</span><br><span class="line">    if [ ! -z &quot;$rmdate&quot; ];then</span><br><span class="line">        ./qshell-linux-x64 delete &quot;$qiniubacket&quot; &quot;$rmbackuptime&quot;.tar.gz &gt; /dev/null</span><br><span class="line">         if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">                echo &quot;七牛云删除结束&quot;</span><br><span class="line">        else</span><br><span class="line">                echo &quot;七牛云删除失败&quot;</span><br><span class="line">         fi</span><br><span class="line">     else</span><br><span class="line">        echo &quot;备份周期为永久，请注意七牛存储使用情况...&quot;</span><br><span class="line">     fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;腾讯COS 阿里OSS 七牛 备份脚本&lt;/p&gt;
&lt;p&gt;#20171017:代码重构,支持将网站上传到腾讯云COS、阿里云OSS、七牛云存储.(v0.1.0)&lt;/p&gt;
&lt;p&gt;#20171018:修复cos.conf判断错误.(v0.1.1)&lt;/p&gt;
&lt;p&gt;#20171023:增加阿里云多站点备份.(v0.1.2)&lt;/p&gt;
&lt;p&gt;#20171025:增加腾讯云多站点备份.(v0.1.3)&lt;/p&gt;
&lt;p&gt;#20171029:修复阿里云下crontab不能正常上传bug(v0.1.4)&lt;/p&gt;
&lt;p&gt;#20171030:修复阿里云/腾讯云修改key后，备份报错问题。移动pip判断到相应位置（v0.1.5）&lt;/p&gt;
&lt;p&gt;#20171202:修复腾讯云与阿里云周期删除失败BUG(v0.1.6)&lt;/p&gt;
&lt;p&gt;#20171204:修复mysqldump某些小bug.(v0.1.7)&lt;/p&gt;
&lt;p&gt;#20180112:增加更新源地址、修改小bug(v0.1.8)&lt;/p&gt;
&lt;p&gt;#20180524:更新腾讯cos上传。(v0.1.9)&lt;/p&gt;
&lt;p&gt;#20180603:日常修复&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="http://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="随笔" scheme="http://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>破解密码常见的几种方式</title>
    <link href="http://www.wuxinvip.com/2018/07/13/encryption/password-cracked/"/>
    <id>http://www.wuxinvip.com/2018/07/13/encryption/password-cracked/</id>
    <published>2018-07-13T00:00:00.000Z</published>
    <updated>2018-10-15T08:26:26.838Z</updated>
    
    <content type="html"><![CDATA[<h3 id="暴力穷举"><a href="#暴力穷举" class="headerlink" title="暴力穷举"></a>暴力穷举</h3><pre><code>使用字典生成常用密码序列进行密码尝试</code></pre><h3 id="击键记录"><a href="#击键记录" class="headerlink" title="击键记录"></a>击键记录</h3><pre><code>使用密码病毒获取输入工具点击操作</code></pre><h3 id="屏幕记录"><a href="#屏幕记录" class="headerlink" title="屏幕记录"></a>屏幕记录</h3><pre><code>使用密码病毒获取屏幕点击记录</code></pre><h3 id="网络钓鱼"><a href="#网络钓鱼" class="headerlink" title="网络钓鱼"></a>网络钓鱼</h3><pre><code>使用伪造站点获取用户密码</code></pre><h3 id="嗅探器【sniffer】"><a href="#嗅探器【sniffer】" class="headerlink" title="嗅探器【sniffer】"></a>嗅探器【sniffer】</h3><pre><code>使用网络监听工具获取获取网络消息</code></pre><a id="more"></a><h3 id="系统漏洞"><a href="#系统漏洞" class="headerlink" title="系统漏洞"></a>系统漏洞</h3><pre><code>使用系统漏洞进行shell操作、然后在进行以上获取密码操作、如：键盘、屏幕工具录入、或者文件下载、直接查看文件密码等</code></pre><h3 id="远程攻击"><a href="#远程攻击" class="headerlink" title="远程攻击"></a>远程攻击</h3><pre><code>分为两种：远程入侵和破坏性攻击远程获取目标主机shell 进行监控、文件download等dos、ddos、等等</code></pre><h3 id="不良习惯"><a href="#不良习惯" class="headerlink" title="不良习惯"></a>不良习惯</h3><pre><code>多网站使用同一密码使用简单密码使用常用单词、长期不更换密码</code></pre><h3 id="绕过破解"><a href="#绕过破解" class="headerlink" title="绕过破解"></a>绕过破解</h3><pre><code>常见：拦截cookie、session攻击等</code></pre><h3 id="密码心理学"><a href="#密码心理学" class="headerlink" title="密码心理学"></a>密码心理学</h3><pre><code>社会工程学破解密码   简单来讲就是、站在对方的角度上去设置密码、然后猜解密码、   一个密码会跟人生经历有很大关系、   一个人也不会用没碰到过的、没见过的东西作为密码   举几个例子：   某公司密码 可能是 公司大写或者小写+当年年份   某家路由器密码可能是：他或者他老婆姓名【姓氏】+生日、或者常见数字   破结果一个wifi 跑字典出来是 11121314  12131415    你觉得很安全 谁会想到我这么个序列作为密码、其实字典就是一个小时的功夫</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;暴力穷举&quot;&gt;&lt;a href=&quot;#暴力穷举&quot; class=&quot;headerlink&quot; title=&quot;暴力穷举&quot;&gt;&lt;/a&gt;暴力穷举&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;使用字典生成常用密码序列进行密码尝试
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;击键记录&quot;&gt;&lt;a href=&quot;#击键记录&quot; class=&quot;headerlink&quot; title=&quot;击键记录&quot;&gt;&lt;/a&gt;击键记录&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;使用密码病毒获取输入工具点击操作
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;屏幕记录&quot;&gt;&lt;a href=&quot;#屏幕记录&quot; class=&quot;headerlink&quot; title=&quot;屏幕记录&quot;&gt;&lt;/a&gt;屏幕记录&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;使用密码病毒获取屏幕点击记录
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;网络钓鱼&quot;&gt;&lt;a href=&quot;#网络钓鱼&quot; class=&quot;headerlink&quot; title=&quot;网络钓鱼&quot;&gt;&lt;/a&gt;网络钓鱼&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;使用伪造站点获取用户密码
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;嗅探器【sniffer】&quot;&gt;&lt;a href=&quot;#嗅探器【sniffer】&quot; class=&quot;headerlink&quot; title=&quot;嗅探器【sniffer】&quot;&gt;&lt;/a&gt;嗅探器【sniffer】&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;使用网络监听工具获取获取网络消息
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="password" scheme="http://www.wuxinvip.com/categories/java/password/"/>
    
    
      <category term="密码加密" scheme="http://www.wuxinvip.com/tags/%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Hash环、一致性hash</title>
    <link href="http://www.wuxinvip.com/2018/07/10/essay/hash/"/>
    <id>http://www.wuxinvip.com/2018/07/10/essay/hash/</id>
    <published>2018-07-10T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.824Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/essay/img/hash环.png" alt="图片">hash环、一致性hash</p><p><strong>Hash环</strong></p><p>上面说的Hash函数，只经过了1次hash，即把key hash到对应的机器编号。<br>而Hash环有2次Hash： </p><ul><li>（1）把所有机器编号hash到这个环上 </li><li>（2）把key也hash到这个环上。然后在这个环上进行匹配，看这个key和哪台机器匹配。</li></ul><p>具体来讲，如下：</p><pre><code>假定有这样一个Hash函数，其值空间为（0到2的32次方-1) ，也就是说，其hash值是个32位无整型数字 ，这些数字组成一个环。然后，先对机器进行hash(比如根据机器的ip)，算出每台机器在这个环上的位置； 再对key进行hash，算出该key在环上的位置，然后从这个位置往前走，遇到的第一台机器就是该key对应的机器，就把该(key, value) 存储到该机器上。首先计算出每台Cache服务器在环上的位置（图中的大圆圈）；然后每来一个(key, value)，计算出在环上的位置（图中的小圆圈），然后顺时针走，遇到的第1个机器，就是其要存储的机器。这里的关键点是：当你增加/减少机器时，其他机器在环上的位置并不会发生改变。这样只有增加的那台机器、或者减少的那台机器附近的数据会失效，其他机器上的数据都还是有效的。</code></pre><a id="more"></a><p><strong>数据倾斜问题</strong></p><pre><code>当你机器不多的时候，很可能出现几台机器在环上面贴的很近，不是在环上均匀分布。这将会导致大部分数据，都会集中在某1台机器上。为了解决这个问题，可以引入“虚拟机器”的概念，也就是说：1台机器，我在环上面计算出多个位置。怎么弄呢？ 假设用机器的ip来hash，我可以在ip后面加上几个编号, ip_1, ip_2, ip_3, .. 把1台物理机器生个多个虚拟机器的编号。数据首先映射到“虚拟机器上”，再从“虚拟机器”映射到物理机器上。因为虚拟机器可以很多，在环上面均匀分布，从而保证数据均匀分布到物理机器上面。</code></pre><p><strong>ZK的引入</strong></p><pre><code>上面我们提到了服务器的机器增加、减少，问题是客户端怎么知道呢？一种笨办法就是手动的，当服务器机器增加、减少时候，重新配置客户端，重启客户端。另外一种，就是引入ZK，服务器的节点列表注册到ZK上面，客户端监听ZK。发现结点数发生变化，自动更新自己的配置。当然，不用ZK，用一个其他的中心结点，只要能实现这种更改的通知，也是可以的。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/essay/img/hash环.png&quot; alt=&quot;图片&quot;&gt;hash环、一致性hash&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hash环&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上面说的Hash函数，只经过了1次hash，即把key hash到对应的机器编号。&lt;br&gt;而Hash环有2次Hash： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;（1）把所有机器编号hash到这个环上 &lt;/li&gt;
&lt;li&gt;（2）把key也hash到这个环上。然后在这个环上进行匹配，看这个key和哪台机器匹配。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体来讲，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;假定有这样一个Hash函数，其值空间为（0到2的32次方-1) ，也就是说，其hash值是个32位无整型数字 ，这些数字组成一个环。
然后，先对机器进行hash(比如根据机器的ip)，算出每台机器在这个环上的位置； 再对key进行hash，算出该key在环上的位置，
然后从这个位置往前走，遇到的第一台机器就是该key对应的机器，就把该(key, value) 存储到该机器上。

首先计算出每台Cache服务器在环上的位置（图中的大圆圈）；然后每来一个(key, value)，计算出在环上的位置（图中的小圆圈），
然后顺时针走，遇到的第1个机器，就是其要存储的机器。

这里的关键点是：当你增加/减少机器时，其他机器在环上的位置并不会发生改变。这样只有增加的那台机器、
或者减少的那台机器附近的数据会失效，其他机器上的数据都还是有效的。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="http://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="随笔" scheme="http://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随便写点</title>
    <link href="http://www.wuxinvip.com/2018/07/06/essay/essay-2/"/>
    <id>http://www.wuxinvip.com/2018/07/06/essay/essay-2/</id>
    <published>2018-07-06T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.979Z</updated>
    
    <content type="html"><![CDATA[<p><strong>spring cloud 刚刚上了生产</strong></p><p><strong>service mesh、事件驱动架构、来了</strong></p><p><strong>rest刚刚成为普遍api规范 GraphQL来了</strong></p><p><strong>更NB的是 Netflix 停止维护了eureka、出了个 “混沌工程”</strong></p><a id="more"></a><p>大公司的技术就像是生产苹果的、小公司的技术就是跟着屁股后头捡捡苹果核儿、、、</p><p>大公司吃完了苹果、吃核桃、换着花样吃、小公司跟后头就吃各种核儿、、哈哈、所以一定要进大公司耍耍去、若能玩顶尖的技术、岂不妙哉？</p><p><a href="http://www.infoq.com/cn/articles/5-microservices-trends-to-watch-in-2018" target="_blank" rel="noopener">infoq地址</a></p><p>技术更迭的真快、现在还有精力去学习、以后也就看看虎形而已了、</p><p>谁说程序员的工资好挣的、一不留神就失业没人要的工作、惶惶度日、不会学习的程序员就是温水的青蛙、安乐死…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;spring cloud 刚刚上了生产&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;service mesh、事件驱动架构、来了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rest刚刚成为普遍api规范 GraphQL来了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更NB的是 Netflix 停止维护了eureka、出了个 “混沌工程”&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="http://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="随笔" scheme="http://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>ftp部署</title>
    <link href="http://www.wuxinvip.com/2018/07/04/service-deploy/ftp/"/>
    <id>http://www.wuxinvip.com/2018/07/04/service-deploy/ftp/</id>
    <published>2018-07-04T00:00:00.000Z</published>
    <updated>2018-10-15T08:38:38.660Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">1、首先服务器要安装ftp软件,查看是否已经安装ftp软件下：</span><br><span class="line">   #which vsftpd</span><br><span class="line">  如果看到有vsftpd的目录说明服务器已经安装了ftp软件</span><br><span class="line"></span><br><span class="line">2、查看ftp 服务器状态     </span><br><span class="line">   #service vsftpd status</span><br><span class="line"></span><br><span class="line">3、如果没有安装，查询是否有可用的rpm安装包</span><br><span class="line"></span><br><span class="line">[root@centos ~]# yum list |grep vsftpd</span><br><span class="line"></span><br><span class="line">vsftpd.i686                                 2.2.2-21.el6                 base</span><br><span class="line"></span><br><span class="line">4、安装vsftpd服务</span><br><span class="line"></span><br><span class="line">[root@centos ~]# yum install -y vsftpd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5. 启动ftp服务器     </span><br><span class="line">   #service vsftpd start</span><br><span class="line"></span><br><span class="line">6. 重启ftp服务器 </span><br><span class="line">   #service vsftpd restart</span><br><span class="line"></span><br><span class="line">7. 查看服务有没有启动</span><br><span class="line"> [root@centos ~]# netstat -lnp  </span><br><span class="line"></span><br><span class="line">tcp        0      0 0.0.0.0:21        0.0.0.0:*       LISTEN      1491/vsftpd</span><br><span class="line"></span><br><span class="line">   如果看到以上信息，证明ftp服务已经开启。</span><br><span class="line"></span><br><span class="line">8.如果需要开启root用户的ftp权限要修改以下两个文件</span><br><span class="line">  #vi /etc/vsftpd/ftpusers中注释掉root</span><br><span class="line">  #vi /etc/vsftpd/user_list中也注释掉root</span><br><span class="line">  然后重新启动ftp服务</span><br><span class="line"></span><br><span class="line">[root@centos ~]# service vsftpd restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="service-deploy" scheme="http://www.wuxinvip.com/categories/java/service-deploy/"/>
    
    
      <category term="服务搭建" scheme="http://www.wuxinvip.com/tags/%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>nginx-plus</title>
    <link href="http://www.wuxinvip.com/2018/07/03/load-balance/nginx-plus/"/>
    <id>http://www.wuxinvip.com/2018/07/03/load-balance/nginx-plus/</id>
    <published>2018-07-03T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="好用软件推荐"><a href="#好用软件推荐" class="headerlink" title="好用软件推荐"></a>好用软件推荐</h2><h2 id="简化部署、多云环境更容易发现服务的故障"><a href="#简化部署、多云环境更容易发现服务的故障" class="headerlink" title="简化部署、多云环境更容易发现服务的故障"></a>简化部署、多云环境更容易发现服务的故障</h2><h2 id="结合nginx-controller非常好用软件"><a href="#结合nginx-controller非常好用软件" class="headerlink" title="结合nginx-controller非常好用软件"></a>结合nginx-controller非常好用软件</h2><p><a href="https://www.nginx.com/products/nginx/" target="_blank" rel="noopener">官方网站-nginx-plus</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>NGINX Plus是一个基于开源NGINX构建的软件负载均衡器，Web服务器和内容缓存。</li><li>NGINX Plus在开源产品的基础上提供独家的生产就绪功能，包括会话持久性，通过API配置和主动健康检查。</li><li>使用NGINX Plus代替硬件负载均衡器，获得创新的自由，而不受基础设施的限制。</li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><a id="more"></a><p><strong>负载均衡器</strong></p><p>使用软件扩展传统的负载平衡：</p><ul><li>HTTP，TCP和UDP负载平衡</li><li>使用URI，cookie，args等进行第7层请求路由</li><li>基于cookie的会话持久性*</li><li>状态代码和响应正文的主动运行状况检查*</li><li>使用DNS *进行服务发现</li></ul><p><strong>内容缓存</strong></p><p>使用为世界上最大的CDN提供支持的相同缓存：</p><ul><li>缓存静态和动态内容</li><li>通过微处理提高动态内容性能</li><li>在后台重新验证时提供“陈旧”内容以提高性能</li><li>覆盖或设置Cache‑Control标题</li><li>使用缓存清除API轻松管理缓存*</li></ul><p><strong>网络服务器</strong></p><p>以无与伦比的速度和效率交付静态资产：</p><ul><li>同时处理数十万客户</li><li>使用比其他Web服务器少90％的内存</li><li>反向代理多个协议：HTTP，gRPC，Memcached，PHP-FPM，SCGI，uwsgi</li><li>流HTTP视频：FLV，HDS，HLS，MP4</li><li>支持HTTP / 2服务器推送的HTTP / 2网关</li></ul><p><strong>安全控制</strong></p><p>保护您的应用：</p><ul><li>请求/连接限制</li><li>双栈RSA / ECC SSL卸载</li><li>IP访问控制列表（ACL）</li><li>API和OpenID Connect单点登录（SSO）的JWT身份验证*</li><li>NGINX WAF动态模块*</li></ul><p><strong>动态模块</strong></p><p>动态插入其他功能：</p><ul><li>用于JavaScript配置的nginScript模块</li><li>GeoIP模块按IP地址定位用户（需要MaxMind GeoIP数据库）</li><li>用于编译自己的自定义模块的构建工具</li><li>单点登录模块：ForgeRock，IDF Connect和Ping Identity *</li><li>动态模块库*</li></ul><p><strong>监控</strong></p><p>诊断和调试复杂的应用程序体系结构：</p><ul><li>使用NGINX Amplify监控NGINX指标并验证配置</li><li>适用于AppDynamics，Datadog，Dynatrace和New Relic的插件</li><li>具有超过90个唯一指标的扩展状态*</li><li>内置实时图形仪表板*</li><li>用于与自定义监视工具集成的JSON和HTML输出*</li></ul><p><strong>高可用性（HA）</strong></p><p>可扩展且可靠的HA部署：</p><ul><li>主动 - 主动和主动 - 被动HA模式</li><li>群集中服务器之间的配置同步</li><li>使用内置脚本轻松安装</li><li>状态共享Sticky Learn会话持久性</li></ul><p><strong>Kubernetes Ingress控制器</strong></p><p>使用NGINX Plus创建Kubernetes应用程序：</p><ul><li>具有SSL / TLS终止的负载平衡</li><li>WebSocket和HTTP / 2支持</li><li>请求之前的URI重写被转发到应用程序</li><li>会话持久性*</li><li>JWT认证*</li></ul><p><strong>可编程</strong></p><p>动态部署自定义体系结构：</p><ul><li>用于脚本和高级配置的NGINX JavaScript模块</li><li>Lua脚本语言</li><li>Ansible，Chef和Puppet集成</li><li>用于管理上游服务器，键值存储和实时指标的API *</li><li>无需重新加载的动态重新配置*</li></ul><p><strong>流媒体</strong></p><p>Scalably提供流媒体：</p><ul><li>直播：RTMP，Apple HTTP直播（HLS），HTTP上的动态自适应流媒体（DASH）</li><li>视频点播：Flash（flv），MP4</li><li>自适应比特率VOD：HLS，Adobe HTTP动态流（HDS）*</li><li>MP4流媒体的带宽控制*</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;好用软件推荐&quot;&gt;&lt;a href=&quot;#好用软件推荐&quot; class=&quot;headerlink&quot; title=&quot;好用软件推荐&quot;&gt;&lt;/a&gt;好用软件推荐&lt;/h2&gt;&lt;h2 id=&quot;简化部署、多云环境更容易发现服务的故障&quot;&gt;&lt;a href=&quot;#简化部署、多云环境更容易发现服务的故障&quot; class=&quot;headerlink&quot; title=&quot;简化部署、多云环境更容易发现服务的故障&quot;&gt;&lt;/a&gt;简化部署、多云环境更容易发现服务的故障&lt;/h2&gt;&lt;h2 id=&quot;结合nginx-controller非常好用软件&quot;&gt;&lt;a href=&quot;#结合nginx-controller非常好用软件&quot; class=&quot;headerlink&quot; title=&quot;结合nginx-controller非常好用软件&quot;&gt;&lt;/a&gt;结合nginx-controller非常好用软件&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.nginx.com/products/nginx/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方网站-nginx-plus&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;NGINX Plus是一个基于开源NGINX构建的软件负载均衡器，Web服务器和内容缓存。&lt;/li&gt;
&lt;li&gt;NGINX Plus在开源产品的基础上提供独家的生产就绪功能，包括会话持久性，通过API配置和主动健康检查。&lt;/li&gt;
&lt;li&gt;使用NGINX Plus代替硬件负载均衡器，获得创新的自由，而不受基础设施的限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="load-balance" scheme="http://www.wuxinvip.com/categories/java/load-balance/"/>
    
    
      <category term="项目推荐" scheme="http://www.wuxinvip.com/tags/%E9%A1%B9%E7%9B%AE%E6%8E%A8%E8%8D%90/"/>
    
      <category term="负载均衡" scheme="http://www.wuxinvip.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>nginx-controller</title>
    <link href="http://www.wuxinvip.com/2018/07/03/load-balance/nginx-controller/"/>
    <id>http://www.wuxinvip.com/2018/07/03/load-balance/nginx-controller/</id>
    <published>2018-07-03T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id="好用软件推荐"><a href="#好用软件推荐" class="headerlink" title="好用软件推荐"></a>好用软件推荐</h2><h2 id="nginx-plus监控"><a href="#nginx-plus监控" class="headerlink" title="nginx-plus监控"></a>nginx-plus监控</h2><p><a href="https://www.nginx.com/products/nginx-controller/" target="_blank" rel="noopener">官方网站-nginx-controller</a></p><p><img src="/img/load-balance/img/nginx-controller-1.png" alt="图片">密码加密 图谱</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>NGINX Controller是所有NGINX Plus实例的集中管理平台。</li><li>使用Controller，您可以在多云环境中轻松管理多个NGINX Plus服务器。</li><li>使用直观的向导样式界面，您可以创建NGINX Plus的新实例，并集中配置负载平衡，URL路由和SSL终止等功能。</li><li>Controller具有丰富的监控和警报功能，有助于确保应用程序的可用性，性能和可靠性。</li><li>Controller基于最佳实践提供对200个关键指标和抢先推荐的深入可见性，<br>使ITOps和DevOps团队能够首先避免性能问题，并解决可能出现的任何问题。</li></ul><a id="more"></a><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p><strong>实时监控和警报</strong></p><p>获得关于应用程序性能的重要见解：</p><ul><li>关键指标的图表，例如每秒请求数，活动连接数，带宽使用情况</li><li>根据预定义的阈值提醒100多个指标，如CPU使用率，400/500错误和运行状况检查失败</li><li>使用REST API轻松集成您选择的任何监控工具</li></ul><p><strong>仪表板</strong></p><p>使用以下命令快速监控NGINX plus实例并对其进行故障排除：</p><ul><li>概述仪表板，用于汇总负载均衡器中的指标</li><li>应用程序健康评分，用于衡量成功请求和及时响应</li><li>可自定义的仪表板，用于监控特定于您的环境的指标</li></ul><p><strong>先发制人的建议</strong></p><p>使用内置配置分析器获取：</p><ul><li>基于成千上万客户的学习，增强了性能和安全性</li><li>通过遵循内置的最佳实践来获得更好的SLA。</li></ul><p>抢先和可行的建议：</p><ul><li>组态</li><li>安全</li><li>SSL状态</li></ul><p><strong>简化的配置管理</strong></p><p>导航一个简单直观的向导式用户界面，用于：</p><ul><li>NGINX Plus配置的指导工作流程</li><li>负载平衡器的按钮部署</li><li>流量路由到上游服务器</li><li>SSL密钥和证书管理</li></ul><p><strong>政策驱动的管理</strong></p><p>通过开发多个特定于环境的策略来加速应用程序部署。创建配置环境：</p><ul><li>分期</li><li>生产</li><li>具体业务范围</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;好用软件推荐&quot;&gt;&lt;a href=&quot;#好用软件推荐&quot; class=&quot;headerlink&quot; title=&quot;好用软件推荐&quot;&gt;&lt;/a&gt;好用软件推荐&lt;/h2&gt;&lt;h2 id=&quot;nginx-plus监控&quot;&gt;&lt;a href=&quot;#nginx-plus监控&quot; class=&quot;headerlink&quot; title=&quot;nginx-plus监控&quot;&gt;&lt;/a&gt;nginx-plus监控&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.nginx.com/products/nginx-controller/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方网站-nginx-controller&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/load-balance/img/nginx-controller-1.png&quot; alt=&quot;图片&quot;&gt;密码加密 图谱&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;NGINX Controller是所有NGINX Plus实例的集中管理平台。&lt;/li&gt;
&lt;li&gt;使用Controller，您可以在多云环境中轻松管理多个NGINX Plus服务器。&lt;/li&gt;
&lt;li&gt;使用直观的向导样式界面，您可以创建NGINX Plus的新实例，并集中配置负载平衡，URL路由和SSL终止等功能。&lt;/li&gt;
&lt;li&gt;Controller具有丰富的监控和警报功能，有助于确保应用程序的可用性，性能和可靠性。&lt;/li&gt;
&lt;li&gt;Controller基于最佳实践提供对200个关键指标和抢先推荐的深入可见性，&lt;br&gt;使ITOps和DevOps团队能够首先避免性能问题，并解决可能出现的任何问题。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="load-balance" scheme="http://www.wuxinvip.com/categories/java/load-balance/"/>
    
    
      <category term="项目推荐" scheme="http://www.wuxinvip.com/tags/%E9%A1%B9%E7%9B%AE%E6%8E%A8%E8%8D%90/"/>
    
      <category term="负载均衡" scheme="http://www.wuxinvip.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>关于编码方式</title>
    <link href="http://www.wuxinvip.com/2018/07/03/essay/essay-11/"/>
    <id>http://www.wuxinvip.com/2018/07/03/essay/essay-11/</id>
    <published>2018-07-03T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.743Z</updated>
    
    <content type="html"><![CDATA[<p>编码</p><pre><code>将人类语言解释为机器语言的一种关系映射</code></pre><p>常见编码方式</p><p>ASCII</p><pre><code>128个0-31控制字符、换行、删除、回车32-126打印字符</code></pre><p>ISO8859-1</p><pre><code>在ASCII上 加上了大多数修语言字符、256个字符 </code></pre><a id="more"></a><p>GB2312</p><pre><code>信息交换用汉字编码字符集基本集、双字节编码、A1-A9 符号区B0-F7 汉字区</code></pre><p>GBK</p><pre><code>汉字内码扩展规范对GB2312扩展编码范围 8140-FEFE 与GB2312兼容</code></pre><p>GB18030</p><pre><code>数字交换用汉字编码字符集单字节、双字节、四字节、与GB2312兼容</code></pre><p>UTF-16</p><pre><code>Unicode字符集的存取方法使用2字节标识Unicode转化格式、定长表示</code></pre><p>UTF-8<br>    边长字符集、1-6个字节<br>    涵盖了所有各国字符编码</p><p>UTF-8mb4</p><pre><code>在UTF8基础上 增加了表情字符</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;编码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;将人类语言解释为机器语言的一种关系映射
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;常见编码方式&lt;/p&gt;
&lt;p&gt;ASCII&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;128个
0-31控制字符、换行、删除、回车
32-126打印字符
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ISO8859-1&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;在ASCII上 加上了大多数修语言字符、256个字符 
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="http://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="随笔" scheme="http://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>区块链 概述、开源</title>
    <link href="http://www.wuxinvip.com/2018/07/03/block-chain/block-chain-3/"/>
    <id>http://www.wuxinvip.com/2018/07/03/block-chain/block-chain-3/</id>
    <published>2018-07-03T00:00:00.000Z</published>
    <updated>2018-10-15T05:53:58.242Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/null_071_4607/mastering-blockchain" target="_blank" rel="noopener">开源地址</a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这是区块链相关知识的一个梳理，旨在真正的get the skill并方便他人。</p><p>知识可分为两类:</p><ul><li><p><strong>逻辑体系型的</strong></p><p>需要思考，把各种概念连起来，或归纳，或演绎，最后，在大脑中形成一种逻辑网状结构。比如可计算理论，分布式系统，解释器等。</p></li><li><p><strong>使用操作型的</strong></p><p>基本不需要思考，只需要看一下目录，要用的时候参考一下手册即可。比如linux的各种命令，go,python的一些奇怪语法,elastic-search dsl的使用。</p></li></ul><p>第一类知识是比较有意思的，值得多花时间，这种”逻辑网状结构”最后会形成一个”打通”的集群，可能会让你的大脑产生一些有意思的想法；而第二类，千万别花太多时间，因为很有可能让你产生消极，厌学，忧郁等情绪，而你越努力，就越可能”斯德哥尔摩”。</p><p>区块链知识可以归为第一类。</p><p>研究一个东西，需要知道它包含哪些概念，我把它分为两类:</p><a id="more"></a><ul><li><p><strong>自描述概念</strong></p><p>不依赖其他概念的概念</p></li><li><p><strong>他描述概念</strong></p><p>需要依赖其他概念的概念</p></li></ul><p>显然，这是一个递归的概念，可以用形式化的语言来描述，你也可以哲学的扯一大堆，但这不是我的兴趣。</p><p>下面的章节试图用<em>原理，逻辑，应用</em>的方式把区块链相关的概念连起来，形成”网状结构“，所有概念可在<a href="/glossary.md"><strong>Glossary(词汇表)</strong></a>里查看，你可以先浏览一下，想一想他们之间的关系，再来看下面的章节。当然，最后，每个人的”网状结构”可能都不同，毕竟除了”同一性”，还有”差异性”。但，原则是一致的，有了”网状结构”，在添加新的”概念”时，我们就可以审视其在”网”中的位置，也可以思考这张”网”还缺少什么，有什么不完美之处，是不是还有”孤岛”等问题，进而有可能去完善它。</p><p>而所有的学习，无非就是完善那张网，并尽可能的正交。</p><p>这样，垃圾少了，人也轻松了。</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h2 id="1-KV-key-value"><a href="#1-KV-key-value" class="headerlink" title="1. KV(key value)"></a>1. KV(key value)</h2><blockquote><p>There are only two hard things in Computer Science: cache invalidation and <em><strong>naming things</strong></em>.</p><p>– Phil Karlton</p></blockquote><p>为什么名字那么重要？因为有了名字，这个名字才能够被引用，才能够谈论其属性。</p><p>就是说，你要谈论一个人，首先得有这个人，这有点废话，但却是原理性的，</p><p>名字意味着什么？</p><p>图灵机里面的head,没错，只有你找到head,才知道当前的(input,state),才能往下走。</p><p>汇编语言如果没有address,存储和操作也没法进行;各种编程语言的变量说的也是这个事情。</p><p>而kv中的k其实就是名字，v在不同的场合可以有不同的含义。</p><p>有了kv,就可以构造所有的数据结构，因为从递归的角度，v也可以是kv。</p><p>这个跟blockchain有关系吗？</p><h2 id="2-Asset-资产"><a href="#2-Asset-资产" class="headerlink" title="2. Asset(资产)"></a>2. Asset(资产)</h2><p>在digital asset的世界，address上的数字就是资产。显然，address是key,数字是value。<br>理解这一点很重要，blockchain主要主要的应用场景就是数字资产。</p><p>不太精确的分类:</p><ul><li><p>资产数字化</p><p>相当于一个凭证，其有现实的对应物，比如股票，其实对应公司的投票分红等权利。</p></li><li><p>数字资产化</p><p>没有现实的对应物，但是可以换成现实中的钱，比如比特币。</p></li></ul><h2 id="3-Transaction-交易"><a href="#3-Transaction-交易" class="headerlink" title="3. Transaction(交易)"></a>3. Transaction(交易)</h2><p>而address上的数字的变更，也就是kv的变化，对应着资产的转移，就是<strong>交易(transaction)</strong>。</p><p>如果能把所有KV的变化按顺序记录起来，就达到了<strong>可溯源</strong>的目的，这跟kafka里面的stream和table的关系是一样的。</p><p><img src="/img/block-chain/img/stream-table.png" alt="图片"></p><p>可以看出，我们可以根据交易记录，来得到目前每个地址的资产；而资产的变化必须以目前的资产为前提。</p><p>事实上，这个保证是consensus mechanism(共识机制)里面的一个检查点。</p><h2 id="4-Currency-issuance-货币发行"><a href="#4-Currency-issuance-货币发行" class="headerlink" title="4. Currency issuance(货币发行)"></a>4. Currency issuance(货币发行)</h2><p>那么资产从哪里来呢？</p><p>上帝说，要有光就有了光。</p><p>这里我们不去讨论历史，只从现实的货币发行制度以及比特币”怼”的方式阐述。</p><h3 id="4-1-美元的发行流程"><a href="#4-1-美元的发行流程" class="headerlink" title="4.1 美元的发行流程"></a>4.1 美元的发行流程</h3><p><img src="/img/block-chain/img/how-money-is-created.png" alt="图片"></p><ul><li>没钱花了，国会和总统授权财政部,发行国债</li><li>国债大部分卖给中国和日本，有钱了</li><li>又没钱花了，中国日本也不要，通过银行卖给美联储，有钱了，这个钱是凭空出来的，<strong>Currency issuance(货币发行)</strong> works</li><li>债券是有利率的，就是说偿还债务时需要比借的钱要多一些</li><li>而发行的钱=借出的钱，这多一些的钱从哪里来呢？</li><li>唯一的办法就是继续借，也就是继续发行，否则这个系统就没法运转下去</li></ul><p>这个系统的必然结果是:</p><ul><li>inflation(通货膨胀)</li><li>在经济增长对货币需求量增加的情况下，债务只可能越来越大</li><li>但是，只要有信心，这个系统就可以一直运行下去</li><li>并且，似乎其还有一个作用，生产力高的人更容易获得金钱</li><li>因为如果你赚的钱如果不足以覆盖你使用钱的成本，你就会被淘汰</li><li>这个系统不完美，但支撑了资本主义的高速发展</li><li>似乎繁荣,萧条的周期跟这个系统有很大的关系</li><li>它还在高速运转</li></ul><h3 id="4-2-比特币的发行流程"><a href="#4-2-比特币的发行流程" class="headerlink" title="4.2 比特币的发行流程"></a>4.2 比特币的发行流程</h3><p>比特币的创世区块，上面有一句话:</p><blockquote><p>“The Times 03/Jan/2009 Chancellor on brink of second bailout for banks”<br>“财政大臣站在第二次救助银行的边缘”</p></blockquote><p>这句话是当天泰晤士报头版的标题。中本聪将它写进创世区块，不但清晰地展示着比特币的诞生时间，还表达着对旧体系的嘲讽。</p><p>银行家的贪婪，政府的监守自盗，大而不倒的把戏，已经有太多的批评，这里不再赘述。</p><p>试验性质的比特币，试图回答两个问题:</p><ul><li>谁该拥有货币发行权</li><li>货币发行量由什么决定</li></ul><p><img src="/img/block-chain/img/bitcoin-issuance.png" alt="图片"></p><p>比特币的答案是:</p><ul><li>众生平等，你有我有全都有</li><li>货币发行量预期固定，每4年减半</li></ul><p><img src="/img/block-chain/img/bitcoin-supply-over-block-height.png" alt="图片"></p><p>这里有太多话题性的东西:</p><ul><li>依靠算力真的能做到去中心化？公平？民主？</li><li>指数衰减的货币真的有利于经济发展？</li><li>这种越早加入网络越容易拥有更多资产的机制是传销吗?</li></ul><p>这些东西都可以去讨论。</p><p>从技术的角度，这里对应着数据的记录和计算的机制，在 <strong>distributed network(分布式网络)</strong> 的环境下，就是所谓的 <strong>consensus mechanism(共识机制)</strong>。</p><h2 id="5-Distributed-network-分布式网络"><a href="#5-Distributed-network-分布式网络" class="headerlink" title="5. Distributed network(分布式网络)"></a>5. Distributed network(分布式网络)</h2><p><strong>一群人</strong> <strong>合作</strong> 来 <strong>搞事情</strong>，就形成了网络。</p><p>这里的人叫node(节点),搞事情的过程中，一个不行了，另一个顶上，就叫failover。</p><p>常见的搞事情，比如LB,replica storage等。</p><p>这里的合作遵循的规则就叫 <strong>consensus mechanism(共识机制)</strong>。</p><p>如果这群人都很聪明，并且互相信任，事情会简单很多。</p><p>很多的系统都是以此为假设进行设计的。</p><p>区块链的假设是:节点之间是互相不信任的。</p><p>区块链要干的事情就是:设计一个能让互相<strong>不信任</strong>的节点都<strong>信任</strong>的机制,然后大家可以愉快的一起搞事情。</p><h2 id="6-Consensus-mechanism-共识机制"><a href="#6-Consensus-mechanism-共识机制" class="headerlink" title="6. Consensus mechanism(共识机制)"></a>6. <strong>Consensus mechanism(共识机制)</strong></h2><p>在跟资产相关的世界里，这个机制需要做到:</p><ul><li>确保某个address的数字只能由拥有它的人来操作</li><li>交易记录无法篡改</li><li>交易记录可追溯</li></ul><p>比特币也是围绕这几个问题展开的，当然它还干了其他几件牛B的事情:</p><ul><li>在去中心化的条件下解决spend twice的问题</li><li>防止通货膨胀的货币发行机制</li></ul><p><strong>完全的去中心化</strong>对区块链来说并不是一个必选项，就大部分的商业活动看，去中心化反而会增加很多不必要的复杂性。</p><p>发币也不是必选项。</p><p>我们先来看如何做到<em>确保某个address的数字只能由拥有它的人来操作</em>，<em>交易记录无法篡改</em>，<em>交易记录可追溯</em></p><h2 id="7-Cryptography-密码学"><a href="#7-Cryptography-密码学" class="headerlink" title="7. Cryptography(密码学)"></a>7. Cryptography(密码学)</h2><h3 id="7-1-Asymmetric-cryptography-非对称加密"><a href="#7-1-Asymmetric-cryptography-非对称加密" class="headerlink" title="7.1 Asymmetric cryptography(非对称加密)"></a>7.1 Asymmetric cryptography(非对称加密)</h3><ul><li><p>公钥加密，只有对应的私钥能够解密</p><p>加密货币中的address对应公钥(bitcoin的实现里面，为了隐藏身份，对public key做了hash),对该address的资产进行操作的唯一条件是:拥有对应的私钥。</p></li><li><p>私钥签名，公钥能够验证是不是对应的私钥签名的</p><p>把公钥和签名广播出去，nodes可以验证交易的有效性。</p></li><li><p>篡改无效<br>签名的信息确实是签名者本人的意愿，nodes能对此进行确认。</p></li><li><p>PKI中利用CA颁发证书的方式来确定网络中的身份</p><p>对于公有链，peer可以自由加入，退出，并不需要一个中心化的CA来对身份进行认证;联盟链，peer的身份和权限可利用该机制来实现，比如hyperledger中的msp</p><p>比特币的交易:</p><p><img src="/img/block-chain/img/spending-bitcoin.png" alt="图片"></p></li></ul><p>这就回答了，如何做到<strong>确保某个address的数字只能由拥有它的人来操作</strong>的问题。</p><h3 id="7-2-SHA-Secure-Hash-Algorithm"><a href="#7-2-SHA-Secure-Hash-Algorithm" class="headerlink" title="7.2 SHA(Secure Hash Algorithm)"></a>7.2 SHA(Secure Hash Algorithm)</h3><ul><li>任意长度的数据-&gt;固定长度的数据</li><li>相同input-&gt;相同output</li><li>冲突几率很小,改变input的一个字符，output都会不同</li><li>验证hash value很容易，反推很难<blockquote><p>计算一个任意长度input的hash value非常快，但是给出一个output，要算出input却非常难，目前只有遍历试验的方法。Bitcoin中会根据目前的平均出块速度，给出一个ouput,谁先构造出hash(input)小于该output的数据，谁就拥有当前出块的权利。这个遍历试验的过程就叫做<strong>挖矿(mining)</strong>，当某个peer找到符合条件的input,它会广播给其他peer,其他peer对其进行验证，这个遍历试验并向大家证明的过程，就叫做<strong>POW</strong>;而每一次出块会有一定的奖励，这个奖励是比特币产生(coinbase)的唯一方式,而区块中确认交易的output和input的差额就是给记账peer的<strong>手续费(transaction fee)</strong>。</p></blockquote></li></ul><p>而做到交易记录<strong>无法篡改</strong>和<strong>可追溯</strong>,还需要block chain这种数据结构。</p><h2 id="8-Hash-chain-amp-amp-Block-chain"><a href="#8-Hash-chain-amp-amp-Block-chain" class="headerlink" title="8. Hash chain &amp;&amp; Block chain"></a>8. Hash chain &amp;&amp; Block chain</h2><p>block chain其实是一种特殊的hash chain。</p><p><img src="/img/block-chain/img/data-structure.png" alt="图片"></p><p>首先，数据是存在分布式网络的各个节点中的，这些节点有可能有些是坏人，”不可篡改“是指整个分布式网络对外提供的block chain data是”不可篡改”的。恶意节点的篡改，得不到承认，并且不影响对外的服务。</p><p>比特币中的好人们商量好:我们只认best block chain,就是符合规则(consensus mechanism)并且最长的那条链。</p><p>下面结合block chain的具体结构和相应的consensus mechanism来说明,why”不可篡改”?</p><p>block chain数据结构的特点是:</p><ul><li>链式存储，从任何一个block可以找到其前面的block</li><li>且每一个block(Genesis block除外)有上一个block的hash</li></ul><p>由于hash的”<strong>冲突几率很小,改变input的一个字符，output都会不同</strong>“的特性，改变一个区块的数据将会导致后面区块的hash对不上，也许你会说,”改变后面block的hash不就行了？”，但是，由于后面的block也改变了，那么其hash也改变了，而一个block有效的一个必要条件:</p><blockquote><p>hash(block)&lt;根据当前平均出块速度计算出的target</p></blockquote><p>系统会计算当前1小时的平均出块速度，动态调整difficulty,得出一个target，而一个有效的区块，不但要拥有前一个区块的hash,还必须计算出一个nonce,使得当前block的hash值小于该target。</p><p>这意味着，改变任何一个block,并且想跟上目前最长的链，需要重做生成后面所有block的工作量。</p><p>而这是非常难的。</p><p>理论上，跟所有honest peers竞争，掌握51%以上的算力是有可能对数据进行篡改的，但是，假如你的算力真的非常强，你可以把交易都篡改了，这是否能让你的利益最大化呢？首先，这个篡改肯定会被发现，当honest peers发现很长的不匹配block时，会发出告警，然后用户也会知道，这会导致什么结果呢？一个必然的结果是：系统无法被人信任，价值归0。而拥有强大的算力，并且选择做honest peer，你会获得不错的稳定收益;这就导致强大的算力更倾向于做honest peer,而拥有越多强大算力的honest peer,整个系统就越难被攻破。这就是人性，这就是市场。</p><p>所以，比特币里面不可篡改的保证靠的是:<strong>POW</strong> + <strong>block chain存储</strong> + <strong>激励措施的博弈</strong></p><p>但是，这里一个很致命的问题是:POW太浪费电了……</p><p>那么，有没有既不浪费电又能够保证”不可篡改”的办法呢？</p><p>至少，在”去中心化”的条件下是很难实现的。</p><ul><li><p>PoS(Proof of Stake)</p><p>相当于越有钱，越有话语权(挖矿或者确认交易)，意思是越有钱越想维持这个系统，越不会想破坏这个系统，从而数据也是”不可篡改的”;但是，这个将导致一个很明显的结果:有钱的会越来越有钱。越来越集中化。</p></li><li><p>PBFT(Practical Byzantine Fault Tolerance )?</p><p>意思是n个peers互相交换对new block的看法，然后honest peer取majority(n-1)的看法来决定new block是否合法,可以证明，只要坏人不超过 (n-1) / 3 ，整个系统就是按honest peer来运行的。</p><p>“不可篡改”的保证在于:你需要majority的同意(一般通过签名来保证)，而少数恶意节点显然做不到。</p></li></ul><p>为了交易速度和省电，目前很多加密货币采用了Pos;而PBFT由于需要知道有多少其他peers并能识别其签名，一般适合私有链，联盟链。</p><p>需要注意的是，区块链里面说的共识算法，跟一般分布式系统里面的paxos,raft等一致性协议相比,除了关注网络本身的失效外，还需要对数据的安全性，合约的有效性做很多的工作。</p><h2 id="9-Blockchain-区块链"><a href="#9-Blockchain-区块链" class="headerlink" title="9. Blockchain(区块链)"></a>9. Blockchain(区块链)</h2><p>所以，其实给区块链下一个定义不是一件容易的事情。</p><p>wikipedia:</p><blockquote><p>A blockchain, originally block chain, is a continuously growing list of records, called blocks, which are linked and secured using cryptography. Each block typically contains a cryptographic hash of the previous block, a timestamp and transaction data.</p></blockquote><p>investopedia:</p><blockquote><p>A blockchain is a digitized, decentralized, public ledger of all cryptocurrency transactions. Constantly growing as ‘completed’ blocks (the most recent transactions) are recorded and added to it in chronological order, it allows market participants to keep track of digital currency transactions without central recordkeeping. Each node (a computer connected to the network) gets a copy of the blockchain, which is downloaded automatically.</p></blockquote><p>百度百科:</p><blockquote><p>狭义来讲，区块链是一种按照时间顺序将数据区块以顺序相连的方式组合成的一种链式数据结构， 并以密码学方式保证的不可篡改和不可伪造的分布式账本。</p><p>广义来讲，区块链技术是利用块链式数据结构来验证与存储数据、利用分布式节点共识算法来生成和更新数据、利用密码学的方式保证数据传输和访问的安全、利用由自动化脚本代码组成的智能合约来编程和操作数据的一种全新的分布式基础架构与计算方式。</p></blockquote><p>感觉每一个说得都很有道理,也确实都很有道理。</p><p>不管如何，上面说的原理部分，基本上就是区块链最核心的部分，虽然各种具体实现有很多细节的不同，但原理就这些了。</p><p>而根据区块链发展的历史，<strong>智能合约</strong>的引入就进入了所谓的区块链2.0时代。</p><p>连接移动端,Iot就进入了所谓的区块链3.0时代。</p><p>是不是有种被时代抛弃的感觉？劳资还在守着java当饭碗，侬都区块链3.0了？</p><h2 id="10-Smart-contract-智能合约"><a href="#10-Smart-contract-智能合约" class="headerlink" title="10. Smart contract(智能合约)"></a>10. Smart contract(智能合约)</h2><h2 id="10-1-比特币的脚本语言"><a href="#10-1-比特币的脚本语言" class="headerlink" title="10.1 比特币的脚本语言"></a>10.1 比特币的脚本语言</h2><p>其实代表区块链1.0的比特币也没有那么不智能，我们来看其交易验证的逻辑:</p><p><img src="/img/block-chain/img/bitcoin-transaction-propagation.png" alt="图片"></p><p>交易必须遵守以下规则:</p><ul><li>任何一个input必须来自于某一个output</li><li>一笔交易，可以有多个input,多个output</li><li>为了方便，input被spend后就作废了，如果有change(找零)，也体现在output中</li><li>可以推断，这科树的叶子记录的address对应的资产就是当前整个比特币的资产状况</li><li>叶子上的output也叫UTXO(Unspent Transaction Output)</li><li>有效的input必须来自UTXO</li><li>UXTO里面有public key的hash,对其操作必须提供private key签名和public key</li><li>网络节点根据共识机制维护公共账本,这实际上解决了spend twice的问题</li></ul><p>这里的验证逻辑就是contract(合约)。</p><p><img src="/img/block-chain/img/signing-output-to-spend.png" alt="图片"></p><ul><li>Public script包含了UTXO对应的Publick key的hash</li><li>Signature script包含了private key的签名以及public key</li><li>被签名的信息包含下一个UXTO的Public script和amount</li></ul><p>这里的script是一种非图灵完备的stack-based的脚本语言。</p><p>Public script：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OP_DUP OP_HASH160 &lt;PubkeyHash&gt; OP_EQUALVERIFY OP_CHECKSIG</span><br></pre></td></tr></table></figure></p><p>Signature script<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Sig&gt; &lt;PubKey&gt; OP_DUP OP_HASH160 &lt;PubkeyHash&gt; OP_EQUALVERIFY OP_CHECKSIG</span><br></pre></td></tr></table></figure></p><p>其执行过程如下:</p><p><img src="/img/block-chain/img/validate-stack.png" alt="图片"></p><p>每个节点都会对收到的transaction自动执行以上的验证逻辑。</p><p>而如果支持图灵完备语言来编写合约，并可动态部署，就叫<strong>智能合约</strong>。</p><h2 id="10-2-Hyperledger-fabric的chaincode"><a href="#10-2-Hyperledger-fabric的chaincode" class="headerlink" title="10.2 Hyperledger-fabric的chaincode"></a>10.2 Hyperledger-fabric的chaincode</h2><p>以太坊，超级账本等区块链2.0平台支持<strong>智能合约</strong>，本质上就是提供一个可编程的区块链平台，底层的区块链存储，一致性机制等通用的东西给你搭好了，你可以在上面很方便的编写自己的应用。</p><p>可以理解为一种paas,编程框架和云平台的结合。</p><p>下面就Hyperledger-fabric的chaincode来做具体说明。</p><p>所谓编写chaincode,其实就是提供一些服务，这些服务会对KV进行操作，这里的隐含条件是:</p><ul><li>KV的变更其实就是transaction,会遵守consensus记录到公共账本上</li><li>对某个Key的操作，是否需要相应的权限，取决于你的实现</li><li>大家约定需要权限，那就需要权限，约定不需要，那就不需要；也可以某些需要，某些不需要</li><li>原则上比特币的coinbase,PubScript+SigScript解锁的操作方式都可以实现在chaincode中</li><li>所以，其实chaincode的framework其实只是提供了get,set的最基本的方法</li><li>部署chaincode和调用chaincode的权限也是可以大家商量的</li><li>这种非常灵活的方式，能做的东西非常多</li><li>但是整个权限的约定，chaincode的编写，部署都非常繁琐</li><li>并且现在hyperledger fabric并没有一个统一的管理这些东西的地方</li><li>不理解底层原理，搞起来还是相当麻烦</li></ul><h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><p>QQ群:300911873</p><p>目前正在迭代的项目:</p><p><a href="https://github.com/foolcage/mastering-fabric" target="_blank" rel="noopener">https://github.com/foolcage/mastering-fabric</a></p><p><a href="https://github.com/foolcage/fooltrader" target="_blank" rel="noopener">https://github.com/foolcage/fooltrader</a></p><p>欢迎关注 一起探讨</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://gitee.com/null_071_4607/mastering-blockchain&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;开源地址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;这是区块链相关知识的一个梳理，旨在真正的get the skill并方便他人。&lt;/p&gt;
&lt;p&gt;知识可分为两类:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;逻辑体系型的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要思考，把各种概念连起来，或归纳，或演绎，最后，在大脑中形成一种逻辑网状结构。比如可计算理论，分布式系统，解释器等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用操作型的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基本不需要思考，只需要看一下目录，要用的时候参考一下手册即可。比如linux的各种命令，go,python的一些奇怪语法,elastic-search dsl的使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一类知识是比较有意思的，值得多花时间，这种”逻辑网状结构”最后会形成一个”打通”的集群，可能会让你的大脑产生一些有意思的想法；而第二类，千万别花太多时间，因为很有可能让你产生消极，厌学，忧郁等情绪，而你越努力，就越可能”斯德哥尔摩”。&lt;/p&gt;
&lt;p&gt;区块链知识可以归为第一类。&lt;/p&gt;
&lt;p&gt;研究一个东西，需要知道它包含哪些概念，我把它分为两类:&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
    
      <category term="区块链" scheme="http://www.wuxinvip.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>慢哈希加密</title>
    <link href="http://www.wuxinvip.com/2018/07/02/encryption/password-java-pbkdf2/"/>
    <id>http://www.wuxinvip.com/2018/07/02/encryption/password-java-pbkdf2/</id>
    <published>2018-07-02T00:00:00.000Z</published>
    <updated>2018-10-15T08:26:26.828Z</updated>
    
    <content type="html"><![CDATA[<p>PBKDF2算法【三种】介绍：</p><p><a href="https://en.wikipedia.org/wiki/PBKDF2" target="_blank" rel="noopener">wiki</a></p><p><a href="http://blog.jobbole.com/61872/#java" target="_blank" rel="noopener">加盐密码哈希：如何正确使用</a></p><p><a href="http://blog.csdn.net/u014375869/article/details/46773995" target="_blank" rel="noopener">PBKDF2加密的实现</a></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line">//PBKDF2</span><br><span class="line">import javax.crypto.SecretKeyFactory;</span><br><span class="line">import javax.crypto.spec.PBEKeySpec;</span><br><span class="line">import java.math.BigInteger;</span><br><span class="line">import java.security.NoSuchAlgorithmException;</span><br><span class="line">import java.security.SecureRandom;</span><br><span class="line">import java.security.spec.InvalidKeySpecException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by huoyan403 on 3/21/2017.</span><br><span class="line"> */</span><br><span class="line">public class PasswordEncryption &#123;</span><br><span class="line"></span><br><span class="line">    public static final String PBKDF2_ALGORITHM = &quot;PBKDF2WithHmacSHA1&quot;;</span><br><span class="line"></span><br><span class="line">    // The following constants may be changed without breaking existing hashes.</span><br><span class="line">    /**</span><br><span class="line">     * 盐的长度---不宜过短</span><br><span class="line">     */</span><br><span class="line">    public static final int SALT_BYTE_SIZE = 48 / 2;</span><br><span class="line">    /**</span><br><span class="line">     * 生成密文的长度</span><br><span class="line">     */</span><br><span class="line">    public static final int HASH_BYTE_SIZE = 32 / 2;</span><br><span class="line">    /**</span><br><span class="line">     * 迭代次数</span><br><span class="line">     */</span><br><span class="line">    public static final int PBKDF2_ITERATIONS = 1000;</span><br><span class="line"></span><br><span class="line">    public static final int ITERATION_INDEX = 0;</span><br><span class="line">    public static final int SALT_INDEX = 1;</span><br><span class="line">    public static final int PBKDF2_INDEX = 2;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Returns a salted PBKDF2 hash of the password.</span><br><span class="line">     *  加密password</span><br><span class="line">     * @param   password    the password to hash</span><br><span class="line">     * @return              a salted PBKDF2 hash of the password</span><br><span class="line">     */</span><br><span class="line">    public static String createHash(String password)</span><br><span class="line">            throws NoSuchAlgorithmException, InvalidKeySpecException</span><br><span class="line">    &#123;</span><br><span class="line">        return createHash(password.toCharArray());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Returns a salted PBKDF2 hash of the password.</span><br><span class="line">     *</span><br><span class="line">     * @param   password    the password to hash</span><br><span class="line">     * @return              a salted PBKDF2 hash of the password</span><br><span class="line">     */</span><br><span class="line">    public static String createHash(char[] password)</span><br><span class="line">            throws NoSuchAlgorithmException, InvalidKeySpecException</span><br><span class="line">    &#123;</span><br><span class="line">        // Generate a random salt</span><br><span class="line">        SecureRandom random = new SecureRandom();</span><br><span class="line">        byte[] salt = new byte[SALT_BYTE_SIZE];</span><br><span class="line">        random.nextBytes(salt);</span><br><span class="line"></span><br><span class="line">        // Hash the password</span><br><span class="line">        byte[] hash = pbkdf2(password, salt, PBKDF2_ITERATIONS, HASH_BYTE_SIZE);</span><br><span class="line">        // format iterations:salt:hash</span><br><span class="line">        return PBKDF2_ITERATIONS + &quot;:&quot; + toHex(salt) + &quot;:&quot; +  toHex(hash);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Validates a password using a hash.</span><br><span class="line">     *  验证密码是否正确 需传password和 加密后的序列值</span><br><span class="line">     * @param   password        the password to check</span><br><span class="line">     * @param   correctHash     the hash of the valid password</span><br><span class="line">     * @return                  true if the password is correct, false if not</span><br><span class="line">     */</span><br><span class="line">    public static boolean validatePassword(String password, String correctHash)</span><br><span class="line">            throws NoSuchAlgorithmException, InvalidKeySpecException</span><br><span class="line">    &#123;</span><br><span class="line">        return validatePassword(password.toCharArray(), correctHash);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Validates a password using a hash.</span><br><span class="line">     *</span><br><span class="line">     * @param   password        the password to check</span><br><span class="line">     * @param   correctHash     the hash of the valid password</span><br><span class="line">     * @return                  true if the password is correct, false if not</span><br><span class="line">     */</span><br><span class="line">    public static boolean validatePassword(char[] password, String correctHash)</span><br><span class="line">            throws NoSuchAlgorithmException, InvalidKeySpecException</span><br><span class="line">    &#123;</span><br><span class="line">        // Decode the hash into its parameters</span><br><span class="line">        String[] params = correctHash.split(&quot;:&quot;);</span><br><span class="line">        int iterations = Integer.parseInt(params[ITERATION_INDEX]);</span><br><span class="line">        byte[] salt = fromHex(params[SALT_INDEX]);</span><br><span class="line">        byte[] hash = fromHex(params[PBKDF2_INDEX]);</span><br><span class="line">        // Compute the hash of the provided password, using the same salt,</span><br><span class="line">        // iteration count, and hash length</span><br><span class="line">        byte[] testHash = pbkdf2(password, salt, iterations, hash.length);</span><br><span class="line">        // Compare the hashes in constant time. The password is correct if</span><br><span class="line">        // both hashes match.</span><br><span class="line">        return slowEquals(hash, testHash);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Compares two byte arrays in length-constant time. This comparison method</span><br><span class="line">     * is used so that password hashes cannot be extracted from an on-line</span><br><span class="line">     * system using a timing attack and then attacked off-line.</span><br><span class="line">     *</span><br><span class="line">     * @param   a       the first byte array</span><br><span class="line">     * @param   b       the second byte array</span><br><span class="line">     * @return          true if both byte arrays are the same, false if not</span><br><span class="line">     */</span><br><span class="line">    private static boolean slowEquals(byte[] a, byte[] b)</span><br><span class="line">    &#123;</span><br><span class="line">        int diff = a.length ^ b.length;</span><br><span class="line">        for(int i = 0; i &lt; a.length &amp;&amp; i &lt; b.length; i++)</span><br><span class="line">            diff |= a[i] ^ b[i];</span><br><span class="line">        return diff == 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *  Computes the PBKDF2 hash of a password.</span><br><span class="line">     *</span><br><span class="line">     * @param   password    the password to hash.</span><br><span class="line">     * @param   salt        the salt</span><br><span class="line">     * @param   iterations  the iteration count (slowness factor)</span><br><span class="line">     * @param   bytes       the length of the hash to compute in bytes</span><br><span class="line">     * @return              the PBDKF2 hash of the password</span><br><span class="line">     */</span><br><span class="line">    private static byte[] pbkdf2(char[] password, byte[] salt, int iterations, int bytes)</span><br><span class="line">            throws NoSuchAlgorithmException, InvalidKeySpecException</span><br><span class="line">    &#123;</span><br><span class="line">        PBEKeySpec spec = new PBEKeySpec(password, salt, iterations, bytes * 8);</span><br><span class="line">        SecretKeyFactory skf = SecretKeyFactory.getInstance(PBKDF2_ALGORITHM);</span><br><span class="line">        return skf.generateSecret(spec).getEncoded();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Converts a string of hexadecimal characters into a byte array.</span><br><span class="line">     *</span><br><span class="line">     * @param   hex         the hex string</span><br><span class="line">     * @return              the hex string decoded into a byte array</span><br><span class="line">     */</span><br><span class="line">    private static byte[] fromHex(String hex)</span><br><span class="line">    &#123;</span><br><span class="line">        byte[] binary = new byte[hex.length() / 2];</span><br><span class="line">        for(int i = 0; i &lt; binary.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            binary[i] = (byte)Integer.parseInt(hex.substring(2*i, 2*i+2), 16);</span><br><span class="line">        &#125;</span><br><span class="line">        return binary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Converts a byte array into a hexadecimal string.</span><br><span class="line">     *</span><br><span class="line">     * @param   array       the byte array to convert</span><br><span class="line">     * @return              a length*2 character string encoding the byte array</span><br><span class="line">     */</span><br><span class="line">    private static String toHex(byte[] array)</span><br><span class="line">    &#123;</span><br><span class="line">        BigInteger bi = new BigInteger(1, array);</span><br><span class="line">        String hex = bi.toString(16);</span><br><span class="line">        int paddingLength = (array.length * 2) - hex.length();</span><br><span class="line">        if(paddingLength &gt; 0)</span><br><span class="line">            return String.format(&quot;%0&quot; + paddingLength + &quot;d&quot;, 0) + hex;</span><br><span class="line">        else</span><br><span class="line">            return hex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"> //test类</span><br><span class="line">import com.meirengu.common.PasswordEncryption;</span><br><span class="line"></span><br><span class="line">import static com.meirengu.common.PasswordEncryption.createHash;</span><br><span class="line">import static com.meirengu.common.PasswordEncryption.validatePassword;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by huoyan403 on 3/21/2017.</span><br><span class="line"> */</span><br><span class="line">public class PasswordEncryptionTest &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Tests the basic functionality of the PasswordHash class</span><br><span class="line">     *</span><br><span class="line">     * @param   args        ignored</span><br><span class="line">     */</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            // Print out 10 hashes</span><br><span class="line">            for(int i = 0; i &lt; 10; i++)</span><br><span class="line">                System.out.println(createHash(&quot;p\r\nassw0Rd!&quot;));</span><br><span class="line"></span><br><span class="line">            // Test password validation</span><br><span class="line">            boolean failure = false;</span><br><span class="line">            System.out.println(&quot;Running tests...&quot;);</span><br><span class="line">            for(int i = 0; i &lt; 100; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                String password = &quot;&quot;+i;</span><br><span class="line">                String hash = createHash(password);</span><br><span class="line">                String secondHash = createHash(password);</span><br><span class="line">                if(hash.equals(secondHash)) &#123;</span><br><span class="line">                    System.out.println(&quot;FAILURE: TWO HASHES ARE EQUAL!&quot;);</span><br><span class="line">                    failure = true;</span><br><span class="line">                &#125;</span><br><span class="line">                String wrongPassword = &quot;&quot;+(i+1);</span><br><span class="line">                if(PasswordEncryption.validatePassword(wrongPassword,password)) &#123;</span><br><span class="line">                    System.out.println(&quot;FAILURE: WRONG PASSWORD ACCEPTED!&quot;);</span><br><span class="line">                    failure = true;</span><br><span class="line">                &#125;</span><br><span class="line">                if(!PasswordEncryption.validatePassword(password, hash)) &#123;</span><br><span class="line">                    System.out.println(&quot;FAILURE: GOOD PASSWORD NOT ACCEPTED!&quot;);</span><br><span class="line">                    failure = true;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(failure)</span><br><span class="line">                System.out.println(&quot;TESTS FAILED!&quot;);</span><br><span class="line">            else</span><br><span class="line">                System.out.println(&quot;TESTS PASSED!&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            System.err.print(validatePassword(&quot;&quot;,&quot;1000:29bcf0ef3b1f33698b2254415caf7c81957770883a8b65b7:d9cb6f281a95c4a44415b5e5e37fb607&quot;));</span><br><span class="line">            System.err.print(createHash(&quot;123456&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">        catch(Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(&quot;ERROR: &quot; + ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">123456----加密后--&gt;1000:29bcf0ef3b1f33698b2254415caf7c81957770883a8b65b7:d9cb6f281a95c4a44415b5e5e37fb60</span><br><span class="line">不可逆 验证只能使用validataPassword(&quot;原密码&quot;，&quot;加密后密码&quot;)</span><br><span class="line"></span><br><span class="line">遵从原则：密码不通过where 1=1 and password = #&#123;password&#125;</span><br><span class="line"></span><br><span class="line">保证代码验证过程中没有任何地方使用原密码原文查询、比对</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PBKDF2算法【三种】介绍：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/PBKDF2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.jobbole.com/61872/#java&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;加盐密码哈希：如何正确使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/u014375869/article/details/46773995&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PBKDF2加密的实现&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="password" scheme="http://www.wuxinvip.com/categories/java/password/"/>
    
    
      <category term="密码加密" scheme="http://www.wuxinvip.com/tags/%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>谈谈区块链对互联网的冲击</title>
    <link href="http://www.wuxinvip.com/2018/07/02/block-chain/block-chain-0/"/>
    <id>http://www.wuxinvip.com/2018/07/02/block-chain/block-chain-0/</id>
    <published>2018-07-02T00:00:00.000Z</published>
    <updated>2018-10-15T05:54:53.978Z</updated>
    
    <content type="html"><![CDATA[<p>区块链 起源于比特币、不对、应该是说、区块链理论的第一应用是比特币</p><p>是日本一位大佬、看透了金融行业金融机构对货币的管理和控制能力、<br>金融机构可以任意发行货币、日本那次经济危机有关吧、</p><p>区块链涉及的新技术 有：</p><ul><li>去中心化、采取共识机制来获取最值得信任的交易链、</li><li>智能合约、不借助第三方签订协议、这种协议一旦生效不可修改、可追溯</li></ul><a id="more"></a><p>去中心化：</p><pre><code>现在互联网技术的交易基本上都是有第三方担保、比如淘宝的支付宝、以及货币发行机构各大银行这种新技术是怎么改变互联网世界的架构的呢？首先这种不适用第三方担保的协议、可以无视第三方支付平台的兴衰而动荡、</code></pre><p>然后结合去中心化和智能合约、有些人头一次接触这种思维方式、于是很多人的思考就诞生了一波思维风暴</p><p>银行去中心化、货币去中心化、法律去中心化、等等各个行业的去中心化、共识机制、其实我觉得蛮不现实的、<br>机器会共识、人可不一定、人心可以收买的、没有一个良好的信任体系、共识机制也只是一个泡沫而已</p><p>再说智能合约、法律智能合约、货币交易智能合约、物联网智能合约、也是各个方面各个行业都可以嵌入</p><p>智能合约可以用来在多方的情况下、动态的签署一份使用合约、随后由去中心化的货币再进行支付自动转账</p><ul><li>法律：甲乙丙三方 签订一个合约、到期后合约执行、货币支付或者行为交易、这份合约保存到信任链条中永久保存</li><li>物联网：家电、车、购物、都可以接入智能合约、进行一个行为合约、然后通知货币链支付</li></ul><p>看起来就一个完全自由化的社会</p><p><strong>关于共识机制的解决方案</strong></p><h3 id="公有链——对任何人开放，任何人都能参与"><a href="#公有链——对任何人开放，任何人都能参与" class="headerlink" title="公有链——对任何人开放，任何人都能参与"></a>公有链——对任何人开放，任何人都能参与</h3><pre><code>公有链通常也称为非许可链（Permissionless Blockchain），任何人都可以参与区块链数据维护和读取，容易部署应用程序，完全去中心化不受任何机构控制。公有链的应用非常广泛，例如资产证券化、数字资产的跨链流通 ……现在市场上的主流大势区块链项目比特币、以太坊、量子链、EOS、唯链以及Neo等都是公有链项目。公有链是真正意义上的完全去中心化的区块链，它通过密码学保证交易不可篡改，同时也利用密码学验证以及经济上的激励，在互为陌生的网络环境中建立共识，从而形成去中心化的信用机制。在公有链中的共识机制一般是工作量证明（PoW）和权益证明（PoS） 。公有链具有通过去中介化的方式打破当前中心化商业模式的潜力，而且本身无需维护服务器或管理系统，从根本上降低创建和运行去中心化应用程序（dApp）的成本。</code></pre><h3 id="联盟链——仅对联盟成员开放"><a href="#联盟链——仅对联盟成员开放" class="headerlink" title="联盟链——仅对联盟成员开放"></a>联盟链——仅对联盟成员开放</h3><pre><code>联盟链是一种需要注册许可的区块链，这种区块链也称为许可链（Permissioned Blockchain）。联盟链仅限于联盟成员参与，联盟规模可以大到国与国之间，也可以是不同的机构企业之间。区块链上的读写权限、参与记账权限按联盟规则来制定。整个网络由成员机构共同维护，网络接入一般通过成员机构的网关节点接入，共识过程由预先选好的节点控制。因此联盟链一般不采用工作量证明的挖矿机制，而是多采用权益证明（PoS）或PBFT（Practical Byzantine Fault Tolerant）、RAFT等共识算法。和公有链最高每秒完成交易3-20相比，联盟链可以达到1000-10000 ，交易速度更快且交易成本大幅降低。联盟链可以解决结算问题，降低两地结算的成本和时间，适合于机构间的交易、结算等B2B场景，因此金融行业应用最广泛。其中最知名的就是R3CVE组织，即R3联盟，有包括花旗银行、中国平安银行、纽约梅隆银行在内的50多家银行机构加入</code></pre><h3 id="私有链——仅行业内部透明，不对外开放"><a href="#私有链——仅行业内部透明，不对外开放" class="headerlink" title="私有链——仅行业内部透明，不对外开放"></a>私有链——仅行业内部透明，不对外开放</h3><pre><code>私有链，仅限于企业、国家机构或者单独个体使用，不完全能够解决信任问题，但是可以改善可审计性。常用于企业内部的数据库管理、审计等，政府的预算和执行，或者政府的行业统计数据等。他们彼此之间需要透明，但没必要对外公众透明。私有链的价值主要是提供安全、可追溯、不可篡改、自动执行的运算平台，可以同时防范来自内部和外部对数据的安全攻击，这个在传统的系统是很难做到的。任何人都可以创建私链的平台的Multichain项目本身就是一个私有链项目。</code></pre><p>另：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">不管区块链是不是泡沫。反正各大佬已经部署未来了、阿里、腾讯、百度、京东也在看形势、</span><br><span class="line"></span><br><span class="line">还有众多小企业在瞄准区块链猛打擦边球、毕竟这是一个机会也是一个机遇、不走未必能活、走了就可能一夜发达、</span><br><span class="line"></span><br><span class="line">互联网时代、数据时代、人工智能时代、区块链时代、</span><br><span class="line"></span><br><span class="line">小视频时代、老博客时代、共享社会、</span><br><span class="line"></span><br><span class="line">这个世界、名词化社会、动不动就我们重新定义了XXX、、、、、这样拉融资也算个噱头、、</span><br><span class="line"></span><br><span class="line">不过也可以看出机遇、机会是真的多、看准未来【未来在变、我们也要变】、and 、坚持以获成功</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;区块链 起源于比特币、不对、应该是说、区块链理论的第一应用是比特币&lt;/p&gt;
&lt;p&gt;是日本一位大佬、看透了金融行业金融机构对货币的管理和控制能力、&lt;br&gt;金融机构可以任意发行货币、日本那次经济危机有关吧、&lt;/p&gt;
&lt;p&gt;区块链涉及的新技术 有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去中心化、采取共识机制来获取最值得信任的交易链、&lt;/li&gt;
&lt;li&gt;智能合约、不借助第三方签订协议、这种协议一旦生效不可修改、可追溯&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="block-chain" scheme="http://www.wuxinvip.com/categories/block-chain/"/>
    
    
      <category term="区块链" scheme="http://www.wuxinvip.com/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>Tengine</title>
    <link href="http://www.wuxinvip.com/2018/07/01/github/tengine/"/>
    <id>http://www.wuxinvip.com/2018/07/01/github/tengine/</id>
    <published>2018-07-01T00:00:00.000Z</published>
    <updated>2018-10-15T05:57:31.416Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基于nginx更强大的web服务器负载均衡器"><a href="#基于nginx更强大的web服务器负载均衡器" class="headerlink" title="基于nginx更强大的web服务器负载均衡器"></a>基于nginx更强大的web服务器负载均衡器</h3><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Tengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。<br>Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。<br>它的最终目标是打造一个高效、稳定、安全、易用的Web平台。</p><p>从2011年12月开始，Tengine成为一个开源项目，Tengine团队在积极地开发和维护着它。<br>Tengine团队的核心成员来自于淘宝、搜狗等互联网企业。<br>Tengine是社区合作的成果，我们欢迎大家参与其中，贡献自己的力量。</p><a id="more"></a><h2 id="Tengine文档"><a href="#Tengine文档" class="headerlink" title="Tengine文档"></a>Tengine文档</h2><p><a href="http://tengine.taobao.org" target="_blank" rel="noopener">http://tengine.taobao.org</a></p><p><a href="https://github.com/alibaba/tengine" target="_blank" rel="noopener">https://github.com/alibaba/tengine</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基于nginx更强大的web服务器负载均衡器&quot;&gt;&lt;a href=&quot;#基于nginx更强大的web服务器负载均衡器&quot; class=&quot;headerlink&quot; title=&quot;基于nginx更强大的web服务器负载均衡器&quot;&gt;&lt;/a&gt;基于nginx更强大的web服务器负载均衡器&lt;/h3&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Tengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。&lt;br&gt;Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。&lt;br&gt;它的最终目标是打造一个高效、稳定、安全、易用的Web平台。&lt;/p&gt;
&lt;p&gt;从2011年12月开始，Tengine成为一个开源项目，Tengine团队在积极地开发和维护着它。&lt;br&gt;Tengine团队的核心成员来自于淘宝、搜狗等互联网企业。&lt;br&gt;Tengine是社区合作的成果，我们欢迎大家参与其中，贡献自己的力量。&lt;/p&gt;
    
    </summary>
    
      <category term="github" scheme="http://www.wuxinvip.com/categories/github/"/>
    
    
      <category term="项目推荐" scheme="http://www.wuxinvip.com/tags/%E9%A1%B9%E7%9B%AE%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>基于Strom的日志实时流量分析主动防御(CCFirewall)系统</title>
    <link href="http://www.wuxinvip.com/2018/07/01/github/cc-iptable/"/>
    <id>http://www.wuxinvip.com/2018/07/01/github/cc-iptable/</id>
    <published>2018-07-01T00:00:00.000Z</published>
    <updated>2018-10-15T05:57:31.409Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CC防火墙-github-地址"><a href="#CC防火墙-github-地址" class="headerlink" title="CC防火墙 github 地址"></a><a href="https://github.com/gy-games/shield" target="_blank" rel="noopener">CC防火墙 github 地址</a></h2><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>CC防火墙的架构采用Flume+Kafka+Strom+Zookeeper+Mysql实现,实现异常IP的及时封停功能</p><p><img src="/blog/github/img/cc/Struct.jpg" alt=""></p><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><ul><li><strong>Flume</strong>      :部署在所有的Nginx服务器上，将Nginx日志推送至Kafka中，</li><li><strong>Kafka</strong>      : 临时存储Nginx的log数据</li><li><strong>Strom</strong>     ：从Kafka取数据并进行数据分析</li><li><strong>Zookeeper</strong> ：存储CC防火墙的配置文件，并且所有部署在Squid上的客户端也注册在这个Zookeeper上。</li><li><strong>Agent</strong>     ：部署在每台Squid上，并且信息注册到Zookeeper的临时节点上，接收到封停指令后通过iptables封锁IP。</li></ul><a id="more"></a><h2 id="Strom拓扑"><a href="#Strom拓扑" class="headerlink" title="Strom拓扑"></a>Strom拓扑</h2><p><img src="/blog/github/img/cc/Strom.jpg" alt=""></p><ul><li><strong>KafkaSpOut</strong>：进行Kafka数据的读取，这里为了方便与简单，并且保证顺序性Kafka内只是用一个Partion。</li><li><strong>LogFormatBolt</strong> : 收到KafkaSpout读取出的Nginx日志后进行格式化处理，并在此使用纯真库进行IP GEO匹配</li><li><strong>IpAnalysis</strong> ： 几乎所有的逻辑都在这里实现，如IP的计数器，报警的匹配等等，为了可以动态调整防火墙的配置，配置文件保存在Zookeeper中，也是在这里Watch Zookeeper的节点，达到动态改变配置的。</li><li><strong>BlockBolt</strong> ： 接收到IpAnalysis 发送的信息后，将异常的信息通过Thrift发送给各个Squid机器。</li><li><strong>UnBlockBolt</strong> ： 接收到BlockBolt成功封锁后的IP后经过一段时间进行解封。</li><li><strong>BlockReportBlot</strong> ： 做数据统计用的，对整体的作用不大</li><li><strong>xStoreBolt</strong> ： 数据库存储Bolt，拓扑上的IPStoreBolt，BlockStoreBolt，BlockReportStoreBolt 都是使用的这一个Bolt。</li></ul><h2 id="Thrit封存解封接口"><a href="#Thrit封存解封接口" class="headerlink" title="Thrit封存解封接口"></a>Thrit封存解封接口</h2><pre><code>service CCfirewall{    string  blockipbyiptables(1:string mkey,2: string ip)    string  unblockipbyiptables(1:string mkey,2: string ip)}</code></pre><h2 id="Zookeeper目录"><a href="#Zookeeper目录" class="headerlink" title="Zookeeper目录"></a>Zookeeper目录</h2><p><strong>目录树</strong></p><pre><code>.└─ccfirewall   ├─config                           //存储防火墙配置信息   └─agent_list                       //存储Agent列表           └─iptables                               //使用iptables封锁的站点            ├─10.0.0.1            ├─10.0.0.1            ├─...</code></pre><p><strong>config配置</strong></p><pre><code>{    &quot;count&quot;: &quot;50&quot;,                            //IP计数个数    &quot;if_block&quot;: &quot;true&quot;,                        //是否开启封停    &quot;if_warning&quot;: &quot;false&quot;,                    //是否开启警告    &quot;threshold_w_secound&quot;: &quot;10&quot;,            //警告阈值秒数    &quot;threshold_secound&quot;: &quot;20&quot;,                //封停阈值秒数    &quot;block_second&quot;: &quot;864000&quot;,                //封停秒数    &quot;ip_white_list&quot;: [                        //IP白名单        &quot;127.0.0.1&quot;,        &quot;211.103.231.10&quot;    ],    &quot;url_list&quot;: [{                            //URL黑名单        &quot;url&quot;: &quot;all&quot;,                        //全部        &quot;type&quot;: &quot;normal&quot;                    //normal (精确) 或 after (向后模糊)    }],    &quot;special_rule&quot;: {                        //特殊规则        &quot;reg.gyyx.cn/Login/Async&quot;: {        //URL            &quot;threshold_w_secound&quot;: &quot;100&quot;,    //警告阈值秒数            &quot;threshold_secound&quot;: &quot;300&quot;,        //封停阈值秒数            &quot;block_second&quot;: &quot;86400&quot;            //封停秒数        }    }}</code></pre><h2 id="数据库模型"><a href="#数据库模型" class="headerlink" title="数据库模型"></a>数据库模型</h2><p><img src="/blog/github/img/cc/pdm.jpg" alt=""></p><h2 id="Agent"><a href="#Agent" class="headerlink" title="Agent"></a>Agent</h2><p><strong>启动Agent</strong> </p><pre><code>python CCFirewall.py 本机IP</code></pre><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>左上方可以设置防火前的配置，保存后实时生效，中上方可以查看当前已经上线的客户端，点击详情可以看到此客户端已经封停的IP格式，右上方可以看到曲线，地图，已经两个计数器信息</p><p>左下方显示最新的达到计数器的条目，右下方可以看到异常IP在客户端的封锁状况。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CC防火墙-github-地址&quot;&gt;&lt;a href=&quot;#CC防火墙-github-地址&quot; class=&quot;headerlink&quot; title=&quot;CC防火墙 github 地址&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/gy-games/shield&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CC防火墙 github 地址&lt;/a&gt;&lt;/h2&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;CC防火墙的架构采用Flume+Kafka+Strom+Zookeeper+Mysql实现,实现异常IP的及时封停功能&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/github/img/cc/Struct.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;组件&quot;&gt;&lt;a href=&quot;#组件&quot; class=&quot;headerlink&quot; title=&quot;组件&quot;&gt;&lt;/a&gt;组件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Flume&lt;/strong&gt;      :部署在所有的Nginx服务器上，将Nginx日志推送至Kafka中，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kafka&lt;/strong&gt;      : 临时存储Nginx的log数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strom&lt;/strong&gt;     ：从Kafka取数据并进行数据分析&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zookeeper&lt;/strong&gt; ：存储CC防火墙的配置文件，并且所有部署在Squid上的客户端也注册在这个Zookeeper上。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Agent&lt;/strong&gt;     ：部署在每台Squid上，并且信息注册到Zookeeper的临时节点上，接收到封停指令后通过iptables封锁IP。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="github" scheme="http://www.wuxinvip.com/categories/github/"/>
    
    
      <category term="项目推荐" scheme="http://www.wuxinvip.com/tags/%E9%A1%B9%E7%9B%AE%E6%8E%A8%E8%8D%90/"/>
    
      <category term="防火墙" scheme="http://www.wuxinvip.com/tags/%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>微信H5支付</title>
    <link href="http://www.wuxinvip.com/2018/06/30/essay/weichat-h5-pay/"/>
    <id>http://www.wuxinvip.com/2018/06/30/essay/weichat-h5-pay/</id>
    <published>2018-06-30T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.760Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/essay/img/weichatPay.jpg" alt="图片">微信支付流程</p><p>微信支付流程 大概就是这个样子、也包括支付宝、各大银联差不多一个流程、也就是传递的参数略有不同</p><ul><li>用户通过客户端下一个订单、</li><li>后台根据用户下的商品来生成一个订单、</li><li>然后可以有一个订单确认页面 以显示订单是否完整</li><li>之后确认订单、把订单信息发送给微信 生成预支付信息【订单需要支付了、我告诉微信一下、我这有个订单要用你的支付了】</li><li>之后用微信返回的预支付信息来调起微信支付【微信表示我收到了、我给你个密钥、你用它去找我的管家要钱就行了】</li><li>用户输入密码、确认支付【用户拿着密钥找管家、我要买这个、这是我的账户密码】</li><li>支付完成、微信告诉客户端的服务器、他买完了、并且成功了、【微信大佬告诉你后台”也就是你老婆”你丈夫在我这买了个这个】</li></ul><a id="more"></a><p>核心部分是这么个流程</p><p>当然 再接入微信支付前 要判断你对这个网站的拥有权<br>需要在你的服务器 上传一个文件作为验证、这个跟站长在百度等各大搜索引擎验证身份一个意思</p><p>还要配置 回调地址 以防止数据被篡改、保证安全性、</p><p>对于服务之间的通信全程都是https加密类型-混合型加密技术</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/essay/img/weichatPay.jpg&quot; alt=&quot;图片&quot;&gt;微信支付流程&lt;/p&gt;
&lt;p&gt;微信支付流程 大概就是这个样子、也包括支付宝、各大银联差不多一个流程、也就是传递的参数略有不同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户通过客户端下一个订单、&lt;/li&gt;
&lt;li&gt;后台根据用户下的商品来生成一个订单、&lt;/li&gt;
&lt;li&gt;然后可以有一个订单确认页面 以显示订单是否完整&lt;/li&gt;
&lt;li&gt;之后确认订单、把订单信息发送给微信 生成预支付信息【订单需要支付了、我告诉微信一下、我这有个订单要用你的支付了】&lt;/li&gt;
&lt;li&gt;之后用微信返回的预支付信息来调起微信支付【微信表示我收到了、我给你个密钥、你用它去找我的管家要钱就行了】&lt;/li&gt;
&lt;li&gt;用户输入密码、确认支付【用户拿着密钥找管家、我要买这个、这是我的账户密码】&lt;/li&gt;
&lt;li&gt;支付完成、微信告诉客户端的服务器、他买完了、并且成功了、【微信大佬告诉你后台”也就是你老婆”你丈夫在我这买了个这个】&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="http://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="随笔" scheme="http://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>语音交互</title>
    <link href="http://www.wuxinvip.com/2018/06/29/ai/yuyin-001/"/>
    <id>http://www.wuxinvip.com/2018/06/29/ai/yuyin-001/</id>
    <published>2018-06-29T00:00:00.000Z</published>
    <updated>2018-10-15T05:53:20.380Z</updated>
    
    <content type="html"><![CDATA[<ul><li>语音交互发展史</li><li><p>语音交互简介</p><pre><code>语音合成【在线、离线】语音识别【听写、转写、唤醒】语义理解【AIUI】语音识别模块【麦克风阵列、语音合成芯片、离线识别模块】模式识别【人脸识别、声纹识别】语音扩展【语音测评、机器翻译】</code></pre></li></ul><a id="more"></a><ul><li><p>语音交互应用场景</p><pre><code>导航智能设备</code></pre></li></ul><ul><li><p>语音交互组件</p><pre><code>AI</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;语音交互发展史&lt;/li&gt;
&lt;li&gt;&lt;p&gt;语音交互简介&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;语音合成【在线、离线】
语音识别【听写、转写、唤醒】
语义理解【AIUI】
语音识别模块【麦克风阵列、语音合成芯片、离线识别模块】
模式识别【人脸识别、声纹识别】
语音扩展【语音测评、机器翻译】
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AI" scheme="http://www.wuxinvip.com/categories/AI/"/>
    
    
      <category term="语音交互" scheme="http://www.wuxinvip.com/tags/%E8%AF%AD%E9%9F%B3%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title>MySQL经典架构</title>
    <link href="http://www.wuxinvip.com/2018/06/29/mysql/mysql-solution/"/>
    <id>http://www.wuxinvip.com/2018/06/29/mysql/mysql-solution/</id>
    <published>2018-06-29T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.886Z</updated>
    
    <content type="html"><![CDATA[<p><strong>mysql主从复制</strong></p><p>此种架构，一般初创企业比较常用，也便于后面步步的扩展</p><p><img src="/img/mysql/img/mysql-slave-master.jpg" alt="图片"></p><p>此架构特点：</p><ul><li>1、成本低，布署快速、方便</li><li>2、读写分离</li><li>3、还能通过及时增加从库来减少读库压力</li><li>4、主库单点故障</li><li>5、数据一致性问题（同步延迟造成）</li></ul><a id="more"></a><p><strong>MySQL+MMM架构</strong></p><p>通过 DRBD 基于 block 块的复制模式，快速进行双主故障切换，很大程度上解决主库单点故障问题</p><p><img src="/img/mysql/img/mysql-mmm.jpg" alt="图片"></p><p>此架构特点：</p><ul><li>1、高可用软件可使用 Heartbeat, 全面负责 VIP、数据与 DRBD 服务的管理</li><li>2、主故障后可自动快速切换，并且从库仍然能通过 VIP 与新主库进行数据同步</li><li>3、从库也支持读写分离，可使用中间件或程序实现</li></ul><p><strong>MySQL+DRDB架构</strong></p><p>MHA 目前在 Mysql 高可用方案中应该也是比较成熟和常见的方案，它由日本人开发出来，在 mysql 故障切换过程中，MHA 能做到快速自动切换操作，而且还能最大限度保持数据的一致性</p><p><img src="/img/mysql/img/mysql-drdb.jpg" alt="图片"></p><p>此架构特点：</p><ul><li>1、安装布署简单，不影响现有架构</li><li>2、自动监控和故障转移</li><li>3、保障数据一致性</li><li>4、故障切换方式可使用手动或自动多向选择</li><li>5、适应范围大（适用任何存储引擎）</li></ul><p><strong>MySQL+MHA架构</strong></p><p>MMM 即 Master-Master Replication Manager for MySQL（mysql 主主复制管理器），是关于 mysql 主主复制配置的监控、故障转移和管理的一套可伸缩的脚本套件（在任何时候只有一个节点可以被写入），这个套件也能基于标准的主从配置的任意数量的从服务器进行读负载均衡，所以你可以用它来在一组居于复制的服务器启动虚拟 ip，除此之外，它还有实现数据备份、节点之间重新同步功能的脚本。<br>MySQL 本身没有提供 replication failover 的解决方案，通过 MMM 方案能实现服务器的故障转移，从而实现 mysql 的高可用。</p><p><img src="/img/mysql/img/mysql-mha.jpg" alt="图片"></p><p>此方案特点：</p><ul><li>1、安全、稳定性较高，可扩展性好</li><li>2、 对服务器数量要求至少三台及以上</li><li>3、 对双主（主从复制性要求较高）</li><li>4、 同样可实现读写分离</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;mysql主从复制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此种架构，一般初创企业比较常用，也便于后面步步的扩展&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/mysql/img/mysql-slave-master.jpg&quot; alt=&quot;图片&quot;&gt;&lt;/p&gt;
&lt;p&gt;此架构特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、成本低，布署快速、方便&lt;/li&gt;
&lt;li&gt;2、读写分离&lt;/li&gt;
&lt;li&gt;3、还能通过及时增加从库来减少读库压力&lt;/li&gt;
&lt;li&gt;4、主库单点故障&lt;/li&gt;
&lt;li&gt;5、数据一致性问题（同步延迟造成）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="mysql" scheme="http://www.wuxinvip.com/categories/java/mysql/"/>
    
    
      <category term="MySQL" scheme="http://www.wuxinvip.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>atom 快捷键</title>
    <link href="http://www.wuxinvip.com/2018/06/28/essay/atom/"/>
    <id>http://www.wuxinvip.com/2018/06/28/essay/atom/</id>
    <published>2018-06-28T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.726Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:left">英文</th><th style="text-align:left">中文</th><th style="text-align:left">快捷键</th></tr></thead><tbody><tr><td style="text-align:left">New Window</td><td style="text-align:left">新建界面窗口</td><td style="text-align:left">Ctrl + Shift + N</td><td>如中文意思</td></tr><tr><td style="text-align:left">New File</td><td style="text-align:left">新建文件</td><td style="text-align:left">Ctrl + N</td><td>如中文意思</td></tr><tr><td style="text-align:left">Open File</td><td style="text-align:left">打开文件</td><td style="text-align:left">Ctrl + O</td><td>如中文意思</td></tr><tr><td style="text-align:left">Open Folder</td><td style="text-align:left">打开文件夹</td><td style="text-align:left">Ctrl + Shift + O</td><td>如中文意思</td></tr><tr><td style="text-align:left">Add Project Folder</td><td style="text-align:left">加载项目目录</td><td style="text-align:left">Ctrl + Alt + O</td><td>如中文意思</td></tr><tr><td style="text-align:left">Reopen Last Item</td><td style="text-align:left">重新加载上次项目</td><td style="text-align:left">Ctrl + Shift + T</td><td>如中文意思</td></tr><tr><td style="text-align:left">Save</td><td style="text-align:left">保存文件</td><td style="text-align:left">Ctrl + S</td><td>如中文意思</td></tr><tr><td style="text-align:left">Save As</td><td style="text-align:left">另存为</td><td style="text-align:left">Ctrl + Shift +S</td><td>如中文意思</td></tr><tr><td style="text-align:left">Close Tab</td><td style="text-align:left">关闭当前编辑文档</td><td style="text-align:left">Ctrl + W</td><td>如中文意思</td></tr><tr><td style="text-align:left">Close Window</td><td style="text-align:left">关闭编辑器</td><td style="text-align:left">Ctrl + Shift + W</td><td>如中文意思</td></tr><tr><td style="text-align:left">Undo</td><td style="text-align:left">撤销</td><td style="text-align:left">Ctrl + Z</td><td>如中文意思</td></tr><tr><td style="text-align:left">Redo</td><td style="text-align:left">重做</td><td style="text-align:left">Ctrl + Y</td><td>如中文意思</td></tr><tr><td style="text-align:left">Cut</td><td style="text-align:left">剪切</td><td style="text-align:left">Shift + Delete</td><td>如中文意思</td></tr><tr><td style="text-align:left">Copy</td><td style="text-align:left">复制</td><td style="text-align:left">Ctrl + Insert</td><td>如中文意思</td></tr><tr><td style="text-align:left">Copy Path</td><td style="text-align:left">复制文档路径</td><td style="text-align:left">Ctrl + Shift + C</td><td>如中文意思</td></tr><tr><td style="text-align:left">Paste</td><td style="text-align:left">粘贴</td><td style="text-align:left">Shift + Insert</td><td>如中文意思</td></tr><tr><td style="text-align:left">Select All</td><td style="text-align:left">全选</td><td style="text-align:left">Ctrl + A</td><td>如中文意思</td></tr><tr><td style="text-align:left">Select Encoding</td><td style="text-align:left">选择编码</td><td style="text-align:left">Ctrl + Shift +U</td><td>就是设置文件的编码</td></tr><tr><td style="text-align:left">Go to Line</td><td style="text-align:left">跳转到某行</td><td style="text-align:left">Ctrl + G</td><td>支持行列搜索,Row:Column</td></tr><tr><td style="text-align:left">Slect Grammar</td><td style="text-align:left">语法选择</td><td style="text-align:left">Ctrl + Shift + L</td><td>和Sublime的Syntax设置功能一样</td></tr><tr><td style="text-align:left">Reload</td><td style="text-align:left">重载</td><td style="text-align:left">Ctrl+ Alt +R</td><td>重新载入当前编辑的文档</td></tr><tr><td style="text-align:left">Toggle Full Screen</td><td style="text-align:left">全屏</td><td style="text-align:left">F11</td><td>如中文意思</td></tr><tr><td style="text-align:left">Increase Font Size</td><td style="text-align:left">增大字体</td><td style="text-align:left">Ctrl + Shift + “+”</td><td>Sublime的Ctrl + 也能生效</td></tr><tr><td style="text-align:left">Decrease Font Size</td><td style="text-align:left">减小字体</td><td style="text-align:left">Ctrl + Shift + “-“</td><td>Sublime的Ctrl - 也能生效</td></tr><tr><td style="text-align:left">Toggle Tree View</td><td style="text-align:left">展示隐藏目录树</td><td style="text-align:left">Ctrl + （竖杠）</td><td>Ctrl+b可以隐藏不能展示</td></tr><tr><td style="text-align:left">Toggle Commadn palette</td><td style="text-align:left">全局搜索面板</td><td style="text-align:left">Ctrl + Shift + P</td><td>和Sublime的大同小异</td></tr><tr><td style="text-align:left">Select Line</td><td style="text-align:left">选定一行</td><td style="text-align:left">Ctrl + L</td><td>如中文意思</td></tr><tr><td style="text-align:left">Select First Character of Line</td><td style="text-align:left">选定光标至行首</td><td style="text-align:left">Shift + Home</td><td>如中文意思</td></tr><tr><td style="text-align:left">Slect End of Line</td><td style="text-align:left">选定光标至行尾</td><td style="text-align:left">Shift + End</td><td>如中文意思</td></tr><tr><td style="text-align:left">Select to Top</td><td style="text-align:left">选定光标处至文档首行</td><td style="text-align:left">Ctrl + Shift + Home</td><td>就是光标处作为分割线,取文档上部分</td></tr><tr><td style="text-align:left">Select to Bottom</td><td style="text-align:left">选定光标处至文档尾行</td><td style="text-align:left">Ctrl + Shfit + End</td><td>就是光标处作为分割线,取文档下部分</td></tr><tr><td style="text-align:left">Find in Buffer</td><td style="text-align:left">从缓存器搜索</td><td style="text-align:left">Ctrl + F</td><td>与Sublime一致</td></tr><tr><td style="text-align:left">Replace in Buffer</td><td style="text-align:left">高级替换</td><td style="text-align:left">Ctrl + Shift + F</td><td>与Sublime一致</td></tr><tr><td style="text-align:left">Select Next</td><td style="text-align:left">匹配选定下一个</td><td style="text-align:left">Ctrl + D</td><td>和Sublime一模一样有木有</td></tr><tr><td style="text-align:left">Select All</td><td style="text-align:left">匹配选定所有</td><td style="text-align:left">Alt + F3</td><td>和Sublime一模一样有木有</td></tr><tr><td style="text-align:left">Find File</td><td style="text-align:left">查询文件,选定打开</td><td style="text-align:left">Ctrl + P</td><td>与Sublime不一样</td></tr><tr><td style="text-align:left">Delte End of Word</td><td style="text-align:left">删除光标处至词尾</td><td style="text-align:left">Ctrl + Del</td><td>如中文意思</td></tr><tr><td style="text-align:left">Duplicate Line</td><td style="text-align:left">复制行</td><td style="text-align:left">Ctrl + Shift + D</td><td>复制光标所在行自动换行</td></tr><tr><td style="text-align:left">Delete Line</td><td style="text-align:left">删除一行</td><td style="text-align:left">Ctrl + Shift + K</td><td>如中文意思</td></tr><tr><td style="text-align:left">Toggle Comment</td><td style="text-align:left">启用注释</td><td style="text-align:left">Ctrl + /</td><td>与Sublime一致</td></tr><tr><td style="text-align:left">Toggle developer tools</td><td style="text-align:left">打开Chrome调试器</td><td style="text-align:left">Ctrl + Alt + I</td><td>挺神奇的</td></tr><tr><td style="text-align:left">Indent</td><td style="text-align:left">增加缩进</td><td style="text-align:left">Ctrl + [</td><td>向右缩进</td></tr><tr><td style="text-align:left">Outdent</td><td style="text-align:left">减少缩进</td><td style="text-align:left">Ctrl + ]</td><td>向左缩进</td></tr><tr><td style="text-align:left">Move Line Up</td><td style="text-align:left">行向上移动</td><td style="text-align:left">Ctrl + up</td><td>如字面意思</td></tr><tr><td style="text-align:left">Move Line Down</td><td style="text-align:left">行向下移动</td><td style="text-align:left">Ctrl + Down</td><td>如字面意思</td></tr><tr><td style="text-align:left">Join Lines</td><td style="text-align:left">行链接</td><td style="text-align:left">Ctrl + J</td><td>追加</td></tr><tr><td style="text-align:left">newline-below</td><td style="text-align:left">光标之下增加一行</td><td style="text-align:left">Ctrl + Enter</td><td>与sublime 一致</td></tr><tr><td style="text-align:left">editor:newline-above</td><td style="text-align:left">光标之上增加一行</td><td style="text-align:left">Ctrl + Shift + Enter</td><td>与sublime 一致</td></tr><tr><td style="text-align:left">pane:show-next-item</td><td style="text-align:left">切换编辑的标签页</td><td style="text-align:left">Ctrl + Tab</td><td>如中文意思</td></tr><tr><td style="text-align:left">Fuzzy Finder</td><td style="text-align:left">文件跳转面板</td><td style="text-align:left">Ctrl + T</td><td>如字面意思</td></tr><tr><td style="text-align:left">Select Line Move above</td><td style="text-align:left">选中行上移</td><td style="text-align:left">Ctrl + up</td><td>如中文意思</td></tr><tr><td style="text-align:left">Select Line Move below</td><td style="text-align:left">选中行下移</td><td style="text-align:left">Ctrl + down</td><td>如中文意思</td></tr><tr><td style="text-align:left">Symbol-view</td><td style="text-align:left">进入变量、函数跳转面板。</td><td style="text-align:left">Ctrl + R</td><td>如中文意思</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;英文&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;中文&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;快捷键&lt;/th&gt;
&lt;/tr&gt;
&lt;/th
      
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="http://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="随笔" scheme="http://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>我的技术图谱</title>
    <link href="http://www.wuxinvip.com/2018/06/24/essay/essay-9/"/>
    <id>http://www.wuxinvip.com/2018/06/24/essay/essay-9/</id>
    <published>2018-06-24T00:00:00.000Z</published>
    <updated>2018-10-15T08:31:42.910Z</updated>
    
    <content type="html"><![CDATA[<h2 id="此技术图谱个人技术内容绘制"><a href="#此技术图谱个人技术内容绘制" class="headerlink" title="此技术图谱个人技术内容绘制"></a>此技术图谱个人技术内容绘制</h2><p>包含内容java后台常见技术栈</p><table><thead><tr><th style="text-align:left">图谱分类</th><th style="text-align:left">描述内容</th></tr></thead><tbody><tr><td style="text-align:left">DB</td><td style="text-align:left">数据库、mysql</td></tr><tr><td style="text-align:left">事务</td><td style="text-align:left">java事务、分布式事务、db事务</td></tr><tr><td style="text-align:left">分布式</td><td style="text-align:left">常见分布式架构</td></tr><tr><td style="text-align:left">协议</td><td style="text-align:left">常见协议</td></tr><tr><td style="text-align:left">各大开源组件解析</td><td style="text-align:left">dubbo、data-es</td></tr><tr><td style="text-align:left">密码加密</td><td style="text-align:left">密码加密发展史、破解史</td></tr><tr><td style="text-align:left">搜索引擎</td><td style="text-align:left">es搜索引擎</td></tr><tr><td style="text-align:left">权限</td><td style="text-align:left">shiro 、数据权限、oauth认证</td></tr><tr><td style="text-align:left">消息中间件</td><td style="text-align:left">kafka、rocketmq、rabbitmq、zeromq</td></tr><tr><td style="text-align:left">算法</td><td style="text-align:left">常见排序算法、分布式算法、缓存算法、一致性算法</td></tr><tr><td style="text-align:left">线程</td><td style="text-align:left">java线程</td></tr><tr><td style="text-align:left">缓存</td><td style="text-align:left">缓存组件</td></tr><tr><td style="text-align:left">设计模式</td><td style="text-align:left">java设计模式</td></tr><tr><td style="text-align:left">负载均衡</td><td style="text-align:left">分布式流量负载</td></tr><tr><td style="text-align:left">锁</td><td style="text-align:left">java锁、分布式锁</td></tr></tbody></table><a id="more"></a><p><img src="/img/essay/img/total.jpg" alt="图片"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;此技术图谱个人技术内容绘制&quot;&gt;&lt;a href=&quot;#此技术图谱个人技术内容绘制&quot; class=&quot;headerlink&quot; title=&quot;此技术图谱个人技术内容绘制&quot;&gt;&lt;/a&gt;此技术图谱个人技术内容绘制&lt;/h2&gt;&lt;p&gt;包含内容java后台常见技术栈&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;图谱分类&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;描述内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;DB&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;数据库、mysql&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;事务&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;java事务、分布式事务、db事务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;分布式&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;常见分布式架构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;协议&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;常见协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;各大开源组件解析&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;dubbo、data-es&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;密码加密&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;密码加密发展史、破解史&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;搜索引擎&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;es搜索引擎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;权限&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;shiro 、数据权限、oauth认证&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;消息中间件&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;kafka、rocketmq、rabbitmq、zeromq&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;算法&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;常见排序算法、分布式算法、缓存算法、一致性算法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;线程&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;java线程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;缓存&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;缓存组件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;设计模式&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;java设计模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;负载均衡&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;分布式流量负载&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;锁&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;java锁、分布式锁&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="http://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="我的图谱" scheme="http://www.wuxinvip.com/tags/%E6%88%91%E7%9A%84%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
</feed>
