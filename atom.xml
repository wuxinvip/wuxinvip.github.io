<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>上善若水の技术簿</title>
  
  <subtitle>时光荏苒、不浮青春.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.wuxinvip.com/"/>
  <updated>2019-12-24T06:12:20.987Z</updated>
  <id>https://www.wuxinvip.com/</id>
  
  <author>
    <name>上善若水</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>idea 激活</title>
    <link href="https://www.wuxinvip.com/2019/12/04/essay/idea-1/"/>
    <id>https://www.wuxinvip.com/2019/12/04/essay/idea-1/</id>
    <published>2019-12-04T00:00:00.000Z</published>
    <updated>2019-12-24T06:12:20.987Z</updated>
    
    <content type="html"><![CDATA[<ul><li>idea-2019.2</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">812LFWMRSH-eyJsaWNlbnNlSWQiOiI4MTJMRldNUlNIIiwibGljZW5zZWVOYW1lIjoi5q2j54mIIOaOiOadgyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNC0yMSIsInBhaWRVcFRvIjoiMjAyMC0wNC0yMCJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNC0yMSIsInBhaWRVcFRvIjoiMjAyMC0wNC0yMCJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDQtMjEiLCJwYWlkVXBUbyI6IjIwMjAtMDQtMjAifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDQtMjEiLCJwYWlkVXBUbyI6IjIwMjAtMDQtMjAifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDQtMjEiLCJwYWlkVXBUbyI6IjIwMjAtMDQtMjAifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDQtMjEiLCJwYWlkVXBUbyI6IjIwMjAtMDQtMjAifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwMTktMDQtMjEiLCJwYWlkVXBUbyI6IjIwMjAtMDQtMjAifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA0LTIxIiwicGFpZFVwVG8iOiIyMDIwLTA0LTIwIn0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA0LTIxIiwicGFpZFVwVG8iOiIyMDIwLTA0LTIwIn0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA0LTIxIiwicGFpZFVwVG8iOiIyMDIwLTA0LTIwIn0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA0LTIxIiwicGFpZFVwVG8iOiIyMDIwLTA0LTIwIn0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA0LTIxIiwicGFpZFVwVG8iOiIyMDIwLTA0LTIwIn0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA0LTIxIiwicGFpZFVwVG8iOiIyMDIwLTA0LTIwIn0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA0LTIxIiwicGFpZFVwVG8iOiIyMDIwLTA0LTIwIn0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDE5LTA0LTIxIiwicGFpZFVwVG8iOiIyMDIwLTA0LTIwIn0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjAxOS0wNC0yMSIsInBhaWRVcFRvIjoiMjAyMC0wNC0yMCJ9XSwiaGFzaCI6IjEyNzk2ODc3LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-ti4tUsQISyJF/zfWxSHCr+IcYrX2w24JO5bUZCPIGKSi+IrgQ0RT2uum9n96o+Eob9Z1iQ9nUZ6FJdpEW5g0Exe6sw8fLrWMoLFhtCIvVgQxEEt+M7Z2xD0esmjP1kPKXZyc/i+NCxA2EO2Sec9uifqklBGP1L3xoENAw2QsIWBfttIe6EPWhbS8TIMMr2vF/S3HrN8To5Hj5lwD/t1GHgFK1uWrhsuifAiKcVzqogybzGiR1h2+yNYTMbKxP7uPCcdYMsIyrBNVRGA3IuEJgyGQTQlFbnVQoVUTGPW2tQxprmC464wMjKi40JHh27WzjOHPwgzxDaigwn4Z0EbSpA==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</span><br></pre></td></tr></table></figure><ul><li>idea-2019.3</li></ul><p><a href="https://www.cnblogs.com/quyf/p/12022983.html" target="_blank" rel="noopener">CN-Blog-idea2019.3激活</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim C:\Users\your电脑用户名\.IntelliJIdea2019.3\config\idea64.exe.vmoptions</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add</span><br><span class="line"></span><br><span class="line">-javaagent:D:\JAVA\idea-2019-02\IntelliJ IDEA 2019.2.2\bin\jetbrains-agent.jar</span><br><span class="line"></span><br><span class="line">#下载地址 解压后放到idea目录</span><br><span class="line"></span><br><span class="line">https://files-cdn.cnblogs.com/files/quyf/jetbrains-agent.zip</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;idea-2019.2&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="idea" scheme="https://www.wuxinvip.com/categories/java/idea/"/>
    
    
      <category term="随笔" scheme="https://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>TOGAF 概述</title>
    <link href="https://www.wuxinvip.com/2019/12/04/togaf/togaf-01/"/>
    <id>https://www.wuxinvip.com/2019/12/04/togaf/togaf-01/</id>
    <published>2019-12-04T00:00:00.000Z</published>
    <updated>2019-12-17T05:46:14.186Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>TOGAF 即 The Open Group Architecture Framework （开放组体系结构框架）</li></ul><h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><ul><li>业务架构（流程、组织）</li><li>应用架构（应用、服务）</li><li>数据架构（数据、信息）</li><li>技术架构（硬件、网络）</li></ul><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><ul><li>TOGAF 9提供了包括架构开发方法（ADM）、架构能力框架、架构内容框架、企业连续体及参考模型等一系列组件。其中，ADM是核心内容，详细介绍了构建企业架构所需要执行各个步骤。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;TOGAF 即 The Open Group Architecture Framework （开放组体系结构框架）&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="togaf" scheme="https://www.wuxinvip.com/categories/togaf/"/>
    
      <category term="架构概述" scheme="https://www.wuxinvip.com/categories/togaf/%E6%9E%B6%E6%9E%84%E6%A6%82%E8%BF%B0/"/>
    
    
      <category term="togaf" scheme="https://www.wuxinvip.com/tags/togaf/"/>
    
  </entry>
  
  <entry>
    <title>OpenVpn 配置保存密码</title>
    <link href="https://www.wuxinvip.com/2019/11/12/essay/essay-22/"/>
    <id>https://www.wuxinvip.com/2019/11/12/essay/essay-22/</id>
    <published>2019-11-12T00:00:00.000Z</published>
    <updated>2019-11-19T06:02:27.708Z</updated>
    
    <content type="html"><![CDATA[<p>私网建立使用openvpn 不断登陆，但是不能保存密码，</p><p>记录一下追源过程：</p><ul><li>1、谷歌openvpn免密登录</li></ul><p>大部分配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">auth-user-pass passwd.txt</span><br><span class="line"></span><br><span class="line">admin</span><br><span class="line">password</span><br></pre></td></tr></table></figure><ul><li>2、但是我的环境不知道是什么问题还是弹出保存密码</li></ul><p>于是神奇的旅程开始：</p><p>1、下一个最新版本、经查询2.3.1版本之后功能支持保存密码功能、就不在需要配置ovpn配置文件了</p><p>中间出了个小问题、就是第一次安装 选择了disable password save feature、之后再怎么重装都不能保存密码了</p><p>2、源码 查到issue ：<a href="https://github.com/OpenVPN/openvpn-build/pull/77" target="_blank" rel="noopener">https://github.com/OpenVPN/openvpn-build/pull/77</a></p><p>功能保存到注册表一份【HKEY_LOCAL_MACHINE\SOFTWARE\OpenVPN】</p><p>3、win 搜索注册表 发现正好是这个注册表 是1，于是将其改为0，重启openvpn，连接vpn，弹出对话框，请输入密码，下面一行保存密码。</p><p>4、perfect ！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;私网建立使用openvpn 不断登陆，但是不能保存密码，&lt;/p&gt;
&lt;p&gt;记录一下追源过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、谷歌openvpn免密登录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大部分配置如下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tab
      
    
    </summary>
    
      <category term="essay" scheme="https://www.wuxinvip.com/categories/essay/"/>
    
    
      <category term="随笔" scheme="https://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>atom 插件</title>
    <link href="https://www.wuxinvip.com/2019/11/01/essay/atom-1/"/>
    <id>https://www.wuxinvip.com/2019/11/01/essay/atom-1/</id>
    <published>2019-11-01T00:00:00.000Z</published>
    <updated>2019-11-13T09:36:07.775Z</updated>
    
    <content type="html"><![CDATA[<h4 id="git-plus"><a href="#git-plus" class="headerlink" title="git-plus"></a>git-plus</h4><ul><li>git-plus</li><li><a href="https://atom.io/packages/git-plus" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="markdown-img-paste"><a href="#markdown-img-paste" class="headerlink" title="markdown-img-paste"></a>markdown-img-paste</h4><ul><li>markdown-img-paste</li><li><a href="https://atom.io/packages/markdown-img-paste" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="markdown-pdf"><a href="#markdown-pdf" class="headerlink" title="markdown-pdf"></a>markdown-pdf</h4><ul><li>markdown-pdf</li><li><a href="https://atom.io/packages/markdown-pdf" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="markdown-scroll-sync"><a href="#markdown-scroll-sync" class="headerlink" title="markdown-scroll-sync"></a>markdown-scroll-sync</h4><ul><li>markdown-scroll-sync</li><li><a href="https://atom.io/packages/markdown-scroll-sync" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="markdown-writer"><a href="#markdown-writer" class="headerlink" title="markdown-writer"></a>markdown-writer</h4><ul><li>markdown-writer</li><li><a href="https://atom.io/packages/markdown-writer" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="simplified-chinese-menu"><a href="#simplified-chinese-menu" class="headerlink" title="simplified-chinese-menu"></a>simplified-chinese-menu</h4><ul><li>simplified-chinese-menu</li><li><a href="https://atom.io/packages/simplified-chinese-menu" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="terminal-tab"><a href="#terminal-tab" class="headerlink" title="terminal-tab"></a>terminal-tab</h4><ul><li>terminal-tab</li><li><a href="https://atom.io/packages/terminal-tab" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h4><ul><li>demo</li><li><a href="">插件首页</a></li></ul><h4 id="模板-1"><a href="#模板-1" class="headerlink" title="模板"></a>模板</h4><ul><li>demo</li><li><a href="">插件首页</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;git-plus&quot;&gt;&lt;a href=&quot;#git-plus&quot; class=&quot;headerlink&quot; title=&quot;git-plus&quot;&gt;&lt;/a&gt;git-plus&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;git-plus&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="essay" scheme="https://www.wuxinvip.com/categories/java/essay/"/>
    
    
      <category term="随笔" scheme="https://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>idea 好用插件 plugins</title>
    <link href="https://www.wuxinvip.com/2019/10/12/essay/essay-21/"/>
    <id>https://www.wuxinvip.com/2019/10/12/essay/essay-21/</id>
    <published>2019-10-12T00:00:00.000Z</published>
    <updated>2019-11-15T06:10:16.641Z</updated>
    
    <content type="html"><![CDATA[<h4 id="阿里规则校验"><a href="#阿里规则校验" class="headerlink" title="阿里规则校验"></a>阿里规则校验</h4><ul><li>Alibaba Java Coding Guidelines</li><li><a href="https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="当前窗口地图"><a href="#当前窗口地图" class="headerlink" title="当前窗口地图"></a>当前窗口地图</h4><ul><li>CodeGlance</li><li><a href="https://plugins.jetbrains.com/plugin/7275-codeglance/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="光标跳转"><a href="#光标跳转" class="headerlink" title="光标跳转"></a>光标跳转</h4><ul><li>AceJump</li><li><a href="https://plugins.jetbrains.com/plugin/7086-acejump/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="bug查找"><a href="#bug查找" class="headerlink" title="bug查找"></a>bug查找</h4><ul><li>FindBugs-IDEA</li><li><a href="https://plugins.jetbrains.com/plugin/3847-findbugs-idea/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="setter生成"><a href="#setter生成" class="headerlink" title="setter生成"></a>setter生成</h4><ul><li>GenerateAllSetter</li><li><a href="https://plugins.jetbrains.com/plugin/9360-generateallsetter/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="配置console颜色"><a href="#配置console颜色" class="headerlink" title="配置console颜色"></a>配置console颜色</h4><ul><li>Grep Console</li><li><a href="https://plugins.jetbrains.com/plugin/7125-grep-console/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="根据JSON直接生成bean"><a href="#根据JSON直接生成bean" class="headerlink" title="根据JSON直接生成bean"></a>根据JSON直接生成bean</h4><ul><li>GsonFormat</li><li><a href="https://plugins.jetbrains.com/plugin/7654-gsonformat/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="idea轻量级主题"><a href="#idea轻量级主题" class="headerlink" title="idea轻量级主题"></a>idea轻量级主题</h4><ul><li>IntelliJ Light Theme</li><li><a href="https://plugins.jetbrains.com/plugin/12697-intellij-light-theme/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="日志代生成"><a href="#日志代生成" class="headerlink" title="日志代生成"></a>日志代生成</h4><ul><li>Lombok</li><li><a href="https://plugins.jetbrains.com/plugin/6317-lombok/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="Junit生成"><a href="#Junit生成" class="headerlink" title="Junit生成"></a>Junit生成</h4><ul><li>JUnitGenerator V2.​0</li><li><a href="https://plugins.jetbrains.com/plugin/3064-junitgenerator-v2-0/" target="_blank" rel="noopener">插件首页</a></li><li>setting<ul><li>–&gt;修改Output Path[输出路径]为${SOURCEPATH}/../../test/java/${PACKAGE}/${FILENAME}</li><li>–&gt;将package test.$entry.packageName;修改成package $entry.packageName;</li></ul></li></ul><h4 id="Markdown编辑"><a href="#Markdown编辑" class="headerlink" title="Markdown编辑"></a>Markdown编辑</h4><ul><li>Markdown Navigator</li><li><a href="https://plugins.jetbrains.com/plugin/7896-markdown-navigator/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="Maven右键RUN"><a href="#Maven右键RUN" class="headerlink" title="Maven右键RUN"></a>Maven右键RUN</h4><ul><li>Maven Helper</li><li><a href="https://plugins.jetbrains.com/plugin/7179-maven-helper/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="Mybatis生成测试"><a href="#Mybatis生成测试" class="headerlink" title="Mybatis生成测试"></a>Mybatis生成测试</h4><ul><li>MyBatisCodeHelperPro</li><li><a href="https://plugins.jetbrains.com/plugin/9837-mybatiscodehelperpro/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="谷歌翻译"><a href="#谷歌翻译" class="headerlink" title="谷歌翻译"></a>谷歌翻译</h4><ul><li>Translation</li><li><a href="https://plugins.jetbrains.com/plugin/8579-translation/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="GitToolBox"><a href="#GitToolBox" class="headerlink" title="GitToolBox"></a>GitToolBox</h4><ul><li>GitToolBox</li><li><a href="https://plugins.jetbrains.com/plugin/7499-gittoolbox/" target="_blank" rel="noopener">插件首页</a></li></ul><h4 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h4><ul><li>demo</li><li><a href="">插件首页</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;阿里规则校验&quot;&gt;&lt;a href=&quot;#阿里规则校验&quot; class=&quot;headerlink&quot; title=&quot;阿里规则校验&quot;&gt;&lt;/a&gt;阿里规则校验&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Alibaba Java Coding Guidelines&lt;/li&gt;
&lt;li&gt;&lt;a href=
      
    
    </summary>
    
      <category term="essay" scheme="https://www.wuxinvip.com/categories/essay/"/>
    
    
      <category term="随笔" scheme="https://www.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>spring-data-redis小坑</title>
    <link href="https://www.wuxinvip.com/2019/09/24/spring-cloud/spring-data-redis/"/>
    <id>https://www.wuxinvip.com/2019/09/24/spring-cloud/spring-data-redis/</id>
    <published>2019-09-24T00:00:00.000Z</published>
    <updated>2019-10-23T10:43:51.903Z</updated>
    
    <content type="html"><![CDATA[<h4 id="StringRedisTemplate-和-RedisTemplate区别"><a href="#StringRedisTemplate-和-RedisTemplate区别" class="headerlink" title="StringRedisTemplate 和 RedisTemplate区别"></a>StringRedisTemplate 和 RedisTemplate区别</h4><h5 id="StringRedisTemplate-对key进行了getBytes-也推荐使用这种"><a href="#StringRedisTemplate-对key进行了getBytes-也推荐使用这种" class="headerlink" title="StringRedisTemplate 对key进行了getBytes 也推荐使用这种"></a>StringRedisTemplate 对key进行了getBytes 也推荐使用这种</h5><ul><li>安全、迅速效率高</li></ul><h5 id="RedisTemplate-key是String形式"><a href="#RedisTemplate-key是String形式" class="headerlink" title="RedisTemplate key是String形式"></a>RedisTemplate key是String形式</h5><h6 id="挖坑点是-stringRedisTemplate和RedisTempalte存放不共用。"><a href="#挖坑点是-stringRedisTemplate和RedisTempalte存放不共用。" class="headerlink" title="挖坑点是 stringRedisTemplate和RedisTempalte存放不共用。"></a>挖坑点是 stringRedisTemplate和RedisTempalte存放不共用。</h6><ul><li><p>简单来说就是 使用StringRedisTemplate放入的数据 不能用RedisTemplate取出  </p></li><li><p>因为 StringRedisTemplate在放入redis之前 将key进行getBytes了</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;StringRedisTemplate-和-RedisTemplate区别&quot;&gt;&lt;a href=&quot;#StringRedisTemplate-和-RedisTemplate区别&quot; class=&quot;headerlink&quot; title=&quot;StringRedisTemplat
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="spring-cloud" scheme="https://www.wuxinvip.com/categories/java/spring-cloud/"/>
    
    
      <category term="spring-data" scheme="https://www.wuxinvip.com/tags/spring-data/"/>
    
  </entry>
  
  <entry>
    <title>AES加密 </title>
    <link href="https://www.wuxinvip.com/2019/09/02/encryption/aes/"/>
    <id>https://www.wuxinvip.com/2019/09/02/encryption/aes/</id>
    <published>2019-09-02T00:00:00.000Z</published>
    <updated>2019-11-01T09:51:59.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AES加密"><a href="#AES加密" class="headerlink" title="AES加密"></a>AES加密</h2><h3 id="关于AES加解密java-security-InvalidKeyException的错误解决方法"><a href="#关于AES加解密java-security-InvalidKeyException的错误解决方法" class="headerlink" title="关于AES加解密java.security.InvalidKeyException的错误解决方法"></a>关于AES加解密java.security.InvalidKeyException的错误解决方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">java.security.InvalidKeyException: Illegal key size</span><br></pre></td></tr></table></figure><h4 id="Java实现AES加密-异常java-security-InvalidKeyException-Illegal-key-size-的解决"><a href="#Java实现AES加密-异常java-security-InvalidKeyException-Illegal-key-size-的解决" class="headerlink" title="Java实现AES加密,异常java.security.InvalidKeyException: Illegal key size 的解决"></a>Java实现AES加密,异常java.security.InvalidKeyException: Illegal key size 的解决</h4><h5 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h5><h6 id="限制-jdk1-8-0-151版本之后可采用次解决方案-不需要改JCE包"><a href="#限制-jdk1-8-0-151版本之后可采用次解决方案-不需要改JCE包" class="headerlink" title="限制 jdk1.8.0 151版本之后可采用次解决方案 不需要改JCE包"></a>限制 jdk1.8.0 151版本之后可采用次解决方案 不需要改JCE包</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 初始化中执行解除密钥长度限制</span><br><span class="line"> */</span><br><span class="line">static &#123;</span><br><span class="line">    Security.setProperty(&quot;crypto.policy&quot;, &quot;unlimited&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;AES加密&quot;&gt;&lt;a href=&quot;#AES加密&quot; class=&quot;headerlink&quot; title=&quot;AES加密&quot;&gt;&lt;/a&gt;AES加密&lt;/h2&gt;&lt;h3 id=&quot;关于AES加解密java-security-InvalidKeyException的错误解决方法&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="password" scheme="https://www.wuxinvip.com/categories/java/password/"/>
    
    
      <category term="密码加密" scheme="https://www.wuxinvip.com/tags/%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>mysql X锁和S锁</title>
    <link href="https://www.wuxinvip.com/2019/08/24/mysql/mysql-lock/"/>
    <id>https://www.wuxinvip.com/2019/08/24/mysql/mysql-lock/</id>
    <published>2019-08-24T00:00:00.000Z</published>
    <updated>2019-09-02T05:30:27.627Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql-X锁和S锁基本的封锁类型有两种"><a href="#mysql-X锁和S锁基本的封锁类型有两种" class="headerlink" title="mysql X锁和S锁基本的封锁类型有两种:"></a>mysql X锁和S锁基本的封锁类型有两种:</h3><p>排它锁(X锁)和共享锁(S锁)：</p><p>所谓X锁,是事务T对数据A加上X锁时,只允许事务T读取和修改数据A</p><p>所谓S锁,是事务T对数据A加上S锁时,其他事务只能再对数据A加S锁,而不能加X锁,直到T释放A上的S锁</p><p>若事务T对数据对象A加了S锁,则T就可以对A进行读取,但不能进行更新(S锁因此又称为读锁),在T释放A上的S锁以前,其他事务可以再对A加S锁,但不能加X锁,从而可以读取A,但不能更新A.</p><p><a href="http://www.cnblogs.com/digdeep/archive/2015/11/16/4968453.html" target="_blank" rel="noopener">http://www.cnblogs.com/digdeep/archive/2015/11/16/4968453.html</a></p><p>学习了mysql加锁机制，RC，RR，与字段的索引还有关系，如何防止死锁，不同情况的加锁。</p><p>学习where条件的过滤</p><p>给定一条SQL，如何提取其中的where条件？where条件中的每个子条件，在SQL执行的过程中有分别起着什么样的作用？</p><p><a href="http://hedengcheng.com/?p=577" target="_blank" rel="noopener">http://hedengcheng.com/?p=577</a></p><p>Index Key 索引查找，第一遍找出最小值，随后需要逐个比较是否满足最大值的条件，得到最大值。</p><p>Index First Key — Index Last Key</p><p>Index Filter 索引过滤，对于索引查找出的值，均需要与索引过滤条件对比</p><p>Table Filter 对于没有命中索引的字段，需要回表查出完整记录，对其进行过滤</p><h3 id="原文地址"><a href="#原文地址" class="headerlink" title="原文地址"></a><a href="https://www.jianshu.com/p/342f526dbbc2" target="_blank" rel="noopener">原文地址</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;mysql-X锁和S锁基本的封锁类型有两种&quot;&gt;&lt;a href=&quot;#mysql-X锁和S锁基本的封锁类型有两种&quot; class=&quot;headerlink&quot; title=&quot;mysql X锁和S锁基本的封锁类型有两种:&quot;&gt;&lt;/a&gt;mysql X锁和S锁基本的封锁类型有两种:
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="mysql" scheme="https://www.wuxinvip.com/categories/java/mysql/"/>
    
    
      <category term="mysql-lock" scheme="https://www.wuxinvip.com/tags/mysql-lock/"/>
    
  </entry>
  
  <entry>
    <title>DB 图谱</title>
    <link href="https://www.wuxinvip.com/2019/07/12/xmind/xmind-db/"/>
    <id>https://www.wuxinvip.com/2019/07/12/xmind/xmind-db/</id>
    <published>2019-07-12T00:00:00.000Z</published>
    <updated>2019-09-03T05:45:10.710Z</updated>
    
    <content type="html"><![CDATA[<h3 id="v1-5-1"><a href="#v1-5-1" class="headerlink" title="v1.5.1"></a>v1.5.1</h3><h4 id="更新mysql-添加"><a href="#更新mysql-添加" class="headerlink" title="更新mysql 添加"></a>更新mysql 添加</h4><ul><li>索引类型【主键、普通、唯一、全文、组合】</li><li>索引原理【hash、fulltext、B+Tree】</li><li>索引结构【聚簇索引、非聚簇索引】</li></ul><p>{———-}</p><p><img src="/img/xmind/img/db/mysql.png" alt="图片">mysql 图谱<br><img src="/img/xmind/img/db/mongodb.png" alt="图片">mongodb 图谱</p><p>2019 - 8 更新mysql 添加 </p><ul><li>索引类型【主键、普通、唯一、全文、组合】</li><li>索引原理【hash、fulltext、B+Tree】</li><li>索引结构【聚簇索引、非聚簇索引】</li></ul>]]></content>
    
    <summary type="html">
    
      xmind DB图谱
    
    </summary>
    
      <category term="xmind" scheme="https://www.wuxinvip.com/categories/xmind/"/>
    
      <category term="我的技术图谱" scheme="https://www.wuxinvip.com/categories/xmind/%E6%88%91%E7%9A%84%E6%8A%80%E6%9C%AF%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="我的图谱" scheme="https://www.wuxinvip.com/tags/%E6%88%91%E7%9A%84%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>线程 图谱</title>
    <link href="https://www.wuxinvip.com/2019/07/12/xmind/xmind-thread/"/>
    <id>https://www.wuxinvip.com/2019/07/12/xmind/xmind-thread/</id>
    <published>2019-07-12T00:00:00.000Z</published>
    <updated>2019-08-21T13:52:09.437Z</updated>
    
    <content type="html"><![CDATA[<h3 id="v1-5-1"><a href="#v1-5-1" class="headerlink" title="v1.5.1"></a>v1.5.1</h3><h4 id="更新线程"><a href="#更新线程" class="headerlink" title="更新线程"></a>更新线程</h4><ul><li>ThreadPoolExcutor 参数说明</li><li>更新队列配置说明</li><li>更新spring @Async注解</li></ul><p><img src="/img/xmind/img/线程.png" alt="图片"></p><p>java锁 详细见<a href="/blog/xmind/xmind-锁/">xmind-锁</a></p>]]></content>
    
    <summary type="html">
    
      xmind 线程图谱
    
    </summary>
    
      <category term="xmind" scheme="https://www.wuxinvip.com/categories/xmind/"/>
    
      <category term="我的技术图谱" scheme="https://www.wuxinvip.com/categories/xmind/%E6%88%91%E7%9A%84%E6%8A%80%E6%9C%AF%E5%9B%BE%E8%B0%B1/"/>
    
    
      <category term="我的图谱" scheme="https://www.wuxinvip.com/tags/%E6%88%91%E7%9A%84%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>AI 机器学习发展史</title>
    <link href="https://www.wuxinvip.com/2019/05/26/ai/ai-002/"/>
    <id>https://www.wuxinvip.com/2019/05/26/ai/ai-002/</id>
    <published>2019-05-26T00:00:00.000Z</published>
    <updated>2019-05-28T11:02:42.474Z</updated>
    
    <content type="html"><![CDATA[<p>1、模型 M-P神经网络模型</p><p>2、1949 Hebb规则 刺激–》加强 训练强化</p><p>3、1957 Perception模型</p><p>4、1969 感知机模型 不能解决XOR问题</p><p>5、1982 离散网络模型、连续网络模型</p><p>6、BP算法 多层网络误差反传</p><p>7、90中期 orther竞争力学习模型 低潮</p><p>8、2006 热点 梯度消失、梯度爆炸、计算机算力提升</p><h1 id="神经元传输"><a href="#神经元传输" class="headerlink" title="神经元传输"></a>神经元传输</h1><p>特性：多输入、单输出</p><p><img src="/img/ai/神经元模型.jpg" alt="图片"></p><p>神经元先对入参数据进行求和操作、之后经过激活函数、最终得到data值</p><p>感知机 ：<br>    线程分割<br>    不能XOR 【异或】<br>    加入隐藏层 支持XOR</p><p><img src="/img/ai/神经元传递参数.jpg" alt="图片"></p><ul><li>损失函数定义</li></ul><p><img src="/img/ai/损失函数.jpg" alt="图片"></p><h1 id="Tensorflow"><a href="#Tensorflow" class="headerlink" title="Tensorflow"></a>Tensorflow</h1><ul><li>定义域 obj定义</li><li>操作域 赋值</li></ul><p>namescope ： 在同一个变量名不同作用效果、好处、代码配置化</p><p>placeholder：运行时赋值<br>session.run{feed.dict=”指定初始值”}</p><ul><li>训练模式 ：分批小批数据训练</li></ul><p>*深度学习</p><p>1、CNN 卷积神经网络【图像识别】</p><p>流程：【卷积过程依据特征粒度（特征粒度自己创造的词汇）】<br>输入-》卷积-》池化-》卷积-》池化-》全连接</p><p>2、循环神经网络【语言识别、股票预测】</p><p>第一个如参值参与后边所有数据入参</p><p><img src="/img/ai/循环神经网络.jpg" alt="图片"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、模型 M-P神经网络模型&lt;/p&gt;
&lt;p&gt;2、1949 Hebb规则 刺激–》加强 训练强化&lt;/p&gt;
&lt;p&gt;3、1957 Perception模型&lt;/p&gt;
&lt;p&gt;4、1969 感知机模型 不能解决XOR问题&lt;/p&gt;
&lt;p&gt;5、1982 离散网络模型、连续网络模型&lt;/p&gt;

      
    
    </summary>
    
      <category term="AI" scheme="https://www.wuxinvip.com/categories/AI/"/>
    
    
      <category term="AI" scheme="https://www.wuxinvip.com/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>jdk内存模型</title>
    <link href="https://www.wuxinvip.com/2019/05/26/jdk/jdk-model/"/>
    <id>https://www.wuxinvip.com/2019/05/26/jdk/jdk-model/</id>
    <published>2019-05-26T00:00:00.000Z</published>
    <updated>2019-05-28T11:09:12.792Z</updated>
    
    <content type="html"><![CDATA[<p>#8个原子操作<br>针对jvm主内存与工作内存的数据操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lock----锁定</span><br><span class="line">unlock----释放锁</span><br><span class="line">read----读</span><br><span class="line">write----写</span><br><span class="line">load----加载</span><br><span class="line">assign----赋值</span><br><span class="line">use----使用</span><br><span class="line">store----写入主内存</span><br></pre></td></tr></table></figure></p><p>特例：<br>long、double、64为内存、在32为虚拟机中分两次操作、<br>load、store、read、write都不是源自操作</p><p>#8个规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、不允许read、load、store、write单独出现</span><br><span class="line">2、不允许thread丢弃assign</span><br><span class="line">3、不允许任何一线程、没有assign的数据 从工作内存store到主内存</span><br><span class="line">4、一个新变量只能在主内存“诞生”、对一个变量“use/store”之前、执行assign、load操作</span><br><span class="line">5、一个变量在同一时刻只允许一个线程对其进行lock、但lock可以被执行多次、lock标记为累加、多次lock需要多次unlock</span><br><span class="line"></span><br><span class="line">6、对一个变量执行lock、会清空工作内存中变量值、使用之前需要重新load、assign</span><br><span class="line">7、如果未lock、不能unlock</span><br><span class="line">8、执行unlock之前、限制性工作内存同步主内存</span><br></pre></td></tr></table></figure><p>都挺好理解、计算机这个东西、没啥难度、<br>lock是做标记为int ++  –做锁标记位</p><p>#内存可见性</p><p>1、volatile<br>2、sychronized<br>3、final</p><p>#有序性<br>1、线程内表现为串行</p><p>#无序<br>1、指令重排序【使用volatile可以阻止指令重排序】<br>2、sychronized 同一个变量、在同一时刻、允许同一线程串行进入</p><p>3、编译器静态优化会打乱代码执行顺序<br>4、jvm动态优化会打乱代码执行顺序<br>5、硬件可以打乱执行顺序以优化其性能</p><p>#线程安全<br>1、不可变—final<br>2、绝对安全<br>3、相对安全<br>4、线程兼容<br>5、独立—对程序有害</p><p>#线程发展史</p><p>1、重量级、执行标记位 加sychronized的地方、我在内存中加一个标记为、标记该方法、该对象、我正在使用、你不能使用<br>2、偏向锁、object标记、Mark Word中偏向锁的标识<br>3、轻量级、reentranlock、线程中自建一个object标记、增加了trylock（times）、可队列执行锁方法、规则名aqs、<br>4、算法代替锁、设计思想是、假设没有竞争、竞争时候通过算法判断、cas、拿旧值和内存原值比较、一致则修改为新值</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#8个原子操作&lt;br&gt;针对jvm主内存与工作内存的数据操作&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="jdk" scheme="https://www.wuxinvip.com/categories/java/jdk/"/>
    
    
      <category term="jdk" scheme="https://www.wuxinvip.com/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>数据库链接已关闭</title>
    <link href="https://www.wuxinvip.com/2019/05/24/exception/exception-5/"/>
    <id>https://www.wuxinvip.com/2019/05/24/exception/exception-5/</id>
    <published>2019-05-24T00:00:00.000Z</published>
    <updated>2019-05-22T03:13:56.531Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Database access problem. Killing off this connection and all remaining connections </span><br><span class="line">    in the connection pool. SQL State = 08S01</span><br><span class="line"></span><br><span class="line"> org.springframework.transaction.CannotCreateTransactionException: </span><br><span class="line">    Could not open JPA EntityManager for transaction; nested exception is javax.persistence.</span><br><span class="line">        PersistenceException: java.sql.SQLException: Connection is closed!</span><br></pre></td></tr></table></figure><p>原因： DBA数据库对连接时间比程序中的连接时间敏感得多、导致数据库连接在数据库端被关闭</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="exception" scheme="https://www.wuxinvip.com/categories/java/exception/"/>
    
    
      <category term="exception" scheme="https://www.wuxinvip.com/tags/exception/"/>
    
  </entry>
  
  <entry>
    <title>linux 排查命令</title>
    <link href="https://www.wuxinvip.com/2019/05/15/shell/shell-7/"/>
    <id>https://www.wuxinvip.com/2019/05/15/shell/shell-7/</id>
    <published>2019-05-14T16:00:00.000Z</published>
    <updated>2019-05-28T09:33:57.767Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="shell">pid=11683<span class="meta">#</span><span class="bash">命令查看该进程的线程情况</span>ps -mp pid -o THREAD,tid,timetid 转为 16进制printf "%x\n" 67661a6e<span class="meta">#</span><span class="bash">使用jstack 查看线程使用情况</span>jstack 11683 | grep 2df4 -A 30"Thread-38" #51 daemon prio=5 os_prio=0 tid=0x00007f96ec675000 nid=0x2df4 runnable [0x00007f970065a000]<span class="meta">#</span><span class="bash">打印线程信息</span>jstack -l 11683 &gt; /logs/dump.txt<span class="meta">#</span><span class="bash">打印对象信息【死锁信息】</span>jstack -m 11683 &gt; /logs/dump.txt<span class="meta">#</span><span class="bash">IO使用率</span>iostat 5 <span class="meta">#</span><span class="bash">系统使用率</span>vmstat 5<span class="meta">#</span><span class="bash">网络使用率</span>nicstat 5<span class="meta">#</span><span class="bash">cpu 使用率</span>typeperf -si | "System\Processor\Queue\Length"jstat pid jstat -option pidoption:</code></pre><p>jstat pid<br>jstat -option pid</p><p>option:</p><pre><code>gc gcnewgcoldgc causegc capacitygc old capacitygc perm capacitygc utilgc new capacityprint compilationcompilerclass</code></pre><p>jmap option pid</p><pre><code>-permstat-histo-J-d64 -heap</code></pre><p>其他命令</p><pre><code>jcmdjconsolejhatjmapjinfojstatjstackjvisualvm</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;pid=11683

&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;命令查看该进程的线程情况&lt;/span&gt;
ps -mp pid -o THREAD,tid,time

tid 转为 
      
    
    </summary>
    
      <category term="shell" scheme="https://www.wuxinvip.com/categories/shell/"/>
    
    
      <category term="shell" scheme="https://www.wuxinvip.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>springboot logger  配置</title>
    <link href="https://www.wuxinvip.com/2019/05/12/spring-cloud/logger-config/"/>
    <id>https://www.wuxinvip.com/2019/05/12/spring-cloud/logger-config/</id>
    <published>2019-05-12T00:00:00.000Z</published>
    <updated>2019-05-06T06:18:10.105Z</updated>
    
    <content type="html"><![CDATA[<h3 id="logger-配置"><a href="#logger-配置" class="headerlink" title="logger 配置"></a>logger 配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line"><span class="attr">    config:</span> <span class="attr">classpath:logback-spring.xml</span></span><br><span class="line"><span class="attr">    level:</span></span><br><span class="line"><span class="attr">        com:</span></span><br><span class="line"><span class="attr">            netflix:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">            wuxinvip:</span> <span class="string">info</span></span><br><span class="line">            <span class="string">wuxinvip.mapper:</span> <span class="string">DEBUG</span></span><br><span class="line"><span class="attr">        org:</span></span><br><span class="line"><span class="attr">            springframework:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">        root:</span> <span class="string">info</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- For assistance related to logback-translator or configuration  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- files in general, please contact the logback user mailing list --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- at http://www.qos.ch/mailman/listinfo/logback-user             --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                                                                --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- For professional support please see                            --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    http://www.qos.ch/shop/products/professionalSupport</span></span><br><span class="line"><span class="comment">      http://logback.qos.ch/translator/</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"console"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d %p [%c] - &amp;lt;%m&amp;gt;%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"console"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;logger-配置&quot;&gt;&lt;a href=&quot;#logger-配置&quot; class=&quot;headerlink&quot; title=&quot;logger 配置&quot;&gt;&lt;/a&gt;logger 配置&lt;/h3&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="spring-cloud" scheme="https://www.wuxinvip.com/categories/java/spring-cloud/"/>
    
    
      <category term="spring-cloud" scheme="https://www.wuxinvip.com/tags/spring-cloud/"/>
    
  </entry>
  
  <entry>
    <title>node--npm    命令</title>
    <link href="https://www.wuxinvip.com/2019/04/15/shell/shell-6/"/>
    <id>https://www.wuxinvip.com/2019/04/15/shell/shell-6/</id>
    <published>2019-04-14T16:00:00.000Z</published>
    <updated>2019-05-28T05:49:46.698Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="shell">tar xvf node-v10.15.3-linux-x64.tar<span class="meta">#</span><span class="bash">初始化</span>npm install<span class="meta">#</span><span class="bash">安装脚本编译</span>npm install -g typescriptnpm run build<span class="meta">#</span><span class="bash">jscheck</span>npm run check<span class="meta">#</span><span class="bash">部署dev</span>npm run dev<span class="meta">#</span><span class="bash">后台启动prod</span>npm start npm run start:redis<span class="meta">#</span><span class="bash"><span class="comment">##########</span></span>npm auditnpm update handlebars --depth 3npm auditnpm audit fix<span class="meta">#</span><span class="bash"><span class="comment">############</span></span>*   通过pm2启动管理pm2 statuspm2 start 1pm2 stop rap-server-delospm2 show rap-server-delospm2 restart 1pm2 show 1pm2 logs redis-serverpm2 logs 0pm2 show 1pm2 restart 1pm2 restart 0</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;tar xvf node-v10.15.3-linux-x64.tar



&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;初始化&lt;/span&gt;
npm install

&lt;span 
      
    
    </summary>
    
      <category term="shell" scheme="https://www.wuxinvip.com/categories/shell/"/>
    
    
      <category term="shell" scheme="https://www.wuxinvip.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>redis 锁</title>
    <link href="https://www.wuxinvip.com/2019/04/13/cache/redis-2/"/>
    <id>https://www.wuxinvip.com/2019/04/13/cache/redis-2/</id>
    <published>2019-04-13T00:00:00.000Z</published>
    <updated>2019-09-03T05:45:11.908Z</updated>
    
    <content type="html"><![CDATA[<h3 id="redis-锁分类"><a href="#redis-锁分类" class="headerlink" title="redis 锁分类"></a>redis 锁分类</h3><ul><li>INCR、SETNX、SET</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$redis-&gt;incr($key);</span><br><span class="line">$redis-&gt;expire($key, $ttl); //设置生成时间为1秒</span><br><span class="line"></span><br><span class="line">1、 客户端A请求服务器获取key的值为1表示获取了锁</span><br><span class="line">2、 客户端B也去请求服务器获取key的值为2表示获取锁失败</span><br><span class="line">3、 客户端A执行代码完成，删除锁</span><br><span class="line">4、 客户端B在等待一段时间后在去请求的时候获取key的值为1表示获取锁成功</span><br><span class="line">5、 客户端B执行代码完成，删除锁</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$redis-&gt;setNX($key, $value);</span><br><span class="line">$redis-&gt;expire($key, $ttl);</span><br><span class="line"></span><br><span class="line">1、 客户端A请求服务器设置key的值，如果设置成功就表示加锁成功</span><br><span class="line">2、 客户端B也去请求服务器设置key的值，如果返回失败，那么就代表加锁失败</span><br><span class="line">3、 客户端A执行代码完成，删除锁</span><br><span class="line">4、 客户端B在等待一段时间后在去请求设置key的值，设置成功</span><br><span class="line">5、 客户端B执行代码完成，删除锁</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$redis-&gt;set($key, $value, array(&apos;nx&apos;, &apos;ex&apos; =&gt; $ttl));  //ex表示秒</span><br><span class="line"></span><br><span class="line">1、 客户端A请求服务器设置key的值，如果设置成功就表示加锁成功</span><br><span class="line">2、 客户端B也去请求服务器设置key的值，如果返回失败，那么就代表加锁失败</span><br><span class="line">3、 客户端A执行代码完成，删除锁</span><br><span class="line">4、 客户端B在等待一段时间后在去请求设置key的值，设置成功</span><br><span class="line">5、 客户端B执行代码完成，删除锁</span><br></pre></td></tr></table></figure><ul><li><p>锁临界问题</p><ul><li>解决方案 【循环锁】</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">do &#123;  </span><br><span class="line">    $timeout = 10;</span><br><span class="line">    $roomid = 10001;</span><br><span class="line">    $key = &apos;room_lock&apos;;</span><br><span class="line">    $value = &apos;room_&apos;.$roomid;  //分配一个随机的值针对问题3</span><br><span class="line">    $isLock = Redis::set($key, $value, &apos;ex&apos;, $timeout, &apos;nx&apos;);//ex 秒</span><br><span class="line">    if ($isLock) &#123;</span><br><span class="line">        if (Redis::get($key) == $value) &#123;  //防止提前过期，误删其它请求创建的锁</span><br><span class="line">            //执行内部代码</span><br><span class="line">            Redis::del($key);</span><br><span class="line">            continue;//执行成功删除key并跳出循环</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        usleep(5000); //睡眠，降低抢锁频率，缓解redis压力，针对问题2</span><br><span class="line">    &#125;</span><br><span class="line">&#125; while(!$isLock);</span><br></pre></td></tr></table></figure><p>{———-}</p><h3 id="封装spring-data-redis操作redis分布式锁"><a href="#封装spring-data-redis操作redis分布式锁" class="headerlink" title="封装spring-data-redis操作redis分布式锁"></a>封装spring-data-redis操作redis分布式锁</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">    * 操作redis获取全局锁</span><br><span class="line">    *</span><br><span class="line">    * @param redisLock           锁的名称</span><br><span class="line">    * @param timeout        获取的超时时间</span><br><span class="line">    * @param tryInterval    多少ms尝试一次</span><br><span class="line">    * @return true 获取成功，false获取失败</span><br><span class="line">    */</span><br><span class="line">   public boolean getLock(RedisLock redisLock, long timeout, long tryInterval)&#123;</span><br><span class="line">       try&#123;</span><br><span class="line">           if(StringUtils.isEmpty(redisLock.getKey()) || StringUtils.isEmpty(redisLock.getValue()))&#123;</span><br><span class="line">               return false;</span><br><span class="line">           &#125;</span><br><span class="line">           while (true)&#123;</span><br><span class="line">               List&lt;String&gt; keys = new ArrayList&lt;&gt;(1);</span><br><span class="line">               keys.add(redisLock.getKey());</span><br><span class="line">               String result = this.execute(new RedisCallback&lt;String&gt;() &#123;</span><br><span class="line">                   @Override</span><br><span class="line">                   public String doInRedis(RedisConnection connection) throws DataAccessException &#123;</span><br><span class="line">                       JedisCommands commands = (JedisCommands) connection.getNativeConnection();</span><br><span class="line">                       return commands.set(redisLock.getKey(), redisLock.getValue(), &quot;NX&quot;, &quot;PX&quot;, redisLock.getLockExpireTime());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">               if (StringUtils.isNotEmpty(result))&#123;</span><br><span class="line">                   return true;</span><br><span class="line">               &#125;</span><br><span class="line">               Thread.sleep(tryInterval);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;catch (Exception e)&#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">           return false;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>this.execute(new RedisCallback<string>() //封装 spring-data-redis 分布式锁<br>//获取redisnativeConnection 初始化为 JedisCommands返回操作类<br>JedisCommands commands = (JedisCommands) connection.getNativeConnection();<br>//使用commands操作类设置数据锁<br>return commands.set(redisLock.getKey(), redisLock.getValue(), “NX”, “PX”, redisLock.getLockExpireTime());</string></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 释放锁</span><br><span class="line">     */</span><br><span class="line">    public void releaseLock(RedisLock redisLock) &#123;</span><br><span class="line">        final List&lt;String&gt; keys = new ArrayList(1);</span><br><span class="line">        final List&lt;String&gt; args = new ArrayList(1);</span><br><span class="line">        keys.add(redisLock.getKey());</span><br><span class="line">        args.add(redisLock.getValue());</span><br><span class="line">        Long result = this.execute(new RedisCallback&lt;Long&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public Long doInRedis(RedisConnection connection) throws DataAccessException &#123;</span><br><span class="line">                Object nativeConnection = connection.getNativeConnection();</span><br><span class="line">                // 集群模式和单机模式虽然执行脚本的方法一样，但是没有共同的接口，所以只能分开执行</span><br><span class="line">                // 集群模式</span><br><span class="line">                if (nativeConnection instanceof JedisCluster) &#123;</span><br><span class="line">                    return (Long) ((JedisCluster) nativeConnection).eval(EQ_DEL_STR, keys, args);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 单机模式</span><br><span class="line">                else if (nativeConnection instanceof Jedis) &#123;</span><br><span class="line">                    return (Long) ((Jedis) nativeConnection).eval(EQ_DEL_STR, keys, args);</span><br><span class="line">                &#125;</span><br><span class="line">                return 0L;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>释放锁 调用spring-data-redis封装类 ResdTemplate.excute()</p><p>返回类型初始化为 JedisCluster 或者 Jedis操作类 调用 eval方法  解锁数据</p>]]></content>
    
    <summary type="html">
    
      封装spring-data-redis操作redis分布式锁 
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="cache" scheme="https://www.wuxinvip.com/categories/java/cache/"/>
    
    
      <category term="缓存" scheme="https://www.wuxinvip.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>feign ribbon 配置</title>
    <link href="https://www.wuxinvip.com/2019/04/12/spring-cloud/feign-ribbon-config/"/>
    <id>https://www.wuxinvip.com/2019/04/12/spring-cloud/feign-ribbon-config/</id>
    <published>2019-04-12T00:00:00.000Z</published>
    <updated>2019-04-25T18:12:11.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="feign-配置"><a href="#feign-配置" class="headerlink" title="feign 配置"></a>feign 配置</h3><p><a href="https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-feign.html" target="_blank" rel="noopener">官方文档配置</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      feignName:</span></span><br><span class="line"><span class="attr">        connectTimeout:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        readTimeout:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        loggerLevel:</span> <span class="string">full</span></span><br><span class="line"><span class="attr">        errorDecoder:</span> <span class="string">com.example.SimpleErrorDecoder</span></span><br><span class="line"><span class="attr">        retryer:</span> <span class="string">com.example.SimpleRetryer</span></span><br><span class="line"><span class="attr">        requestInterceptors:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">com.example.FooRequestInterceptor</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">com.example.BarRequestInterceptor</span></span><br><span class="line"><span class="attr">        decode404:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">        encoder:</span> <span class="string">com.example.SimpleEncoder</span></span><br><span class="line"><span class="attr">        decoder:</span> <span class="string">com.example.SimpleDecoder</span></span><br><span class="line"><span class="attr">        contract:</span> <span class="string">com.example.SimpleContract</span></span><br><span class="line"><span class="attr">      default:</span></span><br><span class="line"><span class="attr">        connectTimeout:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        readTimeout:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        loggerLevel:</span> <span class="string">basic</span></span><br><span class="line"><span class="comment"># To disable Hystrix in Feign</span></span><br><span class="line"><span class="attr">  hystrix:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># To set thread isolation to SEMAPHORE</span></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line"><span class="attr">  command:</span></span><br><span class="line"><span class="attr">    default:</span></span><br><span class="line"><span class="attr">      execution:</span></span><br><span class="line"><span class="attr">        isolation:</span></span><br><span class="line"><span class="attr">          strategy:</span> <span class="string">SEMAPHORE</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 配置请求GZIP压缩</span><br><span class="line">feign.compression.request.enabled=true</span><br><span class="line"># 配置响应GZIP压缩</span><br><span class="line">feign.compression.response.enabled=true</span><br><span class="line"># 配置压缩支持的MIME TYPE</span><br><span class="line">feign.compression.request.mime-types=text/xml,application/xml,application/json</span><br><span class="line"># 配置压缩数据大小的下限</span><br><span class="line">feign.compression.request.min-request-size=2048</span><br><span class="line"></span><br><span class="line">#熔断</span><br><span class="line">feign.hystrix.enabled=false</span><br></pre></td></tr></table></figure><h3 id="ribbon-配置"><a href="#ribbon-配置" class="headerlink" title="ribbon 配置"></a>ribbon 配置</h3><p><a href="https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-ribbon.html" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="attr">  ribbon:</span></span><br><span class="line"><span class="attr">    NIWSServerListClassName:</span> <span class="string">com.netflix.loadbalancer.ConfigurationBasedServerList</span></span><br><span class="line"><span class="attr">    NFLoadBalancerRuleClassName:</span> <span class="string">com.netflix.loadbalancer.WeightedResponseTimeRule</span></span><br><span class="line"><span class="attr">stores:</span></span><br><span class="line"><span class="attr">  ribbon:</span></span><br><span class="line"><span class="attr">    listOfServers:</span> <span class="string">example.com,google.com</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line"><span class="attr">  eureka:</span></span><br><span class="line"><span class="attr">   enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  eager-load:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    clients:</span> <span class="string">client1,</span> <span class="string">client2,</span> <span class="string">client3</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 设置连接超时时间</span><br><span class="line">ribbon.ConnectTimeout=3000</span><br><span class="line"># 设置读取超时时间</span><br><span class="line">ribbon.ReadTimeout=2000</span><br><span class="line"># 对所有操作请求都进行重试</span><br><span class="line">ribbon.OkToRetryOnAllOperations=true</span><br><span class="line"># 切换实例的重试次数</span><br><span class="line">ribbon.MaxAutoRetriesNextServer=2</span><br><span class="line"># 对当前实例的重试次数</span><br><span class="line">ribbon.MaxAutoRetries=1</span><br><span class="line">#切换实例的重试次数</span><br><span class="line">ribbon.MaxAutoRetriesNextServer=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#暂不开启重试,以防请求重复</span><br><span class="line">spring.cloud.loadbalancer.retry.enabled=false</span><br></pre></td></tr></table></figure><ul><li>这种配置是一种全局配置，就是是对所有的请求生效的，如果我想针对不同的服务配置不同的连接超时和读取超时，那么我们可以在属性的前面加上服务的名字，如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 设置针对hello-service服务的连接超时时间</span><br><span class="line">hello-service.ribbon.ConnectTimeout=600</span><br><span class="line"># 设置针对hello-service服务的读取超时时间</span><br><span class="line">hello-service.ribbon.ReadTimeout=6000</span><br><span class="line"># 设置针对hello-service服务所有操作请求都进行重试</span><br><span class="line">hello-service.ribbon.OkToRetryOnAllOperations=true</span><br><span class="line"># 设置针对hello-service服务切换实例的重试次数</span><br><span class="line">hello-service.ribbon.MaxAutoRetriesNextServer=2</span><br><span class="line"># 设置针对hello-service服务的当前实例的重试次数</span><br><span class="line">hello-service.ribbon.MaxAutoRetries=1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;feign-配置&quot;&gt;&lt;a href=&quot;#feign-配置&quot; class=&quot;headerlink&quot; title=&quot;feign 配置&quot;&gt;&lt;/a&gt;feign 配置&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://cloud.spring.io/spring-cloud-
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="spring-cloud" scheme="https://www.wuxinvip.com/categories/java/spring-cloud/"/>
    
    
      <category term="spring-cloud" scheme="https://www.wuxinvip.com/tags/spring-cloud/"/>
    
  </entry>
  
  <entry>
    <title>feign ribbon 配置</title>
    <link href="https://www.wuxinvip.com/2019/04/12/spring-cloud/hystrix-config/"/>
    <id>https://www.wuxinvip.com/2019/04/12/spring-cloud/hystrix-config/</id>
    <published>2019-04-12T00:00:00.000Z</published>
    <updated>2019-04-25T18:12:11.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="feign-配置"><a href="#feign-配置" class="headerlink" title="feign 配置"></a>feign 配置</h3><p><a href="https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-feign.html" target="_blank" rel="noopener">官方文档配置</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    config:</span></span><br><span class="line"><span class="attr">      feignName:</span></span><br><span class="line"><span class="attr">        connectTimeout:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        readTimeout:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        loggerLevel:</span> <span class="string">full</span></span><br><span class="line"><span class="attr">        errorDecoder:</span> <span class="string">com.example.SimpleErrorDecoder</span></span><br><span class="line"><span class="attr">        retryer:</span> <span class="string">com.example.SimpleRetryer</span></span><br><span class="line"><span class="attr">        requestInterceptors:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">com.example.FooRequestInterceptor</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">com.example.BarRequestInterceptor</span></span><br><span class="line"><span class="attr">        decode404:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">        encoder:</span> <span class="string">com.example.SimpleEncoder</span></span><br><span class="line"><span class="attr">        decoder:</span> <span class="string">com.example.SimpleDecoder</span></span><br><span class="line"><span class="attr">        contract:</span> <span class="string">com.example.SimpleContract</span></span><br><span class="line"><span class="attr">      default:</span></span><br><span class="line"><span class="attr">        connectTimeout:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        readTimeout:</span> <span class="number">5000</span></span><br><span class="line"><span class="attr">        loggerLevel:</span> <span class="string">basic</span></span><br><span class="line"><span class="comment"># To disable Hystrix in Feign</span></span><br><span class="line"><span class="attr">  hystrix:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># To set thread isolation to SEMAPHORE</span></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line"><span class="attr">  command:</span></span><br><span class="line"><span class="attr">    default:</span></span><br><span class="line"><span class="attr">      execution:</span></span><br><span class="line"><span class="attr">        isolation:</span></span><br><span class="line"><span class="attr">          strategy:</span> <span class="string">SEMAPHORE</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 配置请求GZIP压缩</span><br><span class="line">feign.compression.request.enabled=true</span><br><span class="line"># 配置响应GZIP压缩</span><br><span class="line">feign.compression.response.enabled=true</span><br><span class="line"># 配置压缩支持的MIME TYPE</span><br><span class="line">feign.compression.request.mime-types=text/xml,application/xml,application/json</span><br><span class="line"># 配置压缩数据大小的下限</span><br><span class="line">feign.compression.request.min-request-size=2048</span><br><span class="line"></span><br><span class="line">#熔断</span><br><span class="line">feign.hystrix.enabled=false</span><br></pre></td></tr></table></figure><h3 id="ribbon-配置"><a href="#ribbon-配置" class="headerlink" title="ribbon 配置"></a>ribbon 配置</h3><p><a href="https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-ribbon.html" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">users:</span></span><br><span class="line"><span class="attr">  ribbon:</span></span><br><span class="line"><span class="attr">    NIWSServerListClassName:</span> <span class="string">com.netflix.loadbalancer.ConfigurationBasedServerList</span></span><br><span class="line"><span class="attr">    NFLoadBalancerRuleClassName:</span> <span class="string">com.netflix.loadbalancer.WeightedResponseTimeRule</span></span><br><span class="line"><span class="attr">stores:</span></span><br><span class="line"><span class="attr">  ribbon:</span></span><br><span class="line"><span class="attr">    listOfServers:</span> <span class="string">example.com,google.com</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ribbon:</span></span><br><span class="line"><span class="attr">  eureka:</span></span><br><span class="line"><span class="attr">   enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  eager-load:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    clients:</span> <span class="string">client1,</span> <span class="string">client2,</span> <span class="string">client3</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 设置连接超时时间</span><br><span class="line">ribbon.ConnectTimeout=3000</span><br><span class="line"># 设置读取超时时间</span><br><span class="line">ribbon.ReadTimeout=2000</span><br><span class="line"># 对所有操作请求都进行重试</span><br><span class="line">ribbon.OkToRetryOnAllOperations=true</span><br><span class="line"># 切换实例的重试次数</span><br><span class="line">ribbon.MaxAutoRetriesNextServer=2</span><br><span class="line"># 对当前实例的重试次数</span><br><span class="line">ribbon.MaxAutoRetries=1</span><br><span class="line">#切换实例的重试次数</span><br><span class="line">ribbon.MaxAutoRetriesNextServer=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#暂不开启重试,以防请求重复</span><br><span class="line">spring.cloud.loadbalancer.retry.enabled=false</span><br></pre></td></tr></table></figure><ul><li>这种配置是一种全局配置，就是是对所有的请求生效的，如果我想针对不同的服务配置不同的连接超时和读取超时，那么我们可以在属性的前面加上服务的名字，如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 设置针对hello-service服务的连接超时时间</span><br><span class="line">hello-service.ribbon.ConnectTimeout=600</span><br><span class="line"># 设置针对hello-service服务的读取超时时间</span><br><span class="line">hello-service.ribbon.ReadTimeout=6000</span><br><span class="line"># 设置针对hello-service服务所有操作请求都进行重试</span><br><span class="line">hello-service.ribbon.OkToRetryOnAllOperations=true</span><br><span class="line"># 设置针对hello-service服务切换实例的重试次数</span><br><span class="line">hello-service.ribbon.MaxAutoRetriesNextServer=2</span><br><span class="line"># 设置针对hello-service服务的当前实例的重试次数</span><br><span class="line">hello-service.ribbon.MaxAutoRetries=1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;feign-配置&quot;&gt;&lt;a href=&quot;#feign-配置&quot; class=&quot;headerlink&quot; title=&quot;feign 配置&quot;&gt;&lt;/a&gt;feign 配置&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://cloud.spring.io/spring-cloud-
      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="spring-cloud" scheme="https://www.wuxinvip.com/categories/java/spring-cloud/"/>
    
    
      <category term="spring-cloud" scheme="https://www.wuxinvip.com/tags/spring-cloud/"/>
    
  </entry>
  
  <entry>
    <title>redis 规范</title>
    <link href="https://www.wuxinvip.com/2019/04/11/cache/redis-1/"/>
    <id>https://www.wuxinvip.com/2019/04/11/cache/redis-1/</id>
    <published>2019-04-11T00:00:00.000Z</published>
    <updated>2019-09-03T05:45:10.922Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.infoq.cn/article/K7dB5AFKI9mr5Ugbs_px?from=timeline" target="_blank" rel="noopener">原文链接</a></p><ul><li>键值设计</li><li>命令使用</li><li>客户端使用</li><li>相关工具</li><li>附录【4.0遍历删除】</li></ul><p>{———-}</p><h2 id="1、键值设计"><a href="#1、键值设计" class="headerlink" title="1、键值设计"></a>1、键值设计</h2><ul><li><p>1、key名设计</p><p>   1、可读性和可管理性</p><pre><code>以业务名 (或数据库名) 为前缀 (防止 key 冲突)，用冒号分隔，比如业务名: 表名:idugc:video:1</code></pre><p>   2、简洁性</p><pre><code>保证语义的前提下，控制key的长度，当key较多时，内存占用也不容忽视，例如：user:{uid}:friends:messages:{mid}简化为u:{uid}:fr:m:{mid}。</code></pre><p>   3、不要包含特殊字符</p><pre><code>反例：包含空格、换行、单双引号以及其他转义字符</code></pre></li><li><p>2、value设计</p><p>   1、拒绝bigkey</p><pre><code>防止网卡流量、慢查询，string类型控制在10KB以内，hash、list、set、zset元素个数不要超过5000。反例：一个包含200万个元素的list。非字符串的bigkey，不要使用del删除，使用hscan、sscan、zscan、[相关文章](http://doc.redisfans.com/key/scan.html)方式渐进式删除，同时要注意防止bigkey过期时间自动删除问题(例如一个200万的zset设置1小时过期，会触发del操作，造成阻塞，而且该操作不会不出现在慢查询中(latency可查))，查找方法和删除方法</code></pre><p>   2、选择适合的数据类型</p><pre><code>例如：实体类型(要合理控制和使用数据结构内存编码优化配置,例如ziplist，但也要注意节省内存和性能之间的平衡)。了解下，Redis 为什么这么快？    反例：    set user: 1 :name tom    set user: 1 :age 19    set user: 1 :favor football    正例:    hmset user: 1 name tom age  19 favor football</code></pre></li><li><p>3、控制key的生命周期</p><pre><code>redis不是垃圾桶，建议使用expire设置过期时间(条件允许可以打散过期时间，防止集中过期)，不过期的数据重点关注idletime。</code></pre></li></ul><h2 id="2、命令使用"><a href="#2、命令使用" class="headerlink" title="2、命令使用"></a>2、命令使用</h2><ul><li><p>1、O(N)命令关注N的数量</p><p>   例如hgetall、lrange、smembers、zrange、sinter等并非不能使用，但是需要明确N的值。<br>   有遍历的需求可以使用hscan、sscan、zscan、<a href="http://doc.redisfans.com/key/scan.html" target="_blank" rel="noopener">相关文章</a>代替。</p></li><li><p>2、禁用命令</p><p>   禁止线上使用keys、flushall、flushdb等，通过redis的rename机制禁掉命令，或者使用scan、<a href="http://doc.redisfans.com/key/scan.html" target="_blank" rel="noopener">相关文章</a>的方式渐进式处理。<br>   一个致命的 Redis 命令，导致公司损失 400 万！！</p></li><li><p>3、合理使用select</p><p>   redis的多数据库较弱，使用数字进行区分，很多客户端支持较差，同时多业务用多数据库实际还是单线程处理，会有干扰。</p></li><li><p>4、使用批量操作提高效率</p><p>   原生命令：例如mget、mset。<br>   非原生命令：可以使用pipeline提高效率。</p><p>   但要注意控制一次批量操作的元素个数(例如500以内，实际也和元素字节数有关)。</p><p>   注意两者不同：</p><p>   原生是原子操作，pipeline是非原子操作。</p><p>   pipeline可以打包不同的命令，原生做不到</p><p>   pipeline需要客户端和服务端同时支持。</p></li><li><p>5、不建议过多使用Redis事务功能</p><pre><code>Redis的事务功能较弱(不支持回滚)，而且集群版本(自研和官方)要求一次事务操作的key必须在一个slot上(可以使用hashtag功能解决)。</code></pre></li><li><p>6、Redis集群版本在使用Lua上有特殊要求</p><p>   1、所有key都应该由 KEYS 数组来传递，redis.call/pcall 里面调用的redis命令，key的位置，</p><pre><code>必须是KEYS array, 否则直接返回error，&quot;-ERR bad lua script for redis cluster, all the keys that the script uses should be passed using the KEYS arrayrn&quot;</code></pre><p>   2、所有key，必须在1个slot上，否则直接返回error, “-ERR eval/evalsha command keys must in same slotrn”</p></li><li><p>7、monitor命令</p><p>   必要情况下使用monitor命令时，要注意不要长时间使用。</p></li></ul><h2 id="3、客户端使用"><a href="#3、客户端使用" class="headerlink" title="3、客户端使用"></a>3、客户端使用</h2><ul><li><p>1、避免多个应用使用一个Redis实例<br>   不相干的业务拆分，公共数据做服务化。</p></li><li><p>2、使用连接池</p><p>   可以有效控制连接，同时提高效率，标准使用方式：</p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    jedis = jedisPool.getResource();</span><br><span class="line">    <span class="comment">//具体的命令</span></span><br><span class="line">    jedis.executeCommand()</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    logger.error(<span class="string">"op key &#123;&#125; error: "</span> + e.getMessage(), key, e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">//注意这里不是关闭连接，在JedisPool模式下，Jedis会被归还给资源池。</span></span><br><span class="line">    <span class="keyword">if</span> (jedis != <span class="keyword">null</span>) </span><br><span class="line">        jedis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>3、熔断功能<br>   高并发下建议客户端添加熔断功能(例如netflix hystrix)</p></li><li><p>4、合理的加密<br>   设置合理的密码，如有必要可以使用SSL加密访问（阿里云Redis支持）</p></li><li><p>5、淘汰策略<br>   根据自身业务类型，选好maxmemory-policy(最大内存淘汰策略)，设置好过期时间。</p><p>   默认策略是volatile-lru</p><pre><code>即超过最大内存后，在过期键中使用lru算法进行key的剔除，保证不过期数据不被删除，但是可能会出现OOM问题。</code></pre><p>   其他策略如下：</p><pre><code>allkeys-lru：根据LRU算法删除键，不管数据有没有设置超时属性，直到腾出足够空间为止。allkeys-random：随机删除所有键，直到腾出足够空间为止。volatile-random:随机删除过期键，直到腾出足够空间为止。volatile-ttl：根据键值对象的ttl属性，删除最近将要过期数据。如果没有，回退到noeviction策略。noeviction：不会剔除任何数据，拒绝所有写入操作并返回客户端错误信息    &quot;(error) OOM command not allowed when used memory&quot;，此时Redis只响应读操作。</code></pre></li></ul><h2 id="4、相关工具"><a href="#4、相关工具" class="headerlink" title="4、相关工具"></a>4、相关工具</h2><ul><li><p>1、数据同步</p><p>redis间数据同步可以使用：redis-port</p></li><li><p>2、big key搜索</p><p>redis大key搜索工具</p></li><li><p>3、热点key寻找</p><p>内部实现使用monitor，所以建议短时间使用facebook的redis-faina<br>阿里云Redis已经在内核层面解决热点key问题</p></li></ul><h2 id="5、附录"><a href="#5、附录" class="headerlink" title="5、附录"></a>5、附录</h2><ul><li><p>1、删除 bigkey</p><pre><code>下面操作可以使用pipeline加速。redis 4.0已经支持key的异步删除，欢迎使用。</code></pre></li></ul><ul><li><p>1、Hash删除: hscan + hdel</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delBigHash</span><span class="params">(String host, <span class="keyword">int</span> port, String password, String bigHashKey)</span> </span>&#123;</span><br><span class="line">    Jedis jedis = <span class="keyword">new</span> Jedis(host, port);</span><br><span class="line">    <span class="keyword">if</span> (password != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(password)) &#123;</span><br><span class="line">        jedis.auth(password);</span><br><span class="line">    &#125;</span><br><span class="line">    ScanParams scanParams = <span class="keyword">new</span> ScanParams().count(<span class="number">100</span>);</span><br><span class="line">    String cursor = <span class="string">"0"</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        ScanResult&lt;Entry&lt;String, String&gt;&gt; scanResult = jedis.hscan(bigHashKey, cursor, scanParams);</span><br><span class="line">        List&lt;Entry&lt;String, String&gt;&gt; entryList = scanResult.getResult();</span><br><span class="line">        <span class="keyword">if</span> (entryList != <span class="keyword">null</span> &amp;&amp; !entryList.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Entry&lt;String, String&gt; entry : entryList) &#123;</span><br><span class="line">                jedis.hdel(bigHashKey, entry.getKey());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cursor = scanResult.getStringCursor();</span><br><span class="line">    &#125; <span class="keyword">while</span> (!<span class="string">"0"</span>.equals(cursor));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除bigkey</span></span><br><span class="line">    jedis.del(bigHashKey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>2、List删除: ltrim </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public void delBigList(String host, int port, String password, String bigListKey) &#123;</span><br><span class="line">    Jedis jedis = new Jedis(host, port);</span><br><span class="line">    if (password != null &amp;&amp; !&quot;&quot;.equals(password)) &#123;</span><br><span class="line">        jedis.auth(password);</span><br><span class="line">    &#125;</span><br><span class="line">    long llen = jedis.llen(bigListKey);</span><br><span class="line">    int counter = 0;</span><br><span class="line">    int left = 100;</span><br><span class="line">    while (counter &lt; llen) &#123;</span><br><span class="line">        //每次从左侧截掉100个</span><br><span class="line">        jedis.ltrim(bigListKey, left, llen);</span><br><span class="line">        counter += left;</span><br><span class="line">    &#125;</span><br><span class="line">    //最终删除key</span><br><span class="line">    jedis.del(bigListKey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>3、Set删除: sscan + srem</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public void delBigSet(String host, int port, String password, String bigSetKey) &#123;</span><br><span class="line">    Jedis jedis = new Jedis(host, port);</span><br><span class="line">    if (password != null &amp;&amp; !&quot;&quot;.equals(password)) &#123;</span><br><span class="line">        jedis.auth(password);</span><br><span class="line">    &#125;</span><br><span class="line">    ScanParams scanParams = new ScanParams().count(100);</span><br><span class="line">    String cursor = &quot;0&quot;;</span><br><span class="line">    do &#123;</span><br><span class="line">        ScanResult&lt;String&gt; scanResult = jedis.sscan(bigSetKey, cursor, scanParams);</span><br><span class="line">        List&lt;String&gt; memberList = scanResult.getResult();</span><br><span class="line">        if (memberList != null &amp;&amp; !memberList.isEmpty()) &#123;</span><br><span class="line">            for (String member : memberList) &#123;</span><br><span class="line">                jedis.srem(bigSetKey, member);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cursor = scanResult.getStringCursor();</span><br><span class="line">    &#125; while (!&quot;0&quot;.equals(cursor));</span><br><span class="line"></span><br><span class="line">    //删除bigkey</span><br><span class="line">    jedis.del(bigSetKey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>4、SortedSet删除: zscan + zrem</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public void delBigZset(String host, int port, String password, String bigZsetKey) &#123;</span><br><span class="line">    Jedis jedis = new Jedis(host, port);</span><br><span class="line">    if (password != null &amp;&amp; !&quot;&quot;.equals(password)) &#123;</span><br><span class="line">        jedis.auth(password);</span><br><span class="line">    &#125;</span><br><span class="line">    ScanParams scanParams = new ScanParams().count(100);</span><br><span class="line">    String cursor = &quot;0&quot;;</span><br><span class="line">    do &#123;</span><br><span class="line">        ScanResult&lt;Tuple&gt; scanResult = jedis.zscan(bigZsetKey, cursor, scanParams);</span><br><span class="line">        List&lt;Tuple&gt; tupleList = scanResult.getResult();</span><br><span class="line">        if (tupleList != null &amp;&amp; !tupleList.isEmpty()) &#123;</span><br><span class="line">            for (Tuple tuple : tupleList) &#123;</span><br><span class="line">                jedis.zrem(bigZsetKey, tuple.getElement());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cursor = scanResult.getStringCursor();</span><br><span class="line">    &#125; while (!&quot;0&quot;.equals(cursor));</span><br><span class="line"></span><br><span class="line">    //删除bigkey</span><br><span class="line">    jedis.del(bigZsetKey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.infoq.cn/article/K7dB5AFKI9mr5Ugbs_px?from=timeline&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;键值设计&lt;/li&gt;

      
    
    </summary>
    
      <category term="java" scheme="https://www.wuxinvip.com/categories/java/"/>
    
      <category term="cache" scheme="https://www.wuxinvip.com/categories/java/cache/"/>
    
    
      <category term="缓存" scheme="https://www.wuxinvip.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
</feed>
