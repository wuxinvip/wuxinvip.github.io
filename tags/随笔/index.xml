<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>随笔 on 无心技术簿</title>
    <link>https://blog.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/</link>
    <description>Recent content in 随笔 on 无心技术簿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.wuxinvip.com/tags/%E9%9A%8F%E7%AC%94/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>微信H5支付</title>
      <link>https://blog.wuxinvip.com/blog/essay/weichat-h5-pay/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/essay/weichat-h5-pay/</guid>
      <description>微信支付流程   微信支付流程 大概就是这个样子、也包括支付宝、各大银联差不多一个流程、也就是传递的参数略有不同
 用户通过客户端下一个订单、 后台根据用户下的商品来生成一个订单、 然后可以有一个订单确认页面 以显示订单是否完整 之后确认订单、把订单信息发送给微信 生成预支付信息【订单需要支付了、我告诉微信一下、我这有个订单要用你的支付了】 之后用微信返回的预支付信息来调起微信支付【微信表示我收到了、我给你个密钥、你用它去找我的管家要钱就行了】 用户输入密码、确认支付【用户拿着密钥找管家、我要买这个、这是我的账户密码】 支付完成、微信告诉客户端的服务器、他买完了、并且成功了、【微信大佬告诉你后台&amp;rdquo;也就是你老婆&amp;rdquo;你丈夫在我这买了个这个】  核心部分是这么个流程
当然 再接入微信支付前 要判断你对这个网站的拥有权 需要在你的服务器 上传一个文件作为验证、这个跟站长在百度等各大搜索引擎验证身份一个意思
还要配置 回调地址 以防止数据被篡改、保证安全性、
对于服务之间的通信全程都是https加密类型-混合型加密技术</description>
    </item>
    
    <item>
      <title>atom 快捷键</title>
      <link>https://blog.wuxinvip.com/blog/essay/atom/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/essay/atom/</guid>
      <description>   英文 中文 快捷键     New Window 新建界面窗口 Ctrl + Shift + N   New File 新建文件 Ctrl + N   Open File 打开文件 Ctrl + O   Open Folder 打开文件夹 Ctrl + Shift + O   Add Project Folder 加载项目目录 Ctrl + Alt + O   Reopen Last Item 重新加载上次项目 Ctrl + Shift + T   Save 保存文件 Ctrl + S   Save As 另存为 Ctrl + Shift +S   Close Tab 关闭当前编辑文档 Ctrl + W   Close Window 关闭编辑器 Ctrl + Shift + W   Undo 撤销 Ctrl + Z   Redo 重做 Ctrl + Y   Cut 剪切 Shift + Delete   Copy 复制 Ctrl + Insert   Copy Path 复制文档路径 Ctrl + Shift + C   Paste 粘贴 Shift + Insert   Select All 全选 Ctrl + A   Select Encoding 选择编码 Ctrl + Shift +U   Go to Line 跳转到某行 Ctrl + G   Slect Grammar 语法选择 Ctrl + Shift + L   Reload 重载 Ctrl+ Alt +R   Toggle Full Screen 全屏 F11   Increase Font Size 增大字体 Ctrl + Shift + “+”   Decrease Font Size 减小字体 Ctrl + Shift + “-“   Toggle Tree View 展示隐藏目录树 Ctrl + （竖杠）   Toggle Commadn palette 全局搜索面板 Ctrl + Shift + P   Select Line 选定一行 Ctrl + L   Select First Character of Line 选定光标至行首 Shift + Home   Slect End of Line 选定光标至行尾 Shift + End   Select to Top 选定光标处至文档首行 Ctrl + Shift + Home   Select to Bottom 选定光标处至文档尾行 Ctrl + Shfit + End   Find in Buffer 从缓存器搜索 Ctrl + F   Replace in Buffer 高级替换 Ctrl + Shift + F   Select Next 匹配选定下一个 Ctrl + D   Select All 匹配选定所有 Alt + F3   Find File 查询文件,选定打开 Ctrl + P   Delte End of Word 删除光标处至词尾 Ctrl + Del   Duplicate Line 复制行 Ctrl + Shift + D   Delete Line 删除一行 Ctrl + Shift + K   Toggle Comment 启用注释 Ctrl + /   Toggle developer tools 打开Chrome调试器 Ctrl + Alt + I   Indent 增加缩进 Ctrl + [   Outdent 减少缩进 Ctrl + ]   Move Line Up 行向上移动 Ctrl + up   Move Line Down 行向下移动 Ctrl + Down   Join Lines 行链接 Ctrl + J   newline-below 光标之下增加一行 Ctrl + Enter   editor:newline-above 光标之上增加一行 Ctrl + Shift + Enter   pane:show-next-item 切换编辑的标签页 Ctrl + Tab   Fuzzy Finder 文件跳转面板 Ctrl + T   Select Line Move above 选中行上移 Ctrl + up   Select Line Move below 选中行下移 Ctrl + down   Symbol-view 进入变量、函数跳转面板。 Ctrl + R    </description>
    </item>
    
    <item>
      <title>为什么你成不了架构师</title>
      <link>https://blog.wuxinvip.com/blog/essay/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E6%88%90%E4%B8%8D%E4%BA%86%E6%9E%B6%E6%9E%84%E5%B8%88/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/essay/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E6%88%90%E4%B8%8D%E4%BA%86%E6%9E%B6%E6%9E%84%E5%B8%88/</guid>
      <description>近期入职新公司 接手架构重构 感慨颇多、也学到不少东西、
学会了时间不使用timestamp 使用bigint、价格不使用decimal 而是int or bigint
以前常念叨 适合业务的技术才是最好的技术、却少有感慨
为什么使用bigint作为时间单位？ 1、首先兼容oracle、其次项目内部流转不容易异常【项目中是这个说法、貌似timestamp我也没碰到过异常】
2、还有就是int值比较容易比较 尤其针对范围查询 较快些吧、估计timestamp底层比较就是int方式
为什么使用int或者bigint作为价格单位 1、首先这点不能一定就说项目中就一定是对的、暂时没有想到以前的设计方案
项目中的想法了解到、价格小数点取到后四位 1.0001元、
2、当然decimal肯定可以甚至可以更好的decimal（10，5）这样的设计我觉得会更好
事实上现在也出现了问题 总价格不能超过2100000.00000【int的最大值】
系统重构是痛苦的、后续任务中涉及表重构、需要设计索引、
以前曾经擅自在项目表设计上加过联合索引、被领导小训了一顿、
从此对之是挺害怕的、甚至到之前一直都不知道为什么错了、知识水平有限
回家路上是左思右想、有了这么几个猜测
1、使用explian table查询表索引 联合索引两个字段有一个被索引另一个没有索引 2、联合索引、更新表要更新索引缓存、而实际查询率并不高、 也就是说花费了巨大的代价去维护一个索引健、而用到的时候却比较少 3、我擅自增加索引的表是用户表、用户表更新比较频繁、查询较少、 进一步增大了【2】的代价去干了不该干的事、 4、一系列的骚操作、不知道底层就瞎搞胡搞、须知所有的设计都是有利有弊、 都是为了某些业务场景而设计、把不该用的配置用到不该用的业务上、就会与期望值南辕北辙  为什么你成不了架构师？ 每一个系统都有自己的业务需求、天下没有两片一样的叶子、也没有两个一样的系统、
即使业务需求一样、不同的程序员也会设计出不同的系统
 都在讲架构师要有两方面准备【技术架构】和【业务架构】 技术架构：从最简单的LAMP【linux+apache tomcat+mysql+php】到SOA、 到微服务、以及各个组件的针对场景使用 业务架构：这个是选择来的、不同的公司在做不同的业务、没有业务架构知识、 你连一个表都设计不出来、不了解业务面对老系统设计都不敢动、还谈什么架构？ 就像 我为什么在这使用中文：而不是英文: 因为中文间距宽 更易读、而使用英文 间距小 不容易读  只去关注技术的优缺点、永远成不了架构师、只有了解系统的特点、才能更好的设计出一个优秀的系统、又快又稳定。</description>
    </item>
    
    <item>
      <title>git error</title>
      <link>https://blog.wuxinvip.com/blog/essay/git-email/</link>
      <pubDate>Mon, 28 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/essay/git-email/</guid>
      <description>git config --system --unset credential.helper 之后重新配置 user.name user.email  git 提交错误 The Git process exited with the code -1,073,741,819 版本问题 http://download.csdn.net/detail/huoyan403/9874429  </description>
    </item>
    
    <item>
      <title>我的技术图谱</title>
      <link>https://blog.wuxinvip.com/blog/essay/%E6%88%91%E7%9A%84%E6%8A%80%E6%9C%AF%E5%9B%BE%E8%B0%B1/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/essay/%E6%88%91%E7%9A%84%E6%8A%80%E6%9C%AF%E5%9B%BE%E8%B0%B1/</guid>
      <description>此技术图谱个人技术内容绘制
包含内容java后台常见技术栈
   图谱分类 描述内容     DB 数据库、mysql   事务 java事务、分布式事务、db事务   分布式 常见分布式架构   协议 常见协议   各大开源组件解析 dubbo、data-es   密码加密 密码加密发展史、破解史   搜索引擎 es搜索引擎   权限 shiro 、数据权限、oauth认证   消息中间件 kafka、rocketmq、rabbitmq、zeromq   算法 常见排序算法、分布式算法、缓存算法、一致性算法   线程 java线程   缓存 缓存组件   设计模式 java设计模式   负载均衡 分布式流量负载   锁 java锁、分布式锁      mongodb 图谱   </description>
    </item>
    
    <item>
      <title>架构师之路</title>
      <link>https://blog.wuxinvip.com/blog/essay/%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/essay/%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF/</guid>
      <description>本着对技术的兴趣 进入了软件开发行业
可以说是如鱼得水的发展 凭借着年轻 挑灯夜战 掌握了许多技术应用、但仍脱不开技术应用者的领域
如今职业发展遇到瓶颈-该思考何去何从
想来想去只有选择架构师为发展方向
怎样成为一个架构师？
首先什么是架构师？
随着互联网应用的快速发展、各个领域相继进入互联网、各种业务形式的应用、一个合理的架构应对服务流量冲击显得尤为重要
那么应用架构针对应用更好的优化、分解、先有soa、后有微服务概念、 对于这个整体的请求走势要做到心中有数、到细节中每个请求的所经过的服务器心里有谱、对服务器承载能力有着清晰的认识
脑海里要有一个三维网络图
同时能细节看到某个节点内部的工作方式、又能从宏观角度看的到请求流转、敏锐感知节点中的压力点
然后针对业务领域、每个请求的频率、有一个经验教训、才能更好的使用脑海中的技术架构去整合起来业务压力
外包待出的毛病，除了用，啥都不会</description>
    </item>
    
    <item>
      <title>阿里电面总结</title>
      <link>https://blog.wuxinvip.com/blog/essay/%E9%98%BF%E9%87%8C%E7%94%B5%E9%9D%A2%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/essay/%E9%98%BF%E9%87%8C%E7%94%B5%E9%9D%A2%E6%80%BB%E7%BB%93/</guid>
      <description>先说问到的东西
负载均衡 DNS LVS Nginx 常用的 原理 路由转发
数据库:分库分表.底层
dubbo 注册原理 dubbo与springcloud 区别
java常用工具包
conllection底层 IO 底层 多线程技术 executoService
shell 查看网络连接 查看系统版本 从文件中找到最大数
算法:排序.负载均衡算法.缓存淘汰算法
python vb脚本 渗透. 加分项 ps:能说明你对技术感兴趣
反正大公司就是各种底层.原理.机制等等
说下我对java的理解
concurrentHashMap 锁结构
是否能重入
spring aop
spring事务 传播性 等等
分布式事务一致性
ThreadPool
就像开车一样.每个技术都是别人发明的.用规章制度才能更好的驾驭别人开发出来的武器. 不要怀疑别人为什么那么写(至少你还不够那个资格). 不要问为什么这么写.应该问别人为什么会这么做(是不是开起车来.更快更稳).还是那句话.
还有底层.我一个小二本.没本事入大公司法眼.自然也就不会&amp;rsquo;更&amp;rsquo;关注底层.先了解了架构.数据流向.
你至少应该明白你做的系统是个什么东西.你做的是那一块.需要什么样的性能
在这个基础上.有些人会不再钻研技术.走向管理岗位.这也是很多管理广而不细.
还有一些人开始了技术底层之路.也就是资深人士.
现在进不去没关系.以后我会的.</description>
    </item>
    
    <item>
      <title>阿里面霸总结的面试题</title>
      <link>https://blog.wuxinvip.com/blog/essay/%E9%98%BF%E9%87%8C%E9%9D%A2%E9%9C%B8%E6%80%BB%E7%BB%93%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/essay/%E9%98%BF%E9%87%8C%E9%9D%A2%E9%9C%B8%E6%80%BB%E7%BB%93%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>（1）自我介绍，做过什么项目。 （2）java虚拟机的区域如何划分，每一个区的动能，这一块自由发挥。 （3）双亲委派模型中，从顶层到底层，都是哪些类加载器，分别加载哪些类？ （4）有没有可能父类加载器和子类加载器，加载同一个类？如果加载同一个类，该使用哪一个类？ （5）HashMap的结构，get()，put()是如何实现的？HashMap有哪些问题？ （6）ConcurrentHashMap的get()，put()，又是如何实现的？ConcurrentHashMap有哪些问题？ ConcurrentHashMap的锁是读锁还是写锁？ （7） HashMap与HashTable的区别 （8）sleep()和wait()分别是哪个类的方法，有什么区别？synchronized底层如何实现的？用在代码块和方法上有什么区别？ （9）什么是线程池？如果让你设计一个动态大小的线程池，如何设计，应该有哪些方法？ （10）什么是死锁？JVM线程死锁，你该如何判断是因为什么？如果用VisualVM，dump线程信息出来，会有哪些信息？这一块问的很多....问的我懵了. 因为并没有实际操作过 = = （11）查看jvm虚拟机里面堆、线程的信息，你用过什么命令？我只用过图形界面VisualVM。。。 （12）垃圾回收算法有哪些？CMS知道吗？如何工作的？ （13）数据库中什么是事务？事务的隔离级别？事务的四个特性？什么是脏读，幻读，不可重复读？ （14）数据库索引的结构有哪些？我说B树和B+树，他说只有这两个吗。我又说全文倒排索引。然后介绍B+树的结构。 （15）数据库中的分页查询语句怎么写？ （16）什么是一致性哈希？用来解决什么问题？ （17）Redis的存储结构，或者说如何工作的，与mysql的区别？有哪些数据类型？ （18）项目中用到redis，为什么选用redis，了解其他NoSQL数据库吗？在你的项目中是如何运用redis的？key是什么，value是什么？ （19）归并排序的过程？时间复杂度？空间复杂度？ （20）你平常用什么排序？快速排序。说说在那些场景下适用，哪些场景下不适用。 （21）你在项目中做什么？因为我用到Solr，他就问我Solr是如何工作的？  （1）自我介绍。 （2）JVM如何加载一个类的过程，双亲委派模型中有哪些方法？ （3）HashMap如何实现的？ （4）HashMap和Concurrent HashMap区别， Concurrent HashMap 线程安全吗， Concurrent HashMap如何保证 线程安全？ （5）HashMap和HashTable 区别，HashTable线程安全吗？ （6）进程间通信有哪几种方式？ （7）JVM分为哪些区，每一个区干吗的？ （8）JVM如何GC，新生代，老年代，持久代，都存储哪些东西？ （9）GC用的引用可达性分析算法中，哪些对象可作为GC Roots对象？ （10）快速排序，过程，复杂度？ （11）什么是二叉平衡树，如何插入节点，删除节点，说出关键步骤。 （12）TCP如何保证可靠传输？三次握手过程？ （13）TCP和UDP区别？ （14）滑动窗口算法？ （15）Linux下如何进行进程调度的？ （16）Linux下你常用的命令有哪些？ （17）操作系统什么情况下会死锁？ （18）常用的hash算法有哪些？ （19）什么是一致性哈希？ （20）如何理解分布式锁？ （21）数据库中的范式有哪些？ （22）数据库中的索引的结构？什么情况下适合建索引？ （23）Java中的NIO，BIO，AIO分别是什么？ （24）用什么工具调试程序？JConsole，用过吗？ （25）现在JVM中有一个线程挂起了，如何用工具查出原因？ （26）线程同步与阻塞的关系？同步一定阻塞吗？阻塞一定同步吗？ （27）同步和异步有什么区别？ （28）线程池用过吗？ （29）如何创建单例模式？说了双重检查，他说不是线程安全的。如何高效的创建一个线程安全的单例？ （30）concurrent包下面，都用过什么？ （31）常用的数据库有哪些？redis用过吗？ （32）了解hadoop吗？说说hadoop的组件有哪些？hdfs，hive,hbase,zookeeper。说下mapreduce编程模型。 （33）你知道的开源协议有哪些？ （34）你知道的开源软件有哪些？ （35）你最近在看的书有哪些？ （36）你有什么问题要问我吗？ （37）了解哪些设计模式？说说都用过哪些设计模式 （38）如何判断一个单链表是否有环？ （39）操作系统如何进行分页调度？ （40）匿名内部类是什么？如何访问在其外面定义的变量？  HashMap和Hashtable的区别 实现一个保证迭代顺序的HashMap 说一说排序算法，稳定性，复杂度 说一说GC 可以保证的实习时长 职业规划  </description>
    </item>
    
  </channel>
</rss>