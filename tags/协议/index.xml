<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>协议 on 无心技术簿</title>
    <link>https://blog.wuxinvip.com/tags/%E5%8D%8F%E8%AE%AE/</link>
    <description>Recent content in 协议 on 无心技术簿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.wuxinvip.com/tags/%E5%8D%8F%E8%AE%AE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AMQP</title>
      <link>https://blog.wuxinvip.com/blog/agreement/amqp/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/agreement/amqp/</guid>
      <description>AMQP，即Advanced Message Queuing Protocol、高级队列消息协议
一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计。 基于此协议的客户端与消息中间件可传递消息，并不受客户端/中间件不同产品，不同的开发语言等条件的限制。 Erlang中的实现有 RabbitMQ等。
协议特性
1、消息方向 2、消息队列 3、消息路由 4、消息可靠性 5、消息安全性  协议元素
1、producer---生产者 2、consumer---消费者 3、virtual host --虚拟主机 4、exchange----交换器 5、queue----消息队列 6、message--消息  定义了 消息发送过程 以及消息系统必须的特性和 具体的消息流转实现 发送方式 可以看看RabbitMQ　消息发送流程 rabbitMQ严格按照AMQP协议定制实现的</description>
    </item>
    
    <item>
      <title>Https协议</title>
      <link>https://blog.wuxinvip.com/blog/agreement/https/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/agreement/https/</guid>
      <description>https http+ssl 使用http进行通信 ssl作为数据通信加密方式 使用非对称方式协商加密密钥、然后使用协商后的密钥进行密钥通信
混合加密方式
非对称加密方式协商加密方式、最后使用加密方式通讯
1、客户端 发送公钥、支持加密方式、版本号 2、服务器接收 公钥加密校验、选择加密方式 放松给客户端 3、客户端接收 服务器选定加密方式进行数据加密 4、使用协商后的加密方式加密http请求</description>
    </item>
    
    <item>
      <title>RPC</title>
      <link>https://blog.wuxinvip.com/blog/agreement/rpc/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/agreement/rpc/</guid>
      <description>RPC（Remote Procedure Call）—远程过程调用
工作原理
 1.调用客户端句柄；执行传送参数 2.调用本地系统内核发送网络消息 3.消息传送到远程主机 4.服务器句柄得到消息并取得参数 5.执行远程过程
 6.执行的过程将结果返回服务器句柄
 7.服务器句柄返回结果，调用远程系统内核
 8.消息传回本地主机
 9.客户句柄由内核接收消息
 10.客户接收句柄返回的数据
  协议结构
 远程过程调用（RPC）信息协议由两个不同结构组成：调用信息和答复信息。信息流程如下所示： RPC：远程过程调用流程 RPC 调用信息：每条远程过程调用信息包括以下无符号整数字段，以独立识别远程过程： 程序号（Program number） 程序版本号（Program version number） 过程号（Procedure number） RPC 调用信息主体形式如下： struct call_body { unsigned int rpcvers; unsigned int prog; unsigned int vers; unsigned int proc; opaque_auth cred; opaque_auth verf; 1 parameter 2 parameter . . . }； RPC 答复信息：RPC 协议的答复信息的改变取决于网络服务器对调用信息是接收还是拒绝。答复信息请求包括区别以下情形的各种信息： RPC 成功执行调用信息。. RPC 的远程实现不是协议第二版，返回 RPC 支持的最低和最高版本号。 在远程系统中，远程程序不可用。 远程程序不支持被请求的版本号。返回远程程序所支持的最低和最高版本号。 请求的过程号不存在。通常是呼叫方协议或程序差错。 RPC答复信息形式如下： enum reply_stat stat {MSG_ACCEPTED = 0, MSG_DENIED = 1 };  </description>
    </item>
    
    <item>
      <title>http协议</title>
      <link>https://blog.wuxinvip.com/blog/agreement/http/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/agreement/http/</guid>
      <description>http协议 HTTP　定义了　消息发送流程与信息格式
发送端
1、请求行 2、请求头 3、请求体  接受端
1、响应行 2、响应头 3、响应体  </description>
    </item>
    
    <item>
      <title>关于协议</title>
      <link>https://blog.wuxinvip.com/blog/agreement/about-agreement/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wuxinvip.com/blog/agreement/about-agreement/</guid>
      <description>what 协议？ 人民币算不算是一种协议？买家和卖家协议一张纸为 10元 、50元、100元
so ： 协议在互联网届就是发送方和接收方商量好的一种消息模式，
Http：规定两个ip、一个发送ip、一个接收ip、这两个ip进行数据交互时候、先握手、确定数据畅通、然后在进行数据通信、 握手协议：规定握手消息格式【一系列参数的排序】、 数据通信规定http发送消息体消息格式。</description>
    </item>
    
  </channel>
</rss>