<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>容器 on 无心技术簿</title>
    <link>https://www.wuxinvip.com/tags/%E5%AE%B9%E5%99%A8/</link>
    <description>Recent content in 容器 on 无心技术簿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.wuxinvip.com/tags/%E5%AE%B9%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>install docker</title>
      <link>https://www.wuxinvip.com/blog/container/install-docker/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.wuxinvip.com/blog/container/install-docker/</guid>
      <description>国内大佬专玩docker地址 中文翻译 http://www.widuu.com/docker/
从官方下载 curl https://get.docker.com &amp;gt; /tmp/install.sh sh install.sh 从系统镜像元下载 centos：yum install docker debian: apt-get install docker 在centos-6 中 docker 与系统自带可执行程序冲突。 执行： yum -y remove docker yum install docker-io  启动docker service docker start 设定默认开机启动 chkconfig docker on 下载镜像并运行 docker pull centos 查看镜像 docker images centos 运行镜像 docker run -i -t centos /bin/bash  </description>
    </item>
    
    <item>
      <title>pouch</title>
      <link>https://www.wuxinvip.com/blog/container/pouch/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.wuxinvip.com/blog/container/pouch/</guid>
      <description>2017.11.19正式开源pouch
pouch 基于Apache2.0协议的容器技术
介绍： Pouch 是一个轻量级容器技术 特点：快速高效、可移植性高、资源占用少
github：pouch
11年基于Linux内核上的namespace、cgroup等技术开始成熟、阿里Pouch基于LXC研发的第一代容器t4 13年Docker横空出世、解决了行业多年的&amp;rdquo;软件封装&amp;rdquo;问题、阿里吸收其经验、打磨Pouch
Pouch规模 2017 年双 11，巨额交易 1682 亿背后，Pouch 在&amp;rdquo;超级工程&amp;rdquo;中做到了： 1、100% 的在线业务 Pouch 化 2、容器规模达到百万级
阿里集团内部，Pouch 的日常服务已经覆盖绝大部分的事业部， 覆盖的业务场景包括：电商、广告、搜索等； 覆盖技术栈包括：电商应用、数据库、大数据、流计算等； 覆盖编程语言：Java、C++、NodeJS 等。  Pouch 技术优势 1、隔离性强
众所周知，行业中的容器方案大多基于 Linux 内核提供的 cgroup 和 namespace 来实现隔离，然后这样的轻量级方案存在弊端： .容器间，容器与宿主间，共享同一个内核； .内核实现的隔离资源，维度不足。 面对如此的内核现状，阿里巴巴采取了三个方面的工作，来解决容器的安全问题： 用户态增强容器的隔离维度，比如网络带宽、磁盘使用量等； 给内核提交 patch，修复容器的资源可见性问题，cgroup 方面的 bug； 实现基于 Hypervisor 的容器，通过创建新内核来实现容器隔离。  2、P2P镜像分发
点对点分发镜像【相对于中央仓库分发镜像、极大见笑了中央仓库的网络压力】 工具：阿里巴巴镜像分发工具&amp;quot;蜻蜓&amp;quot;  蜻蜓地址
3、富容器技术
 Pouch 技术可以说对业务没有任何的侵入性，也正是因为这一点在集团内部做到 100% 容器化。 这样的容器技术，被无数阿里人称为“富容器”。 “富容器”技术的实现，主要是为了在 Linux 内核上创建一个与虚拟机体验完全一致的容器。 如此一来，比一般容器要功能强大，内部有完整的 init 进程，以及业务应用需要的任何服务，当然这也印证了 Pouch 为什么可以做到对应用没有“侵入性”。 技术的实现过程中，Pouch 需要将容器的执行入口定义为 systemd，而在内核态，Pouch 引入了 cgroup namespace 这一最新的内核 patch，满足 systemd 在富容器模式的隔离性。 从企业运维流程来看，富容器同样优势明显。 它可以在应用的 Entrypoint 启动之前做一些事情，比如统一要做一些安全相关的事情，运维相关的 agent 拉起。 这些需要统一做的事情，倘若放到用户的启动脚本，或镜像中就对用户的应用诞生了侵入性，而富容器可以透明的处理掉这些事情。  4、内核兼容性 可以理解为兼容老版本linux内核系统</description>
    </item>
    
    <item>
      <title>what is the docker</title>
      <link>https://www.wuxinvip.com/blog/container/what-docker/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.wuxinvip.com/blog/container/what-docker/</guid>
      <description>what is docker?
百度 告诉我们docker是一个容器
作为java码头搬砖的 我想到了 spring也是叫做容器
那么容器是一个什么样的概念? 不由想到了水缸&amp;mdash;容器 容器装载水的 与水毫无关系
spring容器 IOC AOP 都晓得 IOC 把对象创建交给spring管理 然后加载到jvm中运行java 程序 AOP 面向切面编程.其实就是提供了一个切面模式.能够很好地控制类的加载顺序.或者类的执行顺序
但是本质上spring容器就是装载java程序的
那么docker? 装载各种程序的.暂时可以理解为一个系统.系统也是一个容器.装载我们运行的程序 window装载 exe. linux装载rpm. android 装载一类apk的程序 ios装载一类ipa的程序
那么官网是怎么吹皮的呢? Docker是推动集装箱运动的公司，也是唯一一家能够解决混合云中的每个应用的集装箱平台提供商。当今的企业面临数字化转型的压力，但受到现有应用程序和基础架构的制约，同时合理化日益多样化的云，数据中心和应用程序体系结构。Docker实现了应用程序和基础架构与开发人员和IT运营商之间的真正独立性，从而发挥其潜力，并创建更好的协作和创新模式。
docker给我们提供了什么样的先进功能? 也是我们要用它的原因
1.敏捷 通过13X加速软件开发和部署，并立即响应客户的需求。 2.可移植性 一劳永逸地消除“在我的机器上工作”。在本地和云环境中获得独立性。 3.安全 通过内置的安全功能和配置，在整个生命周期中提供更安全的应用程序。 4.节约成本 优化基础架构资源的使用并简化操作，以节省总成本的50％。
在使用上: 1.简单 Docker为应用创建和编排提供了强大的工具 2.透明度 采用开源技术和模块化设计构建，可轻松集成到现有环境中。 3.独立 Docker在开发人员和IT部门之间以及应用程序和基础架构之间创建了一个关注点，以解锁创新
在行业上 1.现代化传统应用[MTA] Docker的第一步是现有的应用程序组合。将现有应用程序打包到容器中可以立即提高安全性，降低成本并获得云的便携性。这种转换将现代属性应用于遗留应用程序 - 所有这些都不需要更改一行代码。
2.混合云 云迁移，多云或混合云基础架构需要应用程序的无缝移植。Docker将应用程序及其依赖关系打包到一个独立的容器中，使它们可以移植到任何基础架构中 一劳永逸地消除“在我的机器上工作”的问题。Docker认证的基础架构确保集装箱化的应用程序一直工作。
3.持续集成和部署[DEVOPS] 集成现代方法并通过集成Docker和DevOps来自动化开发流程。通过消除应用程序冲突并提高开发人员的生产力，容器的独立性使其有助于快速变化的环境。Docker实现了关注的真正分离，加速了DevOps流程的采用。
4.微服务 Docker容器在设计上是轻量级的，是实现微服务应用程序开发的理想选择。加速作为单个应用程序组成的数十个或数百个容器的开发，部署和回滚。无论是构建新的微服务还是将小块服务转换为更小的服务，简单易用的工具都可以轻松组合，部署和维护复杂的应用程序。
docker安装:https://docs.docker.com/engine/installation/
docker与虚拟机区别 可看出虚拟机拥有较强的隔离技术。虚拟机承载的镜像都是互相独立的。 而且虚拟机中执行的进程是被虚拟机管理的，并不与主机进程等价。
docker容器技术中，最主要一点就是容器进程与主机进程等价。省去了虚拟机进程管理的消耗。 但是这样也带来了问题。容器隔离度安全问题。
另外docker中可以两个应用共用一个库。而虚拟机因为隔离性太强，只能各用个的。</description>
    </item>
    
  </channel>
</rss>