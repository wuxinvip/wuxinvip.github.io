<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>消息中间件 on 无心技术簿</title>
    <link>https://www.wuxinvip.com/tags/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/</link>
    <description>Recent content in 消息中间件 on 无心技术簿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.wuxinvip.com/tags/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka-1.0.0版本</title>
      <link>https://www.wuxinvip.com/blog/message-queue/kafka-1/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.wuxinvip.com/blog/message-queue/kafka-1/</guid>
      <description>Kafka 1.0.0发布的主要内容如下。
0.10.0版本里开始引入的Streams API在1.0.0版本里继续演进，改进了builder API（KIP-120）， 新增了用于查看运行时活跃任务的API（KIP-130）和用于聚合分区的cogroup API（KIP-150）。增强的print()和writeAsText()方法让调试变得更容易（KIP-160）。 其他更多信息可以参考Streams文档。
改进了Connect的度量指标（KIP-196），新增了大量用于健康监测的度量指标（KIP-188）， 并提供了集群的GloabalTopicCount和GlobalPartitionCount度量指标（KIP-168）。 支持Java 9，实现更快的TLS和CRC32C，加快了加密速度，降低了计算开销。 调整了SASL认证模块的错误处理逻辑（KIP-152），原先的认证错误信息现在被清晰地记录到日志当中。 更好地支持磁盘容错（KIP-112），更优雅地处理磁盘错误，单个JBOD上的磁盘错误不会导致整个集群崩溃。 0.11.0版本中引入的幂等性生产者需要将max.in.flight.requests.per.connection参数设置为1，这对吞吐量造成了一定的限制。 而在1.0.0版本里，这个参数最大可以被设置为5（KAFKA-5949），极大提升了吞吐量范围。
关于新版本更多的变化可以查看发布说明，也可以下载源代码和二进制包（Scala 2.11、Scala 2.12）。</description>
    </item>
    
    <item>
      <title>RabbitMQ Exception</title>
      <link>https://www.wuxinvip.com/blog/message-queue/rabbitmq-exception/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.wuxinvip.com/blog/message-queue/rabbitmq-exception/</guid>
      <description>需求@RabbitListener - defining queues from properties
issues
1.5.RA版本修复
修复方式 spel表达式
 @RabbitListener(queues = {&amp;quot;#{&#39;${listener.channel}&#39;.split(&#39;,&#39;)}&amp;quot;})  </description>
    </item>
    
    <item>
      <title>RabbitMQ test</title>
      <link>https://www.wuxinvip.com/blog/message-queue/rabbitmq-test/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.wuxinvip.com/blog/message-queue/rabbitmq-test/</guid>
      <description>累积 36万条消息堆积
启动消费端【单机】
开始消费time 00:52:28 结束时间00:54:40
测试环境 三台rabbit集群 两台持久化【n/2+1】 一台非持久化
queue两个 消费由业务房监听spring streamListener完成
总计366178消息 总计消费时间132s 平均每秒2774条
单机实例消费水平收到限制
如果启动多实例消费 那么距离理论4000+4000+12000 = 20000条 有待考证 不过压力不大</description>
    </item>
    
    <item>
      <title>Rabbitmq 安装</title>
      <link>https://www.wuxinvip.com/blog/message-queue/rabbitmq-install/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.wuxinvip.com/blog/message-queue/rabbitmq-install/</guid>
      <description> eralng官方地址 : https://github.com/rabbitmq/erlang-rpm/releases socat官方地址 : https://centos.pkgs.org/7/lux/socat-1.7.3.2-5.el7.lux.x86_64.rpm.html rabbitmq 官方地址: http://www.rabbitmq.com/install-rpm.html 下载命令 erlang : curl -L -O https://github.com/rabbitmq/erlang-rpm/releases/download/v20.1.7/erlang-20.1.7-1.el7.centos.x86_64.rpm rpm -ivh erlang-20.1.7-1.el7.centos.x86_64.rpm 安装: socat yum install socat rabbitmq : curl -L -O https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.0/rabbitmq-server-3.7.0-1.el7.noarch.rpm rpm -ivh rabbitmq-server-3.7.0-1.el7.noarch.rpm 查看 rabbit状态 service rabbitmq-server status 启动rabbit service rabbitmq-server start 安装 web插件 rabbitmq-plugins enable rabbitmq_management 添加用户 rabbitmqctl add_user admin admin 给予管理权限 rabbitmqctl set_user_tags admin administrator  </description>
    </item>
    
    <item>
      <title>RocketMQ</title>
      <link>https://www.wuxinvip.com/blog/message-queue/rocketmq/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.wuxinvip.com/blog/message-queue/rocketmq/</guid>
      <description>解决问题
分布式各系统之间的消息通讯【一般用来解决事务性提交】  应用场景
各模块之间 消息调用、 高并发的数据落地 事务解决方案  使用方式
我的开源服务中集成代码
message-queue 模块
安装
curl -L -O https://github.com/alibaba/rocketmq/archive/v3.5.8.zip unzip v3.5.8.zip -d rocketmq  原理
xmind文档
生产环境遇到的问题
消息阻塞【扩consumer、查看log 是什么原因导致消息阻塞】 消息长时间不到达【优先级策略】 消息确认机制会影响消息消费速度、虽然保证了每条消费一次  </description>
    </item>
    
  </channel>
</rss>